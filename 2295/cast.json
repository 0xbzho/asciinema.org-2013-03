[[1.146305,{"lines":{"0":[["                                                                                            ",{}]],"1":[["                                                                                            ",{}]],"2":[["                                                                                            ",{}]],"3":[["                                                                                            ",{}]],"4":[["                                                                                            ",{}]],"5":[["                                                                                            ",{}]],"6":[["                                                                                            ",{}]],"7":[["                                                                                            ",{}]],"8":[["                                                                                            ",{}]],"9":[["                                                                                            ",{}]],"10":[["                                                                                            ",{}]],"11":[["                                                                                            ",{}]],"12":[["                                                                                            ",{}]],"13":[["                                                                                            ",{}]],"14":[["                                                                                            ",{}]],"15":[["                                                                                            ",{}]],"16":[["                                                                                            ",{}]],"17":[["                                                                                            ",{}]],"18":[["                                                                                            ",{}]],"19":[["                                                                                            ",{}]],"20":[["                                                                                            ",{}]],"21":[["                                                                                            ",{}]],"22":[["                                                                                            ",{}]],"23":[["                                                                                            ",{}]],"24":[["                                                                                            ",{}]],"25":[["                                                                                            ",{}]],"26":[["                                                                                            ",{}]],"27":[["                                                                                            ",{}]],"28":[["                                                                                            ",{}]],"29":[["                                                                                            ",{}]]},"cursor":{"x":0,"y":0,"visible":true}}],[0.000268,{"lines":{"0":[["jim@desktop~/bin$                                                                           ",{}]]},"cursor":{"x":18}}],[0.656152,{"lines":{"0":[["jim@desktop~/bin$ e                                                                         ",{}]]},"cursor":{"x":19}}],[0.112192,{"lines":{"0":[["jim@desktop~/bin$ em                                                                        ",{}]]},"cursor":{"x":20}}],[0.119817,{"lines":{"0":[["jim@desktop~/bin$ ema                                                                       ",{}]]},"cursor":{"x":21}}],[0.7040920000000001,{"lines":{"0":[["jim@desktop~/bin$ emac                                                                      ",{}]]},"cursor":{"x":22}}],[0.273619,{"lines":{"0":[["jim@desktop~/bin$ emacs                                                                     ",{}]]},"cursor":{"x":23}}],[1.406683,{"cursor":{"x":24}}],[0.287749,{"lines":{"0":[["jim@desktop~/bin$ emacs -                                                                   ",{}]]},"cursor":{"x":25}}],[0.896357,{"lines":{"0":[["jim@desktop~/bin$ emacs -n                                                                  ",{}]]},"cursor":{"x":26}}],[0.7674299999999999,{"lines":{"0":[["jim@desktop~/bin$ emacs -no                                                                 ",{}]]},"cursor":{"x":27}}],[0.512467,{"lines":{"0":[["jim@desktop~/bin$ emacs -n                                                                  ",{}]]},"cursor":{"x":26}}],[0.259833,{}],[0.192171,{}],[0.171565,{"lines":{"0":[["jim@desktop~/bin$ emacs -                                                                   ",{}]]},"cursor":{"x":25}}],[0.656107,{"lines":{"0":[["jim@desktop~/bin$ emacs --                                                                  ",{}]]},"cursor":{"x":26}}],[0.351902,{"lines":{"0":[["jim@desktop~/bin$ emacs --h                                                                 ",{}]]},"cursor":{"x":27}}],[0.144095,{"lines":{"0":[["jim@desktop~/bin$ emacs --he                                                                ",{}]]},"cursor":{"x":28}}],[0.048042,{"lines":{"0":[["jim@desktop~/bin$ emacs --hel                                                               ",{}]]},"cursor":{"x":29}}],[0.184083,{"lines":{"0":[["jim@desktop~/bin$ emacs --help                                                              ",{}]]},"cursor":{"x":30}}],[0.224483,{"cursor":{"x":0,"y":1}}],[0.349865,{"lines":{"1":[["Usage: emacs [OPTION-OR-FILENAME]...                                                        ",{}]],"3":[["Run Emacs, the extensible, customizable, self-documenting real-time                         ",{}]],"4":[["display editor.  The recommended way to start Emacs for normal editing                      ",{}]],"5":[["is with no options at all.                                                                  ",{}]]},"cursor":{"x":26,"y":5}}],[0.0006449999999999998,{"lines":{"0":[["--fullheight, -fh               make the first frame high as the screen                     ",{}]],"1":[["--fullscreen, -fs               make the first frame fullscreen                             ",{}]],"2":[["--fullwidth, -fw                make the first frame wide as the screen                     ",{}]],"3":[["--maximized, -mm                make the first frame maximized                              ",{}]],"4":[["--geometry, -g GEOMETRY         window geometry                                             ",{}]],"5":[["--no-bitmap-icon, -nbi          do not use picture of gnu for Emacs icon                    ",{}]],"6":[["--iconic                        start Emacs in iconified state                              ",{}]],"7":[["--internal-border, -ib WIDTH    width between text and main border                          ",{}]],"8":[["--line-spacing, -lsp PIXELS     additional space to put between lines                       ",{}]],"9":[["--mouse-color, -ms COLOR        mouse cursor color in Emacs window                          ",{}]],"10":[["--name NAME                     title for initial Emacs frame                               ",{}]],"11":[["--no-blinking-cursor, -nbc      disable blinking cursor                                     ",{}]],"12":[["--reverse-video, -r, -rv        switch foreground and background                            ",{}]],"13":[["--title, -T TITLE               title for initial Emacs frame                               ",{}]],"14":[["--vertical-scroll-bars, -vb     enable vertical scroll bars                                 ",{}]],"15":[["--xrm XRESOURCES                set additional X resources                                  ",{}]],"16":[["--parent-id XID                 set parent window                                           ",{}]],"17":[["--help                          display this help and exit                                  ",{}]],"18":[["--version                       output version information and exit                         ",{}]],"20":[["You can generally also specify long option names with a single -; for                       ",{}]],"21":[["example, -batch as well as --batch.  You can use any unambiguous                            ",{}]],"22":[["abbreviation for a --option.                                                                ",{}]],"24":[["Various environment variables and window system resources also affect                       ",{}]],"25":[["Emacs' operation.  See the main documentation.                                              ",{}]],"27":[["Report bugs to bug-gnu-emacs@gnu.org.  First, please see the Bugs                           ",{}]],"28":[["section of the Emacs manual or the file BUGS.                                               ",{}]]},"cursor":{"x":0,"y":29}}],[0.054885,{"lines":{"29":[["jim@desktop~/bin$                                                                           ",{}]]},"cursor":{"x":18}}],[56.794224,{"lines":{"0":[["--fullscreen, -fs               make the first frame fullscreen                             ",{}]],"1":[["--fullwidth, -fw                make the first frame wide as the screen                     ",{}]],"2":[["--maximized, -mm                make the first frame maximized                              ",{}]],"3":[["--geometry, -g GEOMETRY         window geometry                                             ",{}]],"4":[["--no-bitmap-icon, -nbi          do not use picture of gnu for Emacs icon                    ",{}]],"5":[["--iconic                        start Emacs in iconified state                              ",{}]],"6":[["--internal-border, -ib WIDTH    width between text and main border                          ",{}]],"7":[["--line-spacing, -lsp PIXELS     additional space to put between lines                       ",{}]],"8":[["--mouse-color, -ms COLOR        mouse cursor color in Emacs window                          ",{}]],"9":[["--name NAME                     title for initial Emacs frame                               ",{}]],"10":[["--no-blinking-cursor, -nbc      disable blinking cursor                                     ",{}]],"11":[["--reverse-video, -r, -rv        switch foreground and background                            ",{}]],"12":[["--title, -T TITLE               title for initial Emacs frame                               ",{}]],"13":[["--vertical-scroll-bars, -vb     enable vertical scroll bars                                 ",{}]],"14":[["--xrm XRESOURCES                set additional X resources                                  ",{}]],"15":[["--parent-id XID                 set parent window                                           ",{}]],"16":[["--help                          display this help and exit                                  ",{}]],"17":[["--version                       output version information and exit                         ",{}]],"18":[["                                                                                            ",{}]],"19":[["You can generally also specify long option names with a single -; for                       ",{}]],"20":[["example, -batch as well as --batch.  You can use any unambiguous                            ",{}]],"21":[["abbreviation for a --option.                                                                ",{}]],"22":[["                                                                                            ",{}]],"23":[["Various environment variables and window system resources also affect                       ",{}]],"24":[["Emacs' operation.  See the main documentation.                                              ",{}]],"25":[["                                                                                            ",{}]],"26":[["Report bugs to bug-gnu-emacs@gnu.org.  First, please see the Bugs                           ",{}]],"27":[["section of the Emacs manual or the file BUGS.                                               ",{}]],"28":[["jim@desktop~/bin$                                                                           ",{}]]}}],[0.15195,{"lines":{"0":[["--fullwidth, -fw                make the first frame wide as the screen                     ",{}]],"1":[["--maximized, -mm                make the first frame maximized                              ",{}]],"2":[["--geometry, -g GEOMETRY         window geometry                                             ",{}]],"3":[["--no-bitmap-icon, -nbi          do not use picture of gnu for Emacs icon                    ",{}]],"4":[["--iconic                        start Emacs in iconified state                              ",{}]],"5":[["--internal-border, -ib WIDTH    width between text and main border                          ",{}]],"6":[["--line-spacing, -lsp PIXELS     additional space to put between lines                       ",{}]],"7":[["--mouse-color, -ms COLOR        mouse cursor color in Emacs window                          ",{}]],"8":[["--name NAME                     title for initial Emacs frame                               ",{}]],"9":[["--no-blinking-cursor, -nbc      disable blinking cursor                                     ",{}]],"10":[["--reverse-video, -r, -rv        switch foreground and background                            ",{}]],"11":[["--title, -T TITLE               title for initial Emacs frame                               ",{}]],"12":[["--vertical-scroll-bars, -vb     enable vertical scroll bars                                 ",{}]],"13":[["--xrm XRESOURCES                set additional X resources                                  ",{}]],"14":[["--parent-id XID                 set parent window                                           ",{}]],"15":[["--help                          display this help and exit                                  ",{}]],"16":[["--version                       output version information and exit                         ",{}]],"17":[["                                                                                            ",{}]],"18":[["You can generally also specify long option names with a single -; for                       ",{}]],"19":[["example, -batch as well as --batch.  You can use any unambiguous                            ",{}]],"20":[["abbreviation for a --option.                                                                ",{}]],"21":[["                                                                                            ",{}]],"22":[["Various environment variables and window system resources also affect                       ",{}]],"23":[["Emacs' operation.  See the main documentation.                                              ",{}]],"24":[["                                                                                            ",{}]],"25":[["Report bugs to bug-gnu-emacs@gnu.org.  First, please see the Bugs                           ",{}]],"26":[["section of the Emacs manual or the file BUGS.                                               ",{}]],"27":[["jim@desktop~/bin$                                                                           ",{}]]}}],[0.375751,{"lines":{"29":[["jim@desktop~/bin$ emacs --help                                                              ",{}]]},"cursor":{"x":30}}],[0.696092,{"cursor":{"x":31}}],[0.296132,{"cursor":{"x":30}}],[0.103789,{"lines":{"29":[["jim@desktop~/bin$ emacs --hel                                                               ",{}]]},"cursor":{"x":29}}],[0.120122,{"lines":{"29":[["jim@desktop~/bin$ emacs --he                                                                ",{}]]},"cursor":{"x":28}}],[0.120013,{"lines":{"29":[["jim@desktop~/bin$ emacs --h                                                                 ",{}]]},"cursor":{"x":27}}],[0.440001,{"lines":{"29":[["jim@desktop~/bin$ emacs --                                                                  ",{}]]},"cursor":{"x":26}}],[0.208013,{"lines":{"29":[["jim@desktop~/bin$ emacs --n                                                                 ",{}]]},"cursor":{"x":27}}],[0.199816,{"lines":{"29":[["jim@desktop~/bin$ emacs --nw                                                                ",{}]]},"cursor":{"x":28}}],[0.360442,{"lines":{"0":[["--maximized, -mm                make the first frame maximized                              ",{}]],"1":[["--geometry, -g GEOMETRY         window geometry                                             ",{}]],"2":[["--no-bitmap-icon, -nbi          do not use picture of gnu for Emacs icon                    ",{}]],"3":[["--iconic                        start Emacs in iconified state                              ",{}]],"4":[["--internal-border, -ib WIDTH    width between text and main border                          ",{}]],"5":[["--line-spacing, -lsp PIXELS     additional space to put between lines                       ",{}]],"6":[["--mouse-color, -ms COLOR        mouse cursor color in Emacs window                          ",{}]],"7":[["--name NAME                     title for initial Emacs frame                               ",{}]],"8":[["--no-blinking-cursor, -nbc      disable blinking cursor                                     ",{}]],"9":[["--reverse-video, -r, -rv        switch foreground and background                            ",{}]],"10":[["--title, -T TITLE               title for initial Emacs frame                               ",{}]],"11":[["--vertical-scroll-bars, -vb     enable vertical scroll bars                                 ",{}]],"12":[["--xrm XRESOURCES                set additional X resources                                  ",{}]],"13":[["--parent-id XID                 set parent window                                           ",{}]],"14":[["--help                          display this help and exit                                  ",{}]],"15":[["--version                       output version information and exit                         ",{}]],"16":[["                                                                                            ",{}]],"17":[["You can generally also specify long option names with a single -; for                       ",{}]],"18":[["example, -batch as well as --batch.  You can use any unambiguous                            ",{}]],"19":[["abbreviation for a --option.                                                                ",{}]],"20":[["                                                                                            ",{}]],"21":[["Various environment variables and window system resources also affect                       ",{}]],"22":[["Emacs' operation.  See the main documentation.                                              ",{}]],"23":[["                                                                                            ",{}]],"24":[["Report bugs to bug-gnu-emacs@gnu.org.  First, please see the Bugs                           ",{}]],"25":[["section of the Emacs manual or the file BUGS.                                               ",{}]],"26":[["jim@desktop~/bin$                                                                           ",{}]],"28":[["jim@desktop~/bin$ emacs --nw                                                                ",{}]],"29":[["                                                                                            ",{}]]},"cursor":{"x":0}}],[7.644591,{"lines":{"29":[["jim@desktop~/bin$                                                                           ",{}]]},"cursor":{"x":18}}],[1.418985,{"lines":{"29":[["jim@desktop~/bin$ emacs --nw                                                                ",{}]]},"cursor":{"x":28}}],[0.304102,{"cursor":{"x":27}}],[0.143997,{"cursor":{"x":26}}],[0.640074,{"lines":{"29":[["jim@desktop~/bin$ emacs -nw                                                                 ",{}]]},"cursor":{"x":25}}],[0.248371,{"lines":{"0":[["--geometry, -g GEOMETRY         window geometry                                             ",{}]],"1":[["--no-bitmap-icon, -nbi          do not use picture of gnu for Emacs icon                    ",{}]],"2":[["--iconic                        start Emacs in iconified state                              ",{}]],"3":[["--internal-border, -ib WIDTH    width between text and main border                          ",{}]],"4":[["--line-spacing, -lsp PIXELS     additional space to put between lines                       ",{}]],"5":[["--mouse-color, -ms COLOR        mouse cursor color in Emacs window                          ",{}]],"6":[["--name NAME                     title for initial Emacs frame                               ",{}]],"7":[["--no-blinking-cursor, -nbc      disable blinking cursor                                     ",{}]],"8":[["--reverse-video, -r, -rv        switch foreground and background                            ",{}]],"9":[["--title, -T TITLE               title for initial Emacs frame                               ",{}]],"10":[["--vertical-scroll-bars, -vb     enable vertical scroll bars                                 ",{}]],"11":[["--xrm XRESOURCES                set additional X resources                                  ",{}]],"12":[["--parent-id XID                 set parent window                                           ",{}]],"13":[["--help                          display this help and exit                                  ",{}]],"14":[["--version                       output version information and exit                         ",{}]],"15":[["                                                                                            ",{}]],"16":[["You can generally also specify long option names with a single -; for                       ",{}]],"17":[["example, -batch as well as --batch.  You can use any unambiguous                            ",{}]],"18":[["abbreviation for a --option.                                                                ",{}]],"19":[["                                                                                            ",{}]],"20":[["Various environment variables and window system resources also affect                       ",{}]],"21":[["Emacs' operation.  See the main documentation.                                              ",{}]],"22":[["                                                                                            ",{}]],"23":[["Report bugs to bug-gnu-emacs@gnu.org.  First, please see the Bugs                           ",{}]],"24":[["section of the Emacs manual or the file BUGS.                                               ",{}]],"25":[["jim@desktop~/bin$                                                                           ",{}]],"27":[["jim@desktop~/bin$ emacs --nw                                                                ",{}]],"28":[["jim@desktop~/bin$ emacs -nw                                                                 ",{}]],"29":[["                                                                                            ",{}]]},"cursor":{"x":0}}],[0.015719,{"lines":{"0":[["                                                                                            ",{}]],"1":[["                                                                                            ",{}]],"2":[["                                                                                            ",{}]],"3":[["                                                                                            ",{}]],"4":[["                                                                                            ",{}]],"5":[["                                                                                            ",{}]],"6":[["                                                                                            ",{}]],"7":[["                                                                                            ",{}]],"8":[["                                                                                            ",{}]],"9":[["                                                                                            ",{}]],"10":[["                                                                                            ",{}]],"11":[["                                                                                            ",{}]],"12":[["                                                                                            ",{}]],"13":[["                                                                                            ",{}]],"14":[["                                                                                            ",{}]],"16":[["                                                                                            ",{}]],"17":[["                                                                                            ",{}]],"18":[["                                                                                            ",{}]],"20":[["                                                                                            ",{}]],"21":[["                                                                                            ",{}]],"23":[["                                                                                            ",{}]],"24":[["                                                                                            ",{}]],"25":[["                                                                                            ",{}]],"26":[["                                                                                            ",{}]],"27":[["                                                                                            ",{}]],"28":[["                                                                                            ",{}]]}}],[0.028671,{"cursor":{"y":0}}],[0.014199,{"lines":{"28":[["-UUU:----F1  ",{"inverse":true}],["*scratch*   ",{"bold":true,"inverse":true}],["   All L1     (Fundamental) ---------------------------------------",{"inverse":true}]]},"cursor":{"y":1}}],[0.010812,{"lines":{"29":[["Loading /etc/emacs/site-start.d/50dictionaries-common.el (source)...                        ",{}]]}}],[0.014467,{"lines":{"29":[["Loading /etc/emacs/site-start.d/50dictionaries-common.el (source)...done                    ",{}]]}}],[0.099061,{"lines":{"29":[["Loading /home/jim/.viper...                                                                 ",{}]]}}],[0.009046999999999999,{"lines":{"29":[["                                                                                            ",{}]]}}],[0.408739,{"lines":{"29":[["Loading desktop...                                                                          ",{}]]}}],[0.011287,{"lines":{"0":[["File Edit Options Buffers Tools Help                                                        ",{"inverse":true}]],"14":[["-UUU:----F1  ",{"inverse":true}],["*scratch*   ",{"bold":true,"inverse":true}],["   All L1     (Fundamental) <V>  ----------------------------------",{"inverse":true}]],"15":[["Warning (initialization): An error occurred while loading `/home/jim/.emacs':               ",{}]],"17":[["error: X windows are not in use or not initialized                                          ",{}]],"19":[["To ensure normal operation, you should investigate and remove the                           ",{}]],"20":[["cause of the error in your initialization file.  Start Emacs with                           ",{}]],"21":[["the `--debug-init' option to view a complete error backtrace.                               ",{}]],"28":[["-UUU:%*--F1  ",{"inverse":true}],["*Warnings*  ",{"bold":true,"inverse":true}],["   All L8     (Special)  ------------------------------------------",{"inverse":true}]],"29":[["Loading desktop...done                                                                      ",{}]]}}],[0.036583,{"lines":{"13":[["-UUU:----F1  ",{"inverse":true}],["*scratch*   ",{"bold":true,"inverse":true}],["   All L1     (Fundamental) <V>  ----------------------------------",{"inverse":true}]],"14":[["Warning (initialization): An error occurred while loading `/home/jim/.emacs':               ",{}]],"15":[["                                                                                            ",{}]],"16":[["error: X windows are not in use or not initialized                                          ",{}]],"17":[["                                                                                            ",{}]],"18":[["To ensure normal operation, you should investigate and remove the                           ",{}]],"19":[["cause of the error in your initialization file.  Start Emacs with                           ",{}]],"20":[["the `--debug-init' option to view a complete error backtrace.                               ",{}]],"21":[["                                                                                            ",{}]],"27":[["-UUU:%*--F1  ",{"inverse":true}],["*Warnings*  ",{"bold":true,"inverse":true}],["   All L8     (Special)  ------------------------------------------",{"inverse":true}]],"28":[["                                                                                            ",{}]],"29":[["Using it may cause conflicts.  Use it anyway? (y or n) ",{"fg":4}],["                                     ",{}]]},"cursor":{"x":55,"y":29,"visible":false}}],[5.5e-05,{"lines":{"28":[["Warning: desktop file appears to be in use by PID 4571.                                     ",{"fg":4}]]},"cursor":{"visible":true}}],[2.831286,{"lines":{"28":[["Warning: desktop file appears to be in use by PID 4571.                                     ",{}]],"29":[["Using it may cause conflicts.  Use it anyway? (y or n)  y                                   ",{}]]},"cursor":{"x":0,"y":1}}],[0.057476,{"lines":{"28":[["Loading vc-git...                                                                           ",{}]],"29":[["                                                                                            ",{}]]}}],[0.004861,{"lines":{"28":[["Loading vc-git...done                                                                       ",{}]]}}],[0.965531,{"lines":{"28":[["Loading vc-svn...                                                                           ",{}]]}}],[0.003191,{"lines":{"28":[["Loading vc-svn...done                                                                       ",{}]]}}],[0.467531,{"lines":{"28":[["Loading cc-mode...                                                                          ",{}]]}}],[0.177639,{"lines":{"28":[["Loading cc-mode...done                                                                      ",{}]]}}],[1.860084,{"lines":{"28":[["Loading dired...                                                                            ",{}]]}}],[0.045845,{"lines":{"28":[["Loading dired...done                                                                        ",{}]]}}],[0.107547,{"lines":{"28":[["Note: file is write protected                                                               ",{}]]}}],[0.153305,{"lines":{"28":[["Loading /home/jim/emacs-lisp/python.el (source)...                                          ",{}]]}}],[0.092879,{"lines":{"28":[["Loading /home/jim/emacs-lisp/python.el (source)...done                                      ",{}]]}}],[0.037497,{"lines":{"28":[["Loading sh-script...                                                                        ",{}]]}}],[0.047526,{"lines":{"28":[["Loading sh-script...done                                                                    ",{}]]}}],[0.004801,{"lines":{"28":[["Indentation setup for shell type sh                                                         ",{}]]}}],[0.154223,{"lines":{"28":[["Setting up indent for shell type bash                                                       ",{}]]}}],[0.000574,{"lines":{"28":[["Indentation setup for shell type bash                                                       ",{}]]}}],[0.438008,{"lines":{"28":[["desktop-after-read-hook                                                                     ",{}]]}}],[0.004992,{"lines":{"28":[["(New file)                                                                                  ",{}]]}}],[0.229428,{"lines":{"28":[["[yas] Prepared just-in-time loading for ~/emacs-lisp/my_yas/                                ",{}]]}}],[0.012649,{"lines":{"28":[["[yas] Loading compiled snippets from /home/jim/emacs-lisp/my_yas/c++-mode                   ",{}]]}}],[0.010362,{"lines":{"28":[["[yas] Loading compiled snippets from /home/jim/emacs-lisp/my_yas/c-mode                     ",{}]]}}],[0.015849,{"lines":{"28":[["[yas] Loading compiled snippets from /home/jim/emacs-lisp/my_yas/cc-mode                    ",{}]]}}],[0.082729,{}],[0.014363,{"lines":{"0":[["File Edit Options Buffers Tools Emacs-Lisp YASnippet Help                                   ",{"inverse":true}]],"1":[["      (comment-or-uncomment-region (line-beginning-position) (line-end-position))           ",{}]],"2":[["    (comment-dwim arg)))                                                                    ",{}]],"5":[[";;------------------------------------------------------------                              ",{"fg":1}]],"7":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["begin-line-and-insert-lin",{"fg":4,"bold":true}],["e",{"fg":7,"bg":4,"bold":true}],[" ( arg)                                                    ",{"fg":7,"bg":4}]],"8":[["  \"C-o\"                                                                                     ",{"fg":7,"bg":4}]],"9":[["  (interactive \"P\")                                                                         ",{"fg":7,"bg":4}]],"10":[["  (move-beginning-of-line 1)                                                                ",{"fg":7,"bg":4}]],"11":[["  (open-line 1))                                                                            ",{"fg":7,"bg":4}]],"12":[["                                                                                            ",{"fg":7,"bg":4}]],"13":[[";;                                                                                          ",{"fg":7,"bg":4}]],"14":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   71% L339  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]],"15":[["Warning (initialization): An error occurred while loading `/home/jim/.emacs':               ",{}]],"16":[["                                                                                            ",{}]],"17":[["error: X windows are not in use or not initialized                                          ",{}]],"18":[["                                                                                            ",{}]],"19":[["To ensure normal operation, you should investigate and remove the                           ",{}]],"20":[["cause of the error in your initialization file.  Start Emacs with                           ",{}]],"21":[["the `--debug-init' option to view a complete error backtrace.                               ",{}]],"27":[["                                                                                            ",{}]],"28":[["-UUU:%*--F1  ",{"inverse":true}],["*Warnings*  ",{"bold":true,"inverse":true}],["   All L8     (Special yas)  --------------------------------------",{"inverse":true}]],"29":[["For information about GNU Emacs and the GNU system, type C-h C-a.                           ",{}]]},"cursor":{"x":32,"y":7}}],[0.007948,{"lines":{"14":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   71% L339  Git:master  (Emacs-Lisp yas AC) <VIS>  --------------",{"inverse":true}]]}}],[1.297281,{"lines":{"29":[["                                                                                            ",{}]]},"cursor":{"x":0,"y":0,"visible":false}}],[8.099999999999999e-05,{"lines":{"7":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["begin-line-and-insert-line",{"fg":4,"bold":true}],[" ( arg)                                                    ",{}]],"8":[["  ",{}],["\"C-o\"",{"fg":2}],["                                                                                     ",{}]],"9":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"10":[["  (move-beginning-of-line 1)                                                                ",{}]],"11":[["  (open-line 1))                                                                            ",{}]],"12":[["                                                                                            ",{}]],"13":[[";;                                                                                          ",{"fg":1}]],"14":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   71% L339  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":32,"y":7,"visible":true}}],[0.106241,{"lines":{"14":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   71% L340  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":6,"y":8}}],[0.163079,{"lines":{"14":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   71% L341  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":18,"y":9}}],[0.000607,{"lines":{"9":[["  ",{}],["(",{"bg":6}],["interactive ",{}],["\"P\"",{"fg":2}],[")",{"bg":6}],["                                                                         ",{}]]}}],[0.101117,{"lines":{"9":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"10":[["  ",{}],["(",{"bg":6}],["move-beginning-of-line 1",{}],[")",{"bg":6}],["                                                                ",{}]],"14":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   71% L342  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":27,"y":10}}],[0.151777,{"lines":{"7":[["(",{"bg":6}],["defun",{"fg":6,"bold":true}],[" ",{}],["begin-line-and-insert-line",{"fg":4,"bold":true}],[" ( arg)                                                    ",{}]],"10":[["  (move-beginning-of-line 1)                                                                ",{}]],"11":[["  (open-line 1)",{}],[")",{"bg":6}],["                                                                            ",{}]],"14":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   71% L343  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":15,"y":11}}],[0.499985,{"lines":{"7":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["begin-line-and-insert-line",{"fg":4,"bold":true}],[" ( arg)                                                    ",{}]],"11":[["  (open-line 1))                                                                            ",{}]],"14":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   71% L344  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":0,"y":12}}],[0.030603,{"lines":{"14":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   71% L345  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":1,"y":13}}],[0.031035,{"lines":{"1":[["    (comment-dwim arg)))                                                                    ",{}]],"2":[["                                                                                            ",{}]],"4":[[";;------------------------------------------------------------                              ",{"fg":1}]],"5":[["                                                                                            ",{}]],"6":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["begin-line-and-insert-line",{"fg":4,"bold":true}],[" ( arg)                                                    ",{}]],"7":[["  ",{}],["\"C-o\"",{"fg":2}],["                                                                                     ",{}]],"8":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"9":[["  (move-beginning-of-line 1)                                                                ",{}]],"10":[["  (open-line 1))                                                                            ",{}]],"11":[["                                                                                            ",{}]],"12":[[";;                                                                                          ",{"fg":1}]],"13":[["(",{}],["defun",{"fg":6,"bold":true}],["  ",{}],["region-indent-ex",{"fg":4,"bold":true}],[" ( is-add )                                                         ",{}]],"14":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   71% L346  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":32}}],[0.030838,{"lines":{"1":[["                                                                                            ",{}]],"3":[[";;------------------------------------------------------------                              ",{"fg":1}]],"4":[["                                                                                            ",{}]],"5":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["begin-line-and-insert-line",{"fg":4,"bold":true}],[" ( arg)                                                    ",{}]],"6":[["  ",{}],["\"C-o\"",{"fg":2}],["                                                                                     ",{}]],"7":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"8":[["  (move-beginning-of-line 1)                                                                ",{}]],"9":[["  (open-line 1))                                                                            ",{}]],"10":[["                                                                                            ",{}]],"11":[[";;                                                                                          ",{"fg":1}]],"12":[["(",{}],["defun",{"fg":6,"bold":true}],["  ",{}],["region-indent-ex",{"fg":4,"bold":true}],[" ( is-add )                                                         ",{}]],"13":[["  ",{}],["\"整体缩进\"",{"fg":2}],["                                                                                ",{}]],"14":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   71% L347  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":11}}],[0.031623,{"lines":{"2":[[";;------------------------------------------------------------                              ",{"fg":1}]],"3":[["                                                                                            ",{}]],"4":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["begin-line-and-insert-line",{"fg":4,"bold":true}],[" ( arg)                                                    ",{}]],"5":[["  ",{}],["\"C-o\"",{"fg":2}],["                                                                                     ",{}]],"6":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"7":[["  (move-beginning-of-line 1)                                                                ",{}]],"8":[["  (open-line 1))                                                                            ",{}]],"9":[["                                                                                            ",{}]],"10":[[";;                                                                                          ",{"fg":1}]],"11":[["(",{}],["defun",{"fg":6,"bold":true}],["  ",{}],["region-indent-ex",{"fg":4,"bold":true}],[" ( is-add )                                                         ",{}]],"12":[["  ",{}],["\"整体缩进\"",{"fg":2}],["                                                                                ",{}]],"13":[["  ",{}],["(",{"bg":6}],["interactive",{}],[")",{"bg":6}],["                                                                             ",{}]],"14":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   71% L348  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":14}}],[0.02979,{"lines":{"1":[[";;------------------------------------------------------------                              ",{"fg":1}]],"2":[["                                                                                            ",{}]],"3":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["begin-line-and-insert-line",{"fg":4,"bold":true}],[" ( arg)                                                    ",{}]],"4":[["  ",{}],["\"C-o\"",{"fg":2}],["                                                                                     ",{}]],"5":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"6":[["  (move-beginning-of-line 1)                                                                ",{}]],"7":[["  (open-line 1))                                                                            ",{}]],"8":[["                                                                                            ",{}]],"9":[[";;                                                                                          ",{"fg":1}]],"10":[["(",{}],["defun",{"fg":6,"bold":true}],["  ",{}],["region-indent-ex",{"fg":4,"bold":true}],[" ( is-add )                                                         ",{}]],"11":[["  ",{}],["\"整体缩进\"",{"fg":2}],["                                                                                ",{}]],"12":[["  (interactive)                                                                             ",{}]],"13":[["  (",{}],["save-excursion",{"fg":6,"bold":true}],["                                                                           ",{}]],"14":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   71% L349  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":16}}],[0.034943,{"lines":{"1":[["                                                                                            ",{}]],"2":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["begin-line-and-insert-line",{"fg":4,"bold":true}],[" ( arg)                                                    ",{}]],"3":[["  ",{}],["\"C-o\"",{"fg":2}],["                                                                                     ",{}]],"4":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"5":[["  (move-beginning-of-line 1)                                                                ",{}]],"6":[["  (open-line 1))                                                                            ",{}]],"7":[["                                                                                            ",{}]],"8":[[";;                                                                                          ",{"fg":1}]],"9":[["(",{}],["defun",{"fg":6,"bold":true}],["  ",{}],["region-indent-ex",{"fg":4,"bold":true}],[" ( is-add )                                                         ",{}]],"10":[["  ",{}],["\"整体缩进\"",{"fg":2}],["                                                                                ",{}]],"11":[["  (interactive)                                                                             ",{}]],"12":[["  (",{}],["save-excursion",{"fg":6,"bold":true}],["                                                                           ",{}]],"13":[["    (setq mark-pos  (get-mark-pos-ex))                                                      ",{}]],"14":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   72% L350  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":32}}],[0.025389,{"lines":{"1":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["begin-line-and-insert-line",{"fg":4,"bold":true}],[" ( arg)                                                    ",{}]],"2":[["  ",{}],["\"C-o\"",{"fg":2}],["                                                                                     ",{}]],"3":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"4":[["  (move-beginning-of-line 1)                                                                ",{}]],"5":[["  (open-line 1))                                                                            ",{}]],"6":[["                                                                                            ",{}]],"7":[[";;                                                                                          ",{"fg":1}]],"8":[["(",{}],["defun",{"fg":6,"bold":true}],["  ",{}],["region-indent-ex",{"fg":4,"bold":true}],[" ( is-add )                                                         ",{}]],"9":[["  ",{}],["\"整体缩进\"",{"fg":2}],["                                                                                ",{}]],"10":[["  (interactive)                                                                             ",{}]],"11":[["  (",{}],["save-excursion",{"fg":6,"bold":true}],["                                                                           ",{}]],"12":[["    (setq mark-pos  (get-mark-pos-ex))                                                      ",{}]],"13":[["    (message  ",{}],["\"%d %d\"",{"fg":2}],[" (car mark-pos) (cadr mark-pos) )                                      ",{}]],"14":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   72% L351  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]}}],[0.031176,{"lines":{"1":[["  ",{}],["\"C-o\"",{"fg":2}],["                                                                                     ",{}]],"2":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"3":[["  (move-beginning-of-line 1)                                                                ",{}]],"4":[["  (open-line 1))                                                                            ",{}]],"5":[["                                                                                            ",{}]],"6":[[";;                                                                                          ",{"fg":1}]],"7":[["(",{}],["defun",{"fg":6,"bold":true}],["  ",{}],["region-indent-ex",{"fg":4,"bold":true}],[" ( is-add )                                                         ",{}]],"8":[["  ",{}],["\"整体缩进\"",{"fg":2}],["                                                                                ",{}]],"9":[["  (interactive)                                                                             ",{}]],"10":[["  (",{}],["save-excursion",{"fg":6,"bold":true}],["                                                                           ",{}]],"11":[["    (setq mark-pos  (get-mark-pos-ex))                                                      ",{}]],"12":[["    (message  ",{}],["\"%d %d\"",{"fg":2}],[" (car mark-pos) (cadr mark-pos) )                                      ",{}]],"13":[["                                                                                            ",{}]]},"cursor":{"x":0,"y":1}}],[0.000196,{"lines":{"13":[["    (",{}],["if",{"fg":6,"bold":true}],[" is-add                                                                              ",{}]],"14":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   72% L352  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":13,"y":13}}],[0.029059,{"lines":{"1":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"2":[["  (move-beginning-of-line 1)                                                                ",{}]],"3":[["  (open-line 1))                                                                            ",{}]],"4":[["                                                                                            ",{}]],"5":[[";;                                                                                          ",{"fg":1}]],"6":[["(",{}],["defun",{"fg":6,"bold":true}],["  ",{}],["region-indent-ex",{"fg":4,"bold":true}],[" ( is-add )                                                         ",{}]],"7":[["  ",{}],["\"整体缩进\"",{"fg":2}],["                                                                                ",{}]],"8":[["  (interactive)                                                                             ",{}]],"9":[["  (",{}],["save-excursion",{"fg":6,"bold":true}],["                                                                           ",{}]],"10":[["    (setq mark-pos  (get-mark-pos-ex))                                                      ",{}]],"11":[["    (message  ",{}],["\"%d %d\"",{"fg":2}],[" (car mark-pos) (cadr mark-pos) )                                      ",{}]],"12":[["    (",{}],["if",{"fg":6,"bold":true}],[" is-add                                                                              ",{}]],"13":[["        (replace-regexp ",{}],["\"^\"",{"fg":2}],[" ",{}],["\"\\t\"",{"fg":2}],[" nil (nth 0 mark-pos) (- (nth 1 mark-pos) 1) )              ",{}]],"14":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   72% L353  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":32}}],[0.030416,{"lines":{"1":[["  (move-beginning-of-line 1)                                                                ",{}]],"2":[["  (open-line 1))                                                                            ",{}]],"3":[["                                                                                            ",{}]],"4":[[";;                                                                                          ",{"fg":1}]],"5":[["(",{}],["defun",{"fg":6,"bold":true}],["  ",{}],["region-indent-ex",{"fg":4,"bold":true}],[" ( is-add )                                                         ",{}]],"6":[["  ",{}],["\"整体缩进\"",{"fg":2}],["                                                                                ",{}]],"7":[["  (interactive)                                                                             ",{}]],"8":[["  (",{}],["save-excursion",{"fg":6,"bold":true}],["                                                                           ",{}]],"9":[["    (setq mark-pos  (get-mark-pos-ex))                                                      ",{}]],"10":[["    (message  ",{}],["\"%d %d\"",{"fg":2}],[" (car mark-pos) (cadr mark-pos) )                                      ",{}]],"11":[["    (",{}],["if",{"fg":6,"bold":true}],[" is-add                                                                              ",{}]],"12":[["        (replace-regexp ",{}],["\"^\"",{"fg":2}],[" ",{}],["\"\\t\"",{"fg":2}],[" nil (nth 0 mark-pos) (- (nth 1 mark-pos) 1) )              ",{}]],"13":[["      (replace-regexp ",{}],["\"^\\t\"",{"fg":2}],[" ",{}],["\"\"",{"fg":2}],[" nil (nth 0 mark-pos) (- (nth 1 mark-pos)  1)))               ",{}]],"14":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   72% L354  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]}}],[0.031043,{"lines":{"1":[["  (open-line 1))                                                                            ",{}]],"2":[["                                                                                            ",{}]],"3":[[";;                                                                                          ",{"fg":1}]],"4":[["(",{}],["defun",{"fg":6,"bold":true}],["  ",{}],["region-indent-ex",{"fg":4,"bold":true}],[" ( is-add )                                                         ",{}]],"5":[["  ",{}],["\"整体缩进\"",{"fg":2}],["                                                                                ",{}]],"6":[["  (interactive)                                                                             ",{}]],"7":[["  (",{}],["save-excursion",{"fg":6,"bold":true}],["                                                                           ",{}]],"8":[["    (setq mark-pos  (get-mark-pos-ex))                                                      ",{}]],"9":[["    (message  ",{}],["\"%d %d\"",{"fg":2}],[" (car mark-pos) (cadr mark-pos) )                                      ",{}]],"10":[["    (",{}],["if",{"fg":6,"bold":true}],[" is-add                                                                              ",{}]],"11":[["        (replace-regexp ",{}],["\"^\"",{"fg":2}],[" ",{}],["\"\\t\"",{"fg":2}],[" nil (nth 0 mark-pos) (- (nth 1 mark-pos) 1) )              ",{}]],"12":[["      (replace-regexp ",{}],["\"^\\t\"",{"fg":2}],[" ",{}],["\"\"",{"fg":2}],[" nil (nth 0 mark-pos) (- (nth 1 mark-pos)  1)))               ",{}]],"13":[["    ))                                                                                      ",{}]],"14":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   73% L355  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":5}}],[0.000506,{"lines":{"4":[["(",{"bg":6}],["defun",{"fg":6,"bold":true}],["  ",{}],["region-indent-ex",{"fg":4,"bold":true}],[" ( is-add )                                                         ",{}]],"13":[["    )",{}],[")",{"bg":6}],["                                                                                      ",{}]]}}],[0.029826,{"lines":{"1":[["                                                                                            ",{}]],"2":[[";;                                                                                          ",{"fg":1}]],"3":[["(",{"bg":6}],["defun",{"fg":6,"bold":true}],["  ",{}],["region-indent-ex",{"fg":4,"bold":true}],[" ( is-add )                                                         ",{}]],"4":[["  ",{}],["\"整体缩进\"",{"fg":2}],["                                                                                ",{}]],"5":[["  (interactive)                                                                             ",{}]],"6":[["  (",{}],["save-excursion",{"fg":6,"bold":true}],["                                                                           ",{}]],"7":[["    (setq mark-pos  (get-mark-pos-ex))                                                      ",{}]],"8":[["    (message  ",{}],["\"%d %d\"",{"fg":2}],[" (car mark-pos) (cadr mark-pos) )                                      ",{}]],"9":[["    (",{}],["if",{"fg":6,"bold":true}],[" is-add                                                                              ",{}]],"10":[["        (replace-regexp ",{}],["\"^\"",{"fg":2}],[" ",{}],["\"\\t\"",{"fg":2}],[" nil (nth 0 mark-pos) (- (nth 1 mark-pos) 1) )              ",{}]],"11":[["      (replace-regexp ",{}],["\"^\\t\"",{"fg":2}],[" ",{}],["\"\"",{"fg":2}],[" nil (nth 0 mark-pos) (- (nth 1 mark-pos)  1)))               ",{}]],"12":[["    )",{}],[")",{"bg":6}],["                                                                                      ",{}]],"13":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["region-indent-add",{"fg":4,"bold":true}],[" ()                                                                 ",{}]],"14":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   73% L356  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":26}}],[0.000855,{"lines":{"3":[["(",{}],["defun",{"fg":6,"bold":true}],["  ",{}],["region-indent-ex",{"fg":4,"bold":true}],[" ( is-add )                                                         ",{}]],"12":[["    ))                                                                                      ",{}]],"13":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["region-indent-add",{"fg":4,"bold":true}],[" ",{}],["()",{"bg":6}],["                                                                 ",{}]]}}],[0.028816,{"lines":{"1":[[";;                                                                                          ",{"fg":1}]],"2":[["(",{}],["defun",{"fg":6,"bold":true}],["  ",{}],["region-indent-ex",{"fg":4,"bold":true}],[" ( is-add )                                                         ",{}]],"3":[["  ",{}],["\"整体缩进\"",{"fg":2}],["                                                                                ",{}]],"4":[["  (interactive)                                                                             ",{}]],"5":[["  (",{}],["save-excursion",{"fg":6,"bold":true}],["                                                                           ",{}]],"6":[["    (setq mark-pos  (get-mark-pos-ex))                                                      ",{}]],"7":[["    (message  ",{}],["\"%d %d\"",{"fg":2}],[" (car mark-pos) (cadr mark-pos) )                                      ",{}]],"8":[["    (",{}],["if",{"fg":6,"bold":true}],[" is-add                                                                              ",{}]],"9":[["        (replace-regexp ",{}],["\"^\"",{"fg":2}],[" ",{}],["\"\\t\"",{"fg":2}],[" nil (nth 0 mark-pos) (- (nth 1 mark-pos) 1) )              ",{}]],"10":[["      (replace-regexp ",{}],["\"^\\t\"",{"fg":2}],[" ",{}],["\"\"",{"fg":2}],[" nil (nth 0 mark-pos) (- (nth 1 mark-pos)  1)))               ",{}]],"11":[["    ))                                                                                      ",{}]],"12":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["region-indent-add",{"fg":4,"bold":true}],[" ()                                                                 ",{}]],"13":[["  ",{}],["\"DOCSTRING\"",{"fg":2}],["                                                                               ",{}]],"14":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   73% L357  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":12}}],[0.0304,{"lines":{"1":[["(",{}],["defun",{"fg":6,"bold":true}],["  ",{}],["region-indent-ex",{"fg":4,"bold":true}],[" ( is-add )                                                         ",{}]],"2":[["  ",{}],["\"整体缩进\"",{"fg":2}],["                                                                                ",{}]],"3":[["  (interactive)                                                                             ",{}]],"4":[["  (",{}],["save-excursion",{"fg":6,"bold":true}],["                                                                           ",{}]],"5":[["    (setq mark-pos  (get-mark-pos-ex))                                                      ",{}]],"6":[["    (message  ",{}],["\"%d %d\"",{"fg":2}],[" (car mark-pos) (cadr mark-pos) )                                      ",{}]],"7":[["    (",{}],["if",{"fg":6,"bold":true}],[" is-add                                                                              ",{}]],"8":[["        (replace-regexp ",{}],["\"^\"",{"fg":2}],[" ",{}],["\"\\t\"",{"fg":2}],[" nil (nth 0 mark-pos) (- (nth 1 mark-pos) 1) )              ",{}]],"9":[["      (replace-regexp ",{}],["\"^\\t\"",{"fg":2}],[" ",{}],["\"\"",{"fg":2}],[" nil (nth 0 mark-pos) (- (nth 1 mark-pos)  1)))               ",{}]],"10":[["    ))                                                                                      ",{}]],"11":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["region-indent-add",{"fg":4,"bold":true}],[" ()                                                                 ",{}]],"12":[["  ",{}],["\"DOCSTRING\"",{"fg":2}],["                                                                               ",{}]],"13":[["  ",{}],["(",{"bg":6}],["interactive",{}],[")",{"bg":6}],["                                                                             ",{}]],"14":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   73% L358  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":14}}],[0.031236,{"lines":{"1":[["  ",{}],["\"整体缩进\"",{"fg":2}],["                                                                                ",{}]],"2":[["  (interactive)                                                                             ",{}]],"3":[["  (",{}],["save-excursion",{"fg":6,"bold":true}],["                                                                           ",{}]],"4":[["    (setq mark-pos  (get-mark-pos-ex))                                                      ",{}]],"5":[["    (message  ",{}],["\"%d %d\"",{"fg":2}],[" (car mark-pos) (cadr mark-pos) )                                      ",{}]],"6":[["    (",{}],["if",{"fg":6,"bold":true}],[" is-add                                                                              ",{}]],"7":[["        (replace-regexp ",{}],["\"^\"",{"fg":2}],[" ",{}],["\"\\t\"",{"fg":2}],[" nil (nth 0 mark-pos) (- (nth 1 mark-pos) 1) )              ",{}]],"8":[["      (replace-regexp ",{}],["\"^\\t\"",{"fg":2}],[" ",{}],["\"\"",{"fg":2}],[" nil (nth 0 mark-pos) (- (nth 1 mark-pos)  1)))               ",{}]],"9":[["    ))                                                                                      ",{}]],"10":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["region-indent-add",{"fg":4,"bold":true}],[" ()                                                                 ",{}]],"11":[["  ",{}],["\"DOCSTRING\"",{"fg":2}],["                                                                               ",{}]],"12":[["  (interactive)                                                                             ",{}]],"13":[["  ",{}],["(",{"bg":6}],["region-indent-ex t",{}],[")",{"bg":6}],["                                                                      ",{}]],"14":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   73% L359  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":21}}],[0.033276,{"lines":{"1":[["  (interactive)                                                                             ",{}]],"2":[["  (",{}],["save-excursion",{"fg":6,"bold":true}],["                                                                           ",{}]],"3":[["    (setq mark-pos  (get-mark-pos-ex))                                                      ",{}]],"4":[["    (message  ",{}],["\"%d %d\"",{"fg":2}],[" (car mark-pos) (cadr mark-pos) )                                      ",{}]],"5":[["    (",{}],["if",{"fg":6,"bold":true}],[" is-add                                                                              ",{}]],"6":[["        (replace-regexp ",{}],["\"^\"",{"fg":2}],[" ",{}],["\"\\t\"",{"fg":2}],[" nil (nth 0 mark-pos) (- (nth 1 mark-pos) 1) )              ",{}]],"7":[["      (replace-regexp ",{}],["\"^\\t\"",{"fg":2}],[" ",{}],["\"\"",{"fg":2}],[" nil (nth 0 mark-pos) (- (nth 1 mark-pos)  1)))               ",{}]],"8":[["    ))                                                                                      ",{}]],"9":[["(",{"bg":6}],["defun",{"fg":6,"bold":true}],[" ",{}],["region-indent-add",{"fg":4,"bold":true}],[" ()                                                                 ",{}]],"10":[["  ",{}],["\"DOCSTRING\"",{"fg":2}],["                                                                               ",{}]],"11":[["  (interactive)                                                                             ",{}]],"12":[["  (region-indent-ex t)                                                                      ",{}]],"13":[["  ",{}],[")",{"bg":6}],["                                                                                         ",{}]],"14":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   73% L360  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":2}}],[0.028305,{"lines":{"1":[["  (",{}],["save-excursion",{"fg":6,"bold":true}],["                                                                           ",{}]],"2":[["    (setq mark-pos  (get-mark-pos-ex))                                                      ",{}]],"3":[["    (message  ",{}],["\"%d %d\"",{"fg":2}],[" (car mark-pos) (cadr mark-pos) )                                      ",{}]],"4":[["    (",{}],["if",{"fg":6,"bold":true}],[" is-add                                                                              ",{}]],"5":[["        (replace-regexp ",{}],["\"^\"",{"fg":2}],[" ",{}],["\"\\t\"",{"fg":2}],[" nil (nth 0 mark-pos) (- (nth 1 mark-pos) 1) )              ",{}]],"6":[["      (replace-regexp ",{}],["\"^\\t\"",{"fg":2}],[" ",{}],["\"\"",{"fg":2}],[" nil (nth 0 mark-pos) (- (nth 1 mark-pos)  1)))               ",{}]],"7":[["    ))                                                                                      ",{}]],"8":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["region-indent-add",{"fg":4,"bold":true}],[" ()                                                                 ",{}]],"9":[["  ",{}],["\"DOCSTRING\"",{"fg":2}],["                                                                               ",{}]],"10":[["  (interactive)                                                                             ",{}]],"11":[["  (region-indent-ex t)                                                                      ",{}]],"12":[["  )                                                                                         ",{}]],"13":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["region-indent-sub",{"fg":4,"bold":true}],[" ",{}],["()",{"bg":6}],["                                                                 ",{}]],"14":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   73% L361  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":26}}],[0.156592,{"lines":{"8":[["(",{"bg":6}],["defun",{"fg":6,"bold":true}],[" ",{}],["region-indent-add",{"fg":4,"bold":true}],[" ()                                                                 ",{}]],"12":[["  ",{}],[")",{"bg":6}],["                                                                                         ",{}]],"13":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["region-indent-sub",{"fg":4,"bold":true}],[" ()                                                                 ",{}]],"14":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   73% L360  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":2,"y":12}}],[0.10408,{"lines":{"8":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["region-indent-add",{"fg":4,"bold":true}],[" ()                                                                 ",{}]],"11":[["  ",{}],["(",{"bg":6}],["region-indent-ex t",{}],[")",{"bg":6}],["                                                                      ",{}]],"12":[["  )                                                                                         ",{}]],"14":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   73% L359  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":21,"y":11}}],[0.119934,{"lines":{"10":[["  ",{}],["(",{"bg":6}],["interactive",{}],[")",{"bg":6}],["                                                                             ",{}]],"11":[["  (region-indent-ex t)                                                                      ",{}]],"14":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   73% L358  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":14,"y":10}}],[0.200138,{"lines":{"10":[["  (interactive)                                                                             ",{}]],"14":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   73% L357  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":12,"y":9}}],[8.000088999999999,{"lines":{"8":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["region-indent-add",{"fg":4,"bold":true}],[" ",{}],["()",{"bg":6}],["                                                                 ",{}]],"14":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   73% L356  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":26,"y":8}}],[0.176373,{"lines":{"7":[["    )",{}],[")",{"bg":6}],["                                                                                      ",{}]],"8":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["region-indent-add",{"fg":4,"bold":true}],[" ()                                                                 ",{}]],"14":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   73% L355  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":5,"y":7}}],[0.151757,{"lines":{"7":[["    ))                                                                                      ",{}]],"14":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   73% L354  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":32,"y":6}}],[0.499484,{"lines":{"14":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   73% L353  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"y":5}}],[0.035118,{"lines":{"14":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   73% L352  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":13,"y":4}}],[0.035185,{"lines":{"14":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   73% L351  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":32,"y":3}}],[0.028893,{"lines":{"14":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   73% L350  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"y":2}}],[0.029388,{"lines":{"14":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   73% L349  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":16,"y":1}}],[0.033879,{"lines":{"1":[["  ",{}],["(",{"bg":6}],["interactive",{}],[")",{"bg":6}],["                                                                             ",{}]],"2":[["  (",{}],["save-excursion",{"fg":6,"bold":true}],["                                                                           ",{}]],"3":[["    (setq mark-pos  (get-mark-pos-ex))                                                      ",{}]],"4":[["    (message  ",{}],["\"%d %d\"",{"fg":2}],[" (car mark-pos) (cadr mark-pos) )                                      ",{}]],"5":[["    (",{}],["if",{"fg":6,"bold":true}],[" is-add                                                                              ",{}]],"6":[["        (replace-regexp ",{}],["\"^\"",{"fg":2}],[" ",{}],["\"\\t\"",{"fg":2}],[" nil (nth 0 mark-pos) (- (nth 1 mark-pos) 1) )              ",{}]],"7":[["      (replace-regexp ",{}],["\"^\\t\"",{"fg":2}],[" ",{}],["\"\"",{"fg":2}],[" nil (nth 0 mark-pos) (- (nth 1 mark-pos)  1)))               ",{}]],"8":[["    ))                                                                                      ",{}]],"9":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["region-indent-add",{"fg":4,"bold":true}],[" ()                                                                 ",{}]],"10":[["  ",{}],["\"DOCSTRING\"",{"fg":2}],["                                                                               ",{}]],"11":[["  (interactive)                                                                             ",{}]],"12":[["  (region-indent-ex t)                                                                      ",{}]],"13":[["  )                                                                                         ",{}]],"14":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   73% L348  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":14}}],[0.03354,{"lines":{"1":[["  ",{}],["\"整体缩进\"",{"fg":2}],["                                                                                ",{}]],"2":[["  (interactive)                                                                             ",{}]],"3":[["  (",{}],["save-excursion",{"fg":6,"bold":true}],["                                                                           ",{}]],"4":[["    (setq mark-pos  (get-mark-pos-ex))                                                      ",{}]],"5":[["    (message  ",{}],["\"%d %d\"",{"fg":2}],[" (car mark-pos) (cadr mark-pos) )                                      ",{}]],"6":[["    (",{}],["if",{"fg":6,"bold":true}],[" is-add                                                                              ",{}]],"7":[["        (replace-regexp ",{}],["\"^\"",{"fg":2}],[" ",{}],["\"\\t\"",{"fg":2}],[" nil (nth 0 mark-pos) (- (nth 1 mark-pos) 1) )              ",{}]],"8":[["      (replace-regexp ",{}],["\"^\\t\"",{"fg":2}],[" ",{}],["\"\"",{"fg":2}],[" nil (nth 0 mark-pos) (- (nth 1 mark-pos)  1)))               ",{}]],"9":[["    ))                                                                                      ",{}]],"10":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["region-indent-add",{"fg":4,"bold":true}],[" ()                                                                 ",{}]],"11":[["  ",{}],["\"DOCSTRING\"",{"fg":2}],["                                                                               ",{}]],"12":[["  (interactive)                                                                             ",{}]],"13":[["  (region-indent-ex t)                                                                      ",{}]],"14":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   73% L347  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":11}}],[0.020534,{"lines":{"1":[["(",{}],["defun",{"fg":6,"bold":true}],["  ",{}],["region-indent-ex",{"fg":4,"bold":true}],[" ( is-add )                                                         ",{}]],"2":[["  ",{}],["\"整体缩进\"",{"fg":2}],["                                                                                ",{}]],"3":[["  (interactive)                                                                             ",{}]],"4":[["  (",{}],["save-excursion",{"fg":6,"bold":true}],["                                                                           ",{}]],"5":[["    (setq mark-pos  (get-mark-pos-ex))                                                      ",{}]],"6":[["    (message  ",{}],["\"%d %d\"",{"fg":2}],[" (car mark-pos) (cadr mark-pos) )                                      ",{}]],"7":[["    (",{}],["if",{"fg":6,"bold":true}],[" is-add                                                                              ",{}]],"8":[["        (replace-regexp ",{}],["\"^\"",{"fg":2}],[" ",{}],["\"\\t\"",{"fg":2}],[" nil (nth 0 mark-pos) (- (nth 1 mark-pos) 1) )              ",{}]],"9":[["      (replace-regexp ",{}],["\"^\\t\"",{"fg":2}],[" ",{}],["\"\"",{"fg":2}],[" nil (nth 0 mark-pos) (- (nth 1 mark-pos)  1)))               ",{}]],"10":[["    ))                                                                                      ",{}]],"11":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["region-indent-add",{"fg":4,"bold":true}],[" ()                                                                 ",{}]],"12":[["  ",{}],["\"DOCSTRING\"",{"fg":2}],["                                                                               ",{}]],"13":[["  (interactive)                                                                             ",{}]],"14":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   73% L346  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":32}}],[0.030018,{"lines":{"1":[[";;                                                                                          ",{"fg":1}]],"2":[["(",{}],["defun",{"fg":6,"bold":true}],["  ",{}],["region-indent-ex",{"fg":4,"bold":true}],[" ( is-add )                                                         ",{}]],"3":[["  ",{}],["\"整体缩进\"",{"fg":2}],["                                                                                ",{}]],"4":[["  (interactive)                                                                             ",{}]],"5":[["  (",{}],["save-excursion",{"fg":6,"bold":true}],["                                                                           ",{}]],"6":[["    (setq mark-pos  (get-mark-pos-ex))                                                      ",{}]],"7":[["    (message  ",{}],["\"%d %d\"",{"fg":2}],[" (car mark-pos) (cadr mark-pos) )                                      ",{}]],"8":[["    (",{}],["if",{"fg":6,"bold":true}],[" is-add                                                                              ",{}]],"9":[["        (replace-regexp ",{}],["\"^\"",{"fg":2}],[" ",{}],["\"\\t\"",{"fg":2}],[" nil (nth 0 mark-pos) (- (nth 1 mark-pos) 1) )              ",{}]],"10":[["      (replace-regexp ",{}],["\"^\\t\"",{"fg":2}],[" ",{}],["\"\"",{"fg":2}],[" nil (nth 0 mark-pos) (- (nth 1 mark-pos)  1)))               ",{}]],"11":[["    ))                                                                                      ",{}]],"12":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["region-indent-add",{"fg":4,"bold":true}],[" ()                                                                 ",{}]],"13":[["  ",{}],["\"DOCSTRING\"",{"fg":2}],["                                                                               ",{}]],"14":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   73% L345  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":1}}],[0.030232,{"lines":{"1":[["                                                                                            ",{}]],"2":[[";;                                                                                          ",{"fg":1}]],"3":[["(",{}],["defun",{"fg":6,"bold":true}],["  ",{}],["region-indent-ex",{"fg":4,"bold":true}],[" ( is-add )                                                         ",{}]],"4":[["  ",{}],["\"整体缩进\"",{"fg":2}],["                                                                                ",{}]],"5":[["  (interactive)                                                                             ",{}]],"6":[["  (",{}],["save-excursion",{"fg":6,"bold":true}],["                                                                           ",{}]],"7":[["    (setq mark-pos  (get-mark-pos-ex))                                                      ",{}]],"8":[["    (message  ",{}],["\"%d %d\"",{"fg":2}],[" (car mark-pos) (cadr mark-pos) )                                      ",{}]],"9":[["    (",{}],["if",{"fg":6,"bold":true}],[" is-add                                                                              ",{}]],"10":[["        (replace-regexp ",{}],["\"^\"",{"fg":2}],[" ",{}],["\"\\t\"",{"fg":2}],[" nil (nth 0 mark-pos) (- (nth 1 mark-pos) 1) )              ",{}]],"11":[["      (replace-regexp ",{}],["\"^\\t\"",{"fg":2}],[" ",{}],["\"\"",{"fg":2}],[" nil (nth 0 mark-pos) (- (nth 1 mark-pos)  1)))               ",{}]],"12":[["    ))                                                                                      ",{}]],"13":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["region-indent-add",{"fg":4,"bold":true}],[" ()                                                                 ",{}]],"14":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   73% L344  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":0}}],[0.0313,{"lines":{"1":[["  (open-line 1)",{}],[")",{"bg":6}],["                                                                            ",{}]],"2":[["                                                                                            ",{}]],"3":[[";;                                                                                          ",{"fg":1}]],"4":[["(",{}],["defun",{"fg":6,"bold":true}],["  ",{}],["region-indent-ex",{"fg":4,"bold":true}],[" ( is-add )                                                         ",{}]],"5":[["  ",{}],["\"整体缩进\"",{"fg":2}],["                                                                                ",{}]],"6":[["  (interactive)                                                                             ",{}]],"7":[["  (",{}],["save-excursion",{"fg":6,"bold":true}],["                                                                           ",{}]],"8":[["    (setq mark-pos  (get-mark-pos-ex))                                                      ",{}]],"9":[["    (message  ",{}],["\"%d %d\"",{"fg":2}],[" (car mark-pos) (cadr mark-pos) )                                      ",{}]],"10":[["    (",{}],["if",{"fg":6,"bold":true}],[" is-add                                                                              ",{}]],"11":[["        (replace-regexp ",{}],["\"^\"",{"fg":2}],[" ",{}],["\"\\t\"",{"fg":2}],[" nil (nth 0 mark-pos) (- (nth 1 mark-pos) 1) )              ",{}]],"12":[["      (replace-regexp ",{}],["\"^\\t\"",{"fg":2}],[" ",{}],["\"\"",{"fg":2}],[" nil (nth 0 mark-pos) (- (nth 1 mark-pos)  1)))               ",{}]],"13":[["    ))                                                                                      ",{}]],"14":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   73% L343  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":15}}],[0.035979,{"lines":{"1":[["  ",{}],["(",{"bg":6}],["move-beginning-of-line 1",{}],[")",{"bg":6}],["                                                                ",{}]],"2":[["  (open-line 1))                                                                            ",{}]],"3":[["                                                                                            ",{}]],"4":[[";;                                                                                          ",{"fg":1}]],"5":[["(",{}],["defun",{"fg":6,"bold":true}],["  ",{}],["region-indent-ex",{"fg":4,"bold":true}],[" ( is-add )                                                         ",{}]],"6":[["  ",{}],["\"整体缩进\"",{"fg":2}],["                                                                                ",{}]],"7":[["  (interactive)                                                                             ",{}]],"8":[["  (",{}],["save-excursion",{"fg":6,"bold":true}],["                                                                           ",{}]],"9":[["    (setq mark-pos  (get-mark-pos-ex))                                                      ",{}]],"10":[["    (message  ",{}],["\"%d %d\"",{"fg":2}],[" (car mark-pos) (cadr mark-pos) )                                      ",{}]],"11":[["    (",{}],["if",{"fg":6,"bold":true}],[" is-add                                                                              ",{}]],"12":[["        (replace-regexp ",{}],["\"^\"",{"fg":2}],[" ",{}],["\"\\t\"",{"fg":2}],[" nil (nth 0 mark-pos) (- (nth 1 mark-pos) 1) )              ",{}]],"13":[["      (replace-regexp ",{}],["\"^\\t\"",{"fg":2}],[" ",{}],["\"\"",{"fg":2}],[" nil (nth 0 mark-pos) (- (nth 1 mark-pos)  1)))               ",{}]],"14":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   72% L342  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":27}}],[0.02418,{"lines":{"1":[["                                                                                            ",{}]],"2":[["  ",{}],["(",{"bg":6}],["move-beginning-of-line 1",{}],[")",{"bg":6}],["                                                                ",{}]],"3":[["  (open-line 1))                                                                            ",{}]],"4":[["                                                                                            ",{}]],"5":[[";;                                                                                          ",{"fg":1}]],"6":[["(",{}],["defun",{"fg":6,"bold":true}],["  ",{}],["region-indent-ex",{"fg":4,"bold":true}],[" ( is-add )                                                         ",{}]],"7":[["  ",{}],["\"整体缩进\"",{"fg":2}],["                                                                                ",{}]],"8":[["  (interactive)                                                                             ",{}]],"9":[["  (",{}],["save-excursion",{"fg":6,"bold":true}],["                                                                           ",{}]],"10":[["    (setq mark-pos  (get-mark-pos-ex))                                                      ",{}]],"11":[["    (message  ",{}],["\"%d %d\"",{"fg":2}],[" (car mark-pos) (cadr mark-pos) )                                      ",{}]],"12":[["    (",{}],["if",{"fg":6,"bold":true}],[" is-add                                                                              ",{}]],"13":[["        (replace-regexp ",{}],["\"^\"",{"fg":2}],[" ",{}],["\"\\t\"",{"fg":2}],[" nil (nth 0 mark-pos) (- (nth 1 mark-pos) 1) )              ",{}]]},"cursor":{"x":0}}],[0.000615,{"lines":{"1":[["  ",{}],["(",{"bg":6}],["interactive ",{}],["\"P\"",{"fg":2}],[")",{"bg":6}],["                                                                         ",{}]],"2":[["  (move-beginning-of-line 1)                                                                ",{}]],"14":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   72% L341  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":18}}],[0.029944,{"lines":{"1":[["  ",{}],["\"C-o\"",{"fg":2}],["                                                                                     ",{}]],"2":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"3":[["  (move-beginning-of-line 1)                                                                ",{}]],"4":[["  (open-line 1))                                                                            ",{}]],"5":[["                                                                                            ",{}]],"6":[[";;                                                                                          ",{"fg":1}]],"7":[["(",{}],["defun",{"fg":6,"bold":true}],["  ",{}],["region-indent-ex",{"fg":4,"bold":true}],[" ( is-add )                                                         ",{}]],"8":[["  ",{}],["\"整体缩进\"",{"fg":2}],["                                                                                ",{}]],"9":[["  (interactive)                                                                             ",{}]],"10":[["  (",{}],["save-excursion",{"fg":6,"bold":true}],["                                                                           ",{}]],"11":[["    (setq mark-pos  (get-mark-pos-ex))                                                      ",{}]],"12":[["    (message  ",{}],["\"%d %d\"",{"fg":2}],[" (car mark-pos) (cadr mark-pos) )                                      ",{}]],"13":[["    (",{}],["if",{"fg":6,"bold":true}],[" is-add                                                                              ",{}]],"14":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   72% L340  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":6}}],[0.029915,{"lines":{"1":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["begin-line-and-insert-line",{"fg":4,"bold":true}],[" ( arg)                                                    ",{}]],"2":[["  ",{}],["\"C-o\"",{"fg":2}],["                                                                                     ",{}]],"3":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"4":[["  (move-beginning-of-line 1)                                                                ",{}]],"5":[["  (open-line 1))                                                                            ",{}]],"6":[["                                                                                            ",{}]],"7":[[";;                                                                                          ",{"fg":1}]],"8":[["(",{}],["defun",{"fg":6,"bold":true}],["  ",{}],["region-indent-ex",{"fg":4,"bold":true}],[" ( is-add )                                                         ",{}]],"9":[["  ",{}],["\"整体缩进\"",{"fg":2}],["                                                                                ",{}]],"10":[["  (interactive)                                                                             ",{}]],"11":[["  (",{}],["save-excursion",{"fg":6,"bold":true}],["                                                                           ",{}]],"12":[["    (setq mark-pos  (get-mark-pos-ex))                                                      ",{}]],"13":[["    (message  ",{}],["\"%d %d\"",{"fg":2}],[" (car mark-pos) (cadr mark-pos) )                                      ",{}]],"14":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   72% L339  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":32}}],[0.030078,{"lines":{"1":[["                                                                                            ",{}]],"2":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["begin-line-and-insert-line",{"fg":4,"bold":true}],[" ( arg)                                                    ",{}]],"3":[["  ",{}],["\"C-o\"",{"fg":2}],["                                                                                     ",{}]],"4":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"5":[["  (move-beginning-of-line 1)                                                                ",{}]],"6":[["  (open-line 1))                                                                            ",{}]],"7":[["                                                                                            ",{}]],"8":[[";;                                                                                          ",{"fg":1}]],"9":[["(",{}],["defun",{"fg":6,"bold":true}],["  ",{}],["region-indent-ex",{"fg":4,"bold":true}],[" ( is-add )                                                         ",{}]],"10":[["  ",{}],["\"整体缩进\"",{"fg":2}],["                                                                                ",{}]],"11":[["  (interactive)                                                                             ",{}]],"12":[["  (",{}],["save-excursion",{"fg":6,"bold":true}],["                                                                           ",{}]],"13":[["    (setq mark-pos  (get-mark-pos-ex))                                                      ",{}]],"14":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   72% L338  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":0}}],[0.030011,{"lines":{"1":[[";;------------------------------------------------------------                              ",{"fg":1}]],"2":[["                                                                                            ",{}]],"3":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["begin-line-and-insert-line",{"fg":4,"bold":true}],[" ( arg)                                                    ",{}]],"4":[["  ",{}],["\"C-o\"",{"fg":2}],["                                                                                     ",{}]],"5":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"6":[["  (move-beginning-of-line 1)                                                                ",{}]],"7":[["  (open-line 1))                                                                            ",{}]],"8":[["                                                                                            ",{}]],"9":[[";;                                                                                          ",{"fg":1}]],"10":[["(",{}],["defun",{"fg":6,"bold":true}],["  ",{}],["region-indent-ex",{"fg":4,"bold":true}],[" ( is-add )                                                         ",{}]],"11":[["  ",{}],["\"整体缩进\"",{"fg":2}],["                                                                                ",{}]],"12":[["  (interactive)                                                                             ",{}]],"13":[["  (",{}],["save-excursion",{"fg":6,"bold":true}],["                                                                           ",{}]],"14":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   71% L337  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":32}}],[0.030553,{"lines":{"1":[["                                                                                            ",{}]],"2":[[";;------------------------------------------------------------                              ",{"fg":1}]],"3":[["                                                                                            ",{}]],"4":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["begin-line-and-insert-line",{"fg":4,"bold":true}],[" ( arg)                                                    ",{}]],"5":[["  ",{}],["\"C-o\"",{"fg":2}],["                                                                                     ",{}]],"6":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"7":[["  (move-beginning-of-line 1)                                                                ",{}]],"8":[["  (open-line 1))                                                                            ",{}]],"9":[["                                                                                            ",{}]],"10":[[";;                                                                                          ",{"fg":1}]],"11":[["(",{}],["defun",{"fg":6,"bold":true}],["  ",{}],["region-indent-ex",{"fg":4,"bold":true}],[" ( is-add )                                                         ",{}]],"12":[["  ",{}],["\"整体缩进\"",{"fg":2}],["                                                                                ",{}]],"13":[["  (interactive)                                                                             ",{}]],"14":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   71% L336  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":0}}],[0.032825,{"lines":{"2":[["                                                                                            ",{}]],"3":[[";;------------------------------------------------------------                              ",{"fg":1}]],"4":[["                                                                                            ",{}]],"5":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["begin-line-and-insert-line",{"fg":4,"bold":true}],[" ( arg)                                                    ",{}]],"6":[["  ",{}],["\"C-o\"",{"fg":2}],["                                                                                     ",{}]],"7":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"8":[["  (move-beginning-of-line 1)                                                                ",{}]],"9":[["  (open-line 1))                                                                            ",{}]],"10":[["                                                                                            ",{}]],"11":[[";;                                                                                          ",{"fg":1}]],"12":[["(",{}],["defun",{"fg":6,"bold":true}],["  ",{}],["region-indent-ex",{"fg":4,"bold":true}],[" ( is-add )                                                         ",{}]],"13":[["  ",{}],["\"整体缩进\"",{"fg":2}],["                                                                                ",{}]],"14":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   71% L335  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]}}],[0.115578,{"lines":{"14":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   71% L336  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"y":2}}],[0.191803,{"lines":{"14":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   71% L337  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":32,"y":3}}],[0.128388,{"lines":{"14":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   71% L338  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":0,"y":4}}],[0.135591,{"lines":{"14":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   71% L339  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":32,"y":5}}],[1.353263,{"lines":{"14":[["  (interactive)                                                                             ",{}]],"15":[["  (",{}],["save-excursion",{"fg":6,"bold":true}],["                                                                           ",{}]],"16":[["    (setq mark-pos  (get-mark-pos-ex))                                                      ",{}]],"17":[["    (message  ",{}],["\"%d %d\"",{"fg":2}],[" (car mark-pos) (cadr mark-pos) )                                      ",{}]],"18":[["    (",{}],["if",{"fg":6,"bold":true}],[" is-add                                                                              ",{}]],"19":[["        (replace-regexp ",{}],["\"^\"",{"fg":2}],[" ",{}],["\"\\t\"",{"fg":2}],[" nil (nth 0 mark-pos) (- (nth 1 mark-pos) 1) )              ",{}]],"20":[["      (replace-regexp ",{}],["\"^\\t\"",{"fg":2}],[" ",{}],["\"\"",{"fg":2}],[" nil (nth 0 mark-pos) (- (nth 1 mark-pos)  1)))               ",{}]],"21":[["    ))                                                                                      ",{}]],"22":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["region-indent-add",{"fg":4,"bold":true}],[" ()                                                                 ",{}]],"23":[["  ",{}],["\"DOCSTRING\"",{"fg":2}],["                                                                               ",{}]],"24":[["  (interactive)                                                                             ",{}]],"25":[["  (region-indent-ex t)                                                                      ",{}]],"26":[["  )                                                                                         ",{}]],"27":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["region-indent-sub",{"fg":4,"bold":true}],[" ()                                                                 ",{}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   71% L339  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]}}],[0.6951270000000001,{"lines":{"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   71% L338  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":0,"y":4}}],[0.159997,{"lines":{"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   71% L337  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":32,"y":3}}],[0.501703,{"lines":{"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   71% L336  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":0,"y":2}}],[0.032073,{"lines":{"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   71% L335  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"y":1}}],[0.028905,{"lines":{"1":[["    (comment-dwim arg))",{}],[")",{"bg":6}],["                                                                    ",{}]],"3":[["                                                                                            ",{}]],"4":[[";;------------------------------------------------------------                              ",{"fg":1}]],"5":[["                                                                                            ",{}]],"6":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["begin-line-and-insert-line",{"fg":4,"bold":true}],[" ( arg)                                                    ",{}]],"7":[["  ",{}],["\"C-o\"",{"fg":2}],["                                                                                     ",{}]],"8":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"9":[["  (move-beginning-of-line 1)                                                                ",{}]],"10":[["  (open-line 1))                                                                            ",{}]],"11":[["                                                                                            ",{}]],"12":[[";;                                                                                          ",{"fg":1}]],"13":[["(",{}],["defun",{"fg":6,"bold":true}],["  ",{}],["region-indent-ex",{"fg":4,"bold":true}],[" ( is-add )                                                         ",{}]],"14":[["  ",{}],["\"整体缩进\"",{"fg":2}],["                                                                                ",{}]],"15":[["  (interactive)                                                                             ",{}]],"16":[["  (",{}],["save-excursion",{"fg":6,"bold":true}],["                                                                           ",{}]],"17":[["    (setq mark-pos  (get-mark-pos-ex))                                                      ",{}]],"18":[["    (message  ",{}],["\"%d %d\"",{"fg":2}],[" (car mark-pos) (cadr mark-pos) )                                      ",{}]],"19":[["    (",{}],["if",{"fg":6,"bold":true}],[" is-add                                                                              ",{}]],"20":[["        (replace-regexp ",{}],["\"^\"",{"fg":2}],[" ",{}],["\"\\t\"",{"fg":2}],[" nil (nth 0 mark-pos) (- (nth 1 mark-pos) 1) )              ",{}]],"21":[["      (replace-regexp ",{}],["\"^\\t\"",{"fg":2}],[" ",{}],["\"\"",{"fg":2}],[" nil (nth 0 mark-pos) (- (nth 1 mark-pos)  1)))               ",{}]],"22":[["    ))                                                                                      ",{}]],"23":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["region-indent-add",{"fg":4,"bold":true}],[" ()                                                                 ",{}]],"24":[["  ",{}],["\"DOCSTRING\"",{"fg":2}],["                                                                               ",{}]],"25":[["  (interactive)                                                                             ",{}]],"26":[["  (region-indent-ex t)                                                                      ",{}]],"27":[["  )                                                                                         ",{}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   71% L334  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":23}}],[0.030214,{"lines":{"1":[["      (comment-or-uncomment-region (line-beginning-position) (line-end-position))           ",{}]],"2":[["    (comment-dwim arg)))                                                                    ",{}]],"4":[["                                                                                            ",{}]],"5":[[";;------------------------------------------------------------                              ",{"fg":1}]],"6":[["                                                                                            ",{}]],"7":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["begin-line-and-insert-line",{"fg":4,"bold":true}],[" ( arg)                                                    ",{}]],"8":[["  ",{}],["\"C-o\"",{"fg":2}],["                                                                                     ",{}]],"9":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"10":[["  (move-beginning-of-line 1)                                                                ",{}]],"11":[["  (open-line 1))                                                                            ",{}]],"12":[["                                                                                            ",{}]],"13":[[";;                                                                                          ",{"fg":1}]],"14":[["(",{}],["defun",{"fg":6,"bold":true}],["  ",{}],["region-indent-ex",{"fg":4,"bold":true}],[" ( is-add )                                                         ",{}]],"15":[["  ",{}],["\"整体缩进\"",{"fg":2}],["                                                                                ",{}]],"16":[["  (interactive)                                                                             ",{}]],"17":[["  (",{}],["save-excursion",{"fg":6,"bold":true}],["                                                                           ",{}]],"18":[["    (setq mark-pos  (get-mark-pos-ex))                                                      ",{}]],"19":[["    (message  ",{}],["\"%d %d\"",{"fg":2}],[" (car mark-pos) (cadr mark-pos) )                                      ",{}]],"20":[["    (",{}],["if",{"fg":6,"bold":true}],[" is-add                                                                              ",{}]],"21":[["        (replace-regexp ",{}],["\"^\"",{"fg":2}],[" ",{}],["\"\\t\"",{"fg":2}],[" nil (nth 0 mark-pos) (- (nth 1 mark-pos) 1) )              ",{}]],"22":[["      (replace-regexp ",{}],["\"^\\t\"",{"fg":2}],[" ",{}],["\"\"",{"fg":2}],[" nil (nth 0 mark-pos) (- (nth 1 mark-pos)  1)))               ",{}]],"23":[["    ))                                                                                      ",{}]],"24":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["region-indent-add",{"fg":4,"bold":true}],[" ()                                                                 ",{}]],"25":[["  ",{}],["\"DOCSTRING\"",{"fg":2}],["                                                                               ",{}]],"26":[["  (interactive)                                                                             ",{}]],"27":[["  (region-indent-ex t)                                                                      ",{}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   71% L333  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":32}}],[0.029915,{"lines":{"1":[["                                                                                            ",{}]],"2":[["      (comment-or-uncomment-region (line-beginning-position) (line-end-position))           ",{}]],"3":[["    (comment-dwim arg)))                                                                    ",{}]],"5":[["                                                                                            ",{}]],"6":[[";;------------------------------------------------------------                              ",{"fg":1}]],"7":[["                                                                                            ",{}]],"8":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["begin-line-and-insert-line",{"fg":4,"bold":true}],[" ( arg)                                                    ",{}]],"9":[["  ",{}],["\"C-o\"",{"fg":2}],["                                                                                     ",{}]],"10":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"11":[["  (move-beginning-of-line 1)                                                                ",{}]],"12":[["  (open-line 1))                                                                            ",{}]],"13":[["                                                                                            ",{}]],"14":[[";;                                                                                          ",{"fg":1}]],"15":[["(",{}],["defun",{"fg":6,"bold":true}],["  ",{}],["region-indent-ex",{"fg":4,"bold":true}],[" ( is-add )                                                         ",{}]],"16":[["  ",{}],["\"整体缩进\"",{"fg":2}],["                                                                                ",{}]],"17":[["  (interactive)                                                                             ",{}]],"18":[["  (",{}],["save-excursion",{"fg":6,"bold":true}],["                                                                           ",{}]],"19":[["    (setq mark-pos  (get-mark-pos-ex))                                                      ",{}]],"20":[["    (message  ",{}],["\"%d %d\"",{"fg":2}],[" (car mark-pos) (cadr mark-pos) )                                      ",{}]],"21":[["    (",{}],["if",{"fg":6,"bold":true}],[" is-add                                                                              ",{}]],"22":[["        (replace-regexp ",{}],["\"^\"",{"fg":2}],[" ",{}],["\"\\t\"",{"fg":2}],[" nil (nth 0 mark-pos) (- (nth 1 mark-pos) 1) )              ",{}]],"23":[["      (replace-regexp ",{}],["\"^\\t\"",{"fg":2}],[" ",{}],["\"\"",{"fg":2}],[" nil (nth 0 mark-pos) (- (nth 1 mark-pos)  1)))               ",{}]],"24":[["    ))                                                                                      ",{}]],"25":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["region-indent-add",{"fg":4,"bold":true}],[" ()                                                                 ",{}]],"26":[["  ",{}],["\"DOCSTRING\"",{"fg":2}],["                                                                               ",{}]],"27":[["  (interactive)                                                                             ",{}]]},"cursor":{"x":0}}],[0.001118,{"lines":{"1":[["  (",{}],["if",{"fg":6,"bold":true}],[" (and (not ",{}],["(",{"bg":6}],["region-active-p",{}],[")",{"bg":6}],[") (not (looking-at ",{}],["\"[ \\t]*$\"",{"fg":2}],[")))                            ",{}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   70% L332  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":32}}],[0.029723,{"lines":{"1":[["                                                                                            ",{}]],"2":[["  (",{}],["if",{"fg":6,"bold":true}],[" (and (not ",{}],["(",{"bg":6}],["region-active-p",{}],[")",{"bg":6}],[") (not (looking-at ",{}],["\"[ \\t]*$\"",{"fg":2}],[")))                            ",{}]],"3":[["      (comment-or-uncomment-region (line-beginning-position) (line-end-position))           ",{}]],"4":[["    (comment-dwim arg)))                                                                    ",{}]],"6":[["                                                                                            ",{}]],"7":[[";;------------------------------------------------------------                              ",{"fg":1}]],"8":[["                                                                                            ",{}]],"9":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["begin-line-and-insert-line",{"fg":4,"bold":true}],[" ( arg)                                                    ",{}]],"10":[["  ",{}],["\"C-o\"",{"fg":2}],["                                                                                     ",{}]],"11":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"12":[["  (move-beginning-of-line 1)                                                                ",{}]],"13":[["  (open-line 1))                                                                            ",{}]],"14":[["                                                                                            ",{}]],"15":[[";;                                                                                          ",{"fg":1}]],"16":[["(",{}],["defun",{"fg":6,"bold":true}],["  ",{}],["region-indent-ex",{"fg":4,"bold":true}],[" ( is-add )                                                         ",{}]],"17":[["  ",{}],["\"整体缩进\"",{"fg":2}],["                                                                                ",{}]],"18":[["  (interactive)                                                                             ",{}]],"19":[["  (",{}],["save-excursion",{"fg":6,"bold":true}],["                                                                           ",{}]],"20":[["    (setq mark-pos  (get-mark-pos-ex))                                                      ",{}]],"21":[["    (message  ",{}],["\"%d %d\"",{"fg":2}],[" (car mark-pos) (cadr mark-pos) )                                      ",{}]],"22":[["    (",{}],["if",{"fg":6,"bold":true}],[" is-add                                                                              ",{}]],"23":[["        (replace-regexp ",{}],["\"^\"",{"fg":2}],[" ",{}],["\"\\t\"",{"fg":2}],[" nil (nth 0 mark-pos) (- (nth 1 mark-pos) 1) )              ",{}]],"24":[["      (replace-regexp ",{}],["\"^\\t\"",{"fg":2}],[" ",{}],["\"\"",{"fg":2}],[" nil (nth 0 mark-pos) (- (nth 1 mark-pos)  1)))               ",{}]],"25":[["    ))                                                                                      ",{}]],"26":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["region-indent-add",{"fg":4,"bold":true}],[" ()                                                                 ",{}]],"27":[["  ",{}],["\"DOCSTRING\"",{"fg":2}],["                                                                               ",{}]]},"cursor":{"x":0}}],[0.001145,{"lines":{"1":[["  ",{}],["(",{"bg":6}],["comment-normalize-vars",{}],[")",{"bg":6}],["                                                                  ",{}]],"2":[["  (",{}],["if",{"fg":6,"bold":true}],[" (and (not (region-active-p)) (not (looking-at ",{}],["\"[ \\t]*$\"",{"fg":2}],[")))                            ",{}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   70% L331  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":25}}],[0.02876,{"lines":{"1":[["                                                                                            ",{}]],"2":[["  ",{}],["(",{"bg":6}],["comment-normalize-vars",{}],[")",{"bg":6}],["                                                                  ",{}]],"3":[["  (",{}],["if",{"fg":6,"bold":true}],[" (and (not (region-active-p)) (not (looking-at ",{}],["\"[ \\t]*$\"",{"fg":2}],[")))                            ",{}]],"4":[["      (comment-or-uncomment-region (line-beginning-position) (line-end-position))           ",{}]],"5":[["    (comment-dwim arg)))                                                                    ",{}]],"7":[["                                                                                            ",{}]],"8":[[";;------------------------------------------------------------                              ",{"fg":1}]],"9":[["                                                                                            ",{}]],"10":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["begin-line-and-insert-line",{"fg":4,"bold":true}],[" ( arg)                                                    ",{}]],"11":[["  ",{}],["\"C-o\"",{"fg":2}],["                                                                                     ",{}]],"12":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"13":[["  (move-beginning-of-line 1)                                                                ",{}]],"14":[["  (open-line 1))                                                                            ",{}]],"15":[["                                                                                            ",{}]],"16":[[";;                                                                                          ",{"fg":1}]],"17":[["(",{}],["defun",{"fg":6,"bold":true}],["  ",{}],["region-indent-ex",{"fg":4,"bold":true}],[" ( is-add )                                                         ",{}]],"18":[["  ",{}],["\"整体缩进\"",{"fg":2}],["                                                                                ",{}]],"19":[["  (interactive)                                                                             ",{}]],"20":[["  (",{}],["save-excursion",{"fg":6,"bold":true}],["                                                                           ",{}]],"21":[["    (setq mark-pos  (get-mark-pos-ex))                                                      ",{}]],"22":[["    (message  ",{}],["\"%d %d\"",{"fg":2}],[" (car mark-pos) (cadr mark-pos) )                                      ",{}]],"23":[["    (",{}],["if",{"fg":6,"bold":true}],[" is-add                                                                              ",{}]],"24":[["        (replace-regexp ",{}],["\"^\"",{"fg":2}],[" ",{}],["\"\\t\"",{"fg":2}],[" nil (nth 0 mark-pos) (- (nth 1 mark-pos) 1) )              ",{}]],"25":[["      (replace-regexp ",{}],["\"^\\t\"",{"fg":2}],[" ",{}],["\"\"",{"fg":2}],[" nil (nth 0 mark-pos) (- (nth 1 mark-pos)  1)))               ",{}]],"26":[["    ))                                                                                      ",{}]],"27":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["region-indent-add",{"fg":4,"bold":true}],[" ()                                                                 ",{}]]},"cursor":{"x":0}}],[0.0006180000000000001,{"lines":{"1":[["  ",{}],["(",{"bg":6}],["interactive ",{}],["\"*P\"",{"fg":2}],[")",{"bg":6}],["                                                                        ",{}]],"2":[["  (comment-normalize-vars)                                                                  ",{}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   70% L330  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":19}}],[0.030973,{"lines":{"1":[["Replaces default behaviour of comment-dwim, when it inserts comment at the end of the line.",{"fg":2}],["\\",{}]],"2":[["\"",{"fg":2}],["                                                                                           ",{}]],"3":[["  (interactive ",{}],["\"*P\"",{"fg":2}],[")                                                                        ",{}]],"4":[["  (comment-normalize-vars)                                                                  ",{}]],"5":[["  (",{}],["if",{"fg":6,"bold":true}],[" (and (not (region-active-p)) (not (looking-at ",{}],["\"[ \\t]*$\"",{"fg":2}],[")))                            ",{}]],"6":[["      (comment-or-uncomment-region (line-beginning-position) (line-end-position))           ",{}]],"7":[["    (comment-dwim arg)))                                                                    ",{}]],"8":[["                                                                                            ",{}]],"10":[[";;------------------------------------------------------------                              ",{"fg":1}]],"11":[["                                                                                            ",{}]],"12":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["begin-line-and-insert-line",{"fg":4,"bold":true}],[" ( arg)                                                    ",{}]],"13":[["  ",{}],["\"C-o\"",{"fg":2}],["                                                                                     ",{}]],"14":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"15":[["  (move-beginning-of-line 1)                                                                ",{}]],"16":[["  (open-line 1))                                                                            ",{}]],"17":[["                                                                                            ",{}]],"18":[[";;                                                                                          ",{"fg":1}]],"19":[["(",{}],["defun",{"fg":6,"bold":true}],["  ",{}],["region-indent-ex",{"fg":4,"bold":true}],[" ( is-add )                                                         ",{}]],"20":[["  ",{}],["\"整体缩进\"",{"fg":2}],["                                                                                ",{}]],"21":[["  (interactive)                                                                             ",{}]],"22":[["  (",{}],["save-excursion",{"fg":6,"bold":true}],["                                                                           ",{}]],"23":[["    (setq mark-pos  (get-mark-pos-ex))                                                      ",{}]],"24":[["    (message  ",{}],["\"%d %d\"",{"fg":2}],[" (car mark-pos) (cadr mark-pos) )                                      ",{}]],"25":[["    (",{}],["if",{"fg":6,"bold":true}],[" is-add                                                                              ",{}]],"26":[["        (replace-regexp ",{}],["\"^\"",{"fg":2}],[" ",{}],["\"\\t\"",{"fg":2}],[" nil (nth 0 mark-pos) (- (nth 1 mark-pos) 1) )              ",{}]],"27":[["      (replace-regexp ",{}],["\"^\\t\"",{"fg":2}],[" ",{}],["\"\"",{"fg":2}],[" nil (nth 0 mark-pos) (- (nth 1 mark-pos)  1)))               ",{}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   69% L329  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":32}}],[0.029254,{"lines":{"1":[["                                                                                            ",{}]],"2":[["Replaces default behaviour of comment-dwim, when it inserts comment at the end of the line.",{"fg":2}],["\\",{}]],"3":[["\"",{"fg":2}],["                                                                                           ",{}]],"4":[["  (interactive ",{}],["\"*P\"",{"fg":2}],[")                                                                        ",{}]],"5":[["  (comment-normalize-vars)                                                                  ",{}]],"6":[["  (",{}],["if",{"fg":6,"bold":true}],[" (and (not (region-active-p)) (not (looking-at ",{}],["\"[ \\t]*$\"",{"fg":2}],[")))                            ",{}]],"7":[["      (comment-or-uncomment-region (line-beginning-position) (line-end-position))           ",{}]],"8":[["    (comment-dwim arg)))                                                                    ",{}]],"10":[["                                                                                            ",{}]],"11":[[";;------------------------------------------------------------                              ",{"fg":1}]],"12":[["                                                                                            ",{}]],"13":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["begin-line-and-insert-line",{"fg":4,"bold":true}],[" ( arg)                                                    ",{}]],"14":[["  ",{}],["\"C-o\"",{"fg":2}],["                                                                                     ",{}]],"15":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"16":[["  (move-beginning-of-line 1)                                                                ",{}]],"17":[["  (open-line 1))                                                                            ",{}]],"18":[["                                                                                            ",{}]],"19":[[";;                                                                                          ",{"fg":1}]],"20":[["(",{}],["defun",{"fg":6,"bold":true}],["  ",{}],["region-indent-ex",{"fg":4,"bold":true}],[" ( is-add )                                                         ",{}]],"21":[["  ",{}],["\"整体缩进\"",{"fg":2}],["                                                                                ",{}]],"22":[["  (interactive)                                                                             ",{}]],"23":[["  (",{}],["save-excursion",{"fg":6,"bold":true}],["                                                                           ",{}]],"24":[["    (setq mark-pos  (get-mark-pos-ex))                                                      ",{}]],"25":[["    (message  ",{}],["\"%d %d\"",{"fg":2}],[" (car mark-pos) (cadr mark-pos) )                                      ",{}]],"26":[["    (",{}],["if",{"fg":6,"bold":true}],[" is-add                                                                              ",{}]],"27":[["        (replace-regexp ",{}],["\"^\"",{"fg":2}],[" ",{}],["\"\\t\"",{"fg":2}],[" nil (nth 0 mark-pos) (- (nth 1 mark-pos) 1) )              ",{}]]},"cursor":{"x":0}}],[0.000294,{"lines":{"1":[["then comment current line.                                                                  ",{"fg":2}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   69% L328  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":25}}],[0.02941,{"lines":{"1":[["                                                                                            ",{}]],"2":[["                                                                                            ",{}]],"3":[["then comment current line.                                                                  ",{"fg":2}]],"4":[["Replaces default behaviour of comment-dwim, when it inserts comment at the end of the line.",{"fg":2}],["\\",{}]],"5":[["\"",{"fg":2}],["                                                                                           ",{}]],"6":[["  (interactive ",{}],["\"*P\"",{"fg":2}],[")                                                                        ",{}]],"7":[["  (comment-normalize-vars)                                                                  ",{}]],"8":[["  (",{}],["if",{"fg":6,"bold":true}],[" (and (not (region-active-p)) (not (looking-at ",{}],["\"[ \\t]*$\"",{"fg":2}],[")))                            ",{}]],"9":[["      (comment-or-uncomment-region (line-beginning-position) (line-end-position))           ",{}]],"10":[["    (comment-dwim arg)))                                                                    ",{}]],"11":[["                                                                                            ",{}]],"13":[[";;------------------------------------------------------------                              ",{"fg":1}]],"14":[["                                                                                            ",{}]],"15":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["begin-line-and-insert-line",{"fg":4,"bold":true}],[" ( arg)                                                    ",{}]],"16":[["  ",{}],["\"C-o\"",{"fg":2}],["                                                                                     ",{}]],"17":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"18":[["  (move-beginning-of-line 1)                                                                ",{}]],"19":[["  (open-line 1))                                                                            ",{}]],"20":[["                                                                                            ",{}]],"21":[[";;                                                                                          ",{"fg":1}]],"22":[["(",{}],["defun",{"fg":6,"bold":true}],["  ",{}],["region-indent-ex",{"fg":4,"bold":true}],[" ( is-add )                                                         ",{}]],"23":[["  ",{}],["\"整体缩进\"",{"fg":2}],["                                                                                ",{}]],"24":[["  (interactive)                                                                             ",{}]],"25":[["  (",{}],["save-excursion",{"fg":6,"bold":true}],["                                                                           ",{}]],"26":[["    (setq mark-pos  (get-mark-pos-ex))                                                      ",{}]],"27":[["    (message  ",{}],["\"%d %d\"",{"fg":2}],[" (car mark-pos) (cadr mark-pos) )                                      ",{}]]},"cursor":{"x":0}}],[0.000203,{"lines":{"1":[["If no region is selected and current line is not blank and we are not at the end of the lin",{"fg":2}],["\\",{}]],"2":[["e,                                                                                          ",{"fg":2}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   69% L327  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":32}}],[0.029694,{"lines":{"1":[["                                                                                            ",{}]],"2":[["If no region is selected and current line is not blank and we are not at the end of the lin",{"fg":2}],["\\",{}]],"3":[["e,                                                                                          ",{"fg":2}]],"4":[["then comment current line.                                                                  ",{"fg":2}]],"5":[["Replaces default behaviour of comment-dwim, when it inserts comment at the end of the line.",{"fg":2}],["\\",{}]],"6":[["\"",{"fg":2}],["                                                                                           ",{}]],"7":[["  (interactive ",{}],["\"*P\"",{"fg":2}],[")                                                                        ",{}]],"8":[["  (comment-normalize-vars)                                                                  ",{}]],"9":[["  (",{}],["if",{"fg":6,"bold":true}],[" (and (not (region-active-p)) (not (looking-at ",{}],["\"[ \\t]*$\"",{"fg":2}],[")))                            ",{}]],"10":[["      (comment-or-uncomment-region (line-beginning-position) (line-end-position))           ",{}]],"11":[["    (comment-dwim arg)))                                                                    ",{}]],"13":[["                                                                                            ",{}]],"14":[[";;------------------------------------------------------------                              ",{"fg":1}]],"15":[["                                                                                            ",{}]],"16":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["begin-line-and-insert-line",{"fg":4,"bold":true}],[" ( arg)                                                    ",{}]],"17":[["  ",{}],["\"C-o\"",{"fg":2}],["                                                                                     ",{}]],"18":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"19":[["  (move-beginning-of-line 1)                                                                ",{}]],"20":[["  (open-line 1))                                                                            ",{}]],"21":[["                                                                                            ",{}]],"22":[[";;                                                                                          ",{"fg":1}]],"23":[["(",{}],["defun",{"fg":6,"bold":true}],["  ",{}],["region-indent-ex",{"fg":4,"bold":true}],[" ( is-add )                                                         ",{}]],"24":[["  ",{}],["\"整体缩进\"",{"fg":2}],["                                                                                ",{}]],"25":[["  (interactive)                                                                             ",{}]],"26":[["  (",{}],["save-excursion",{"fg":6,"bold":true}],["                                                                           ",{}]],"27":[["    (setq mark-pos  (get-mark-pos-ex))                                                      ",{}]]},"cursor":{"x":0}}],[5.5e-05,{"lines":{"1":[["  ",{}],["\"Replacement for the comment-dwim command.                                                ",{"fg":2}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   68% L326  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":32}}],[0.031235,{"lines":{"1":[["                                                                                            ",{}]],"2":[["  ",{}],["\"Replacement for the comment-dwim command.                                                ",{"fg":2}]],"3":[["If no region is selected and current line is not blank and we are not at the end of the lin",{"fg":2}],["\\",{}]],"4":[["e,                                                                                          ",{"fg":2}]],"5":[["then comment current line.                                                                  ",{"fg":2}]],"6":[["Replaces default behaviour of comment-dwim, when it inserts comment at the end of the line.",{"fg":2}],["\\",{}]],"7":[["\"",{"fg":2}],["                                                                                           ",{}]],"8":[["  (interactive ",{}],["\"*P\"",{"fg":2}],[")                                                                        ",{}]],"9":[["  (comment-normalize-vars)                                                                  ",{}]],"10":[["  (",{}],["if",{"fg":6,"bold":true}],[" (and (not (region-active-p)) (not (looking-at ",{}],["\"[ \\t]*$\"",{"fg":2}],[")))                            ",{}]],"11":[["      (comment-or-uncomment-region (line-beginning-position) (line-end-position))           ",{}]],"12":[["    (comment-dwim arg)))                                                                    ",{}]],"14":[["                                                                                            ",{}]],"15":[[";;------------------------------------------------------------                              ",{"fg":1}]],"16":[["                                                                                            ",{}]],"17":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["begin-line-and-insert-line",{"fg":4,"bold":true}],[" ( arg)                                                    ",{}]],"18":[["  ",{}],["\"C-o\"",{"fg":2}],["                                                                                     ",{}]],"19":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"20":[["  (move-beginning-of-line 1)                                                                ",{}]],"21":[["  (open-line 1))                                                                            ",{}]],"22":[["                                                                                            ",{}]],"23":[[";;                                                                                          ",{"fg":1}]],"24":[["(",{}],["defun",{"fg":6,"bold":true}],["  ",{}],["region-indent-ex",{"fg":4,"bold":true}],[" ( is-add )                                                         ",{}]],"25":[["  ",{}],["\"整体缩进\"",{"fg":2}],["                                                                                ",{}]],"26":[["  (interactive)                                                                             ",{}]],"27":[["  (",{}],["save-excursion",{"fg":6,"bold":true}],["                                                                           ",{}]]},"cursor":{"x":0}}],[0.000379,{"lines":{"1":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["qiang-comment-dwim-line",{"fg":4,"bold":true}],[" (",{}],["&optional",{"fg":2}],[" arg)                                              ",{}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   68% L325  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":32}}],[0.028294,{"lines":{"1":[["                                                                                            ",{}]],"2":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["qiang-comment-dwim-line",{"fg":4,"bold":true}],[" (",{}],["&optional",{"fg":2}],[" arg)                                              ",{}]],"3":[["  ",{}],["\"Replacement for the comment-dwim command.                                                ",{"fg":2}]],"4":[["If no region is selected and current line is not blank and we are not at the end of the lin",{"fg":2}],["\\",{}]],"5":[["e,                                                                                          ",{"fg":2}]],"6":[["then comment current line.                                                                  ",{"fg":2}]],"7":[["Replaces default behaviour of comment-dwim, when it inserts comment at the end of the line.",{"fg":2}],["\\",{}]],"8":[["\"",{"fg":2}],["                                                                                           ",{}]],"9":[["  (interactive ",{}],["\"*P\"",{"fg":2}],[")                                                                        ",{}]],"10":[["  (comment-normalize-vars)                                                                  ",{}]],"11":[["  (",{}],["if",{"fg":6,"bold":true}],[" (and (not (region-active-p)) (not (looking-at ",{}],["\"[ \\t]*$\"",{"fg":2}],[")))                            ",{}]],"12":[["      (comment-or-uncomment-region (line-beginning-position) (line-end-position))           ",{}]],"13":[["    (comment-dwim arg)))                                                                    ",{}]],"15":[["                                                                                            ",{}]],"16":[[";;------------------------------------------------------------                              ",{"fg":1}]],"17":[["                                                                                            ",{}]],"18":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["begin-line-and-insert-line",{"fg":4,"bold":true}],[" ( arg)                                                    ",{}]],"19":[["  ",{}],["\"C-o\"",{"fg":2}],["                                                                                     ",{}]],"20":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"21":[["  (move-beginning-of-line 1)                                                                ",{}]],"22":[["  (open-line 1))                                                                            ",{}]],"23":[["                                                                                            ",{}]],"24":[[";;                                                                                          ",{"fg":1}]],"25":[["(",{}],["defun",{"fg":6,"bold":true}],["  ",{}],["region-indent-ex",{"fg":4,"bold":true}],[" ( is-add )                                                         ",{}]],"26":[["  ",{}],["\"整体缩进\"",{"fg":2}],["                                                                                ",{}]],"27":[["  (interactive)                                                                             ",{}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   68% L324  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":0}}],[0.031082,{"lines":{"2":[["                                                                                            ",{}]],"3":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["qiang-comment-dwim-line",{"fg":4,"bold":true}],[" (",{}],["&optional",{"fg":2}],[" arg)                                              ",{}]],"4":[["  ",{}],["\"Replacement for the comment-dwim command.                                                ",{"fg":2}]],"5":[["If no region is selected and current line is not blank and we are not at the end of the lin",{"fg":2}],["\\",{}]],"6":[["e,                                                                                          ",{"fg":2}]],"7":[["then comment current line.                                                                  ",{"fg":2}]],"8":[["Replaces default behaviour of comment-dwim, when it inserts comment at the end of the line.",{"fg":2}],["\\",{}]],"9":[["\"",{"fg":2}],["                                                                                           ",{}]],"10":[["  (interactive ",{}],["\"*P\"",{"fg":2}],[")                                                                        ",{}]],"11":[["  (comment-normalize-vars)                                                                  ",{}]],"12":[["  (",{}],["if",{"fg":6,"bold":true}],[" (and (not (region-active-p)) (not (looking-at ",{}],["\"[ \\t]*$\"",{"fg":2}],[")))                            ",{}]],"13":[["      (comment-or-uncomment-region (line-beginning-position) (line-end-position))           ",{}]],"14":[["    (comment-dwim arg)))                                                                    ",{}]],"16":[["                                                                                            ",{}]],"17":[[";;------------------------------------------------------------                              ",{"fg":1}]],"18":[["                                                                                            ",{}]],"19":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["begin-line-and-insert-line",{"fg":4,"bold":true}],[" ( arg)                                                    ",{}]],"20":[["  ",{}],["\"C-o\"",{"fg":2}],["                                                                                     ",{}]],"21":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"22":[["  (move-beginning-of-line 1)                                                                ",{}]],"23":[["  (open-line 1))                                                                            ",{}]],"24":[["                                                                                            ",{}]],"25":[[";;                                                                                          ",{"fg":1}]],"26":[["(",{}],["defun",{"fg":6,"bold":true}],["  ",{}],["region-indent-ex",{"fg":4,"bold":true}],[" ( is-add )                                                         ",{}]],"27":[["  ",{}],["\"整体缩进\"",{"fg":2}],["                                                                                ",{}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   68% L323  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]}}],[0.032003,{"lines":{"1":[["  ",{}],[")",{"bg":6}],["                                                                                         ",{}]],"3":[["                                                                                            ",{}]],"4":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["qiang-comment-dwim-line",{"fg":4,"bold":true}],[" (",{}],["&optional",{"fg":2}],[" arg)                                              ",{}]],"5":[["  ",{}],["\"Replacement for the comment-dwim command.                                                ",{"fg":2}]],"6":[["If no region is selected and current line is not blank and we are not at the end of the lin",{"fg":2}],["\\",{}]],"7":[["e,                                                                                          ",{"fg":2}]],"8":[["then comment current line.                                                                  ",{"fg":2}]],"9":[["Replaces default behaviour of comment-dwim, when it inserts comment at the end of the line.",{"fg":2}],["\\",{}]],"10":[["\"",{"fg":2}],["                                                                                           ",{}]],"11":[["  (interactive ",{}],["\"*P\"",{"fg":2}],[")                                                                        ",{}]],"12":[["  (comment-normalize-vars)                                                                  ",{}]],"13":[["  (",{}],["if",{"fg":6,"bold":true}],[" (and (not (region-active-p)) (not (looking-at ",{}],["\"[ \\t]*$\"",{"fg":2}],[")))                            ",{}]],"14":[["      (comment-or-uncomment-region (line-beginning-position) (line-end-position))           ",{}]],"15":[["    (comment-dwim arg)))                                                                    ",{}]],"17":[["                                                                                            ",{}]],"18":[[";;------------------------------------------------------------                              ",{"fg":1}]],"19":[["                                                                                            ",{}]],"20":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["begin-line-and-insert-line",{"fg":4,"bold":true}],[" ( arg)                                                    ",{}]],"21":[["  ",{}],["\"C-o\"",{"fg":2}],["                                                                                     ",{}]],"22":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"23":[["  (move-beginning-of-line 1)                                                                ",{}]],"24":[["  (open-line 1))                                                                            ",{}]],"25":[["                                                                                            ",{}]],"26":[[";;                                                                                          ",{"fg":1}]],"27":[["(",{}],["defun",{"fg":6,"bold":true}],["  ",{}],["region-indent-ex",{"fg":4,"bold":true}],[" ( is-add )                                                         ",{}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   68% L322  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":2}}],[0.029268,{"lines":{"1":[["  ",{}],["(",{"bg":6}],["find-tag-ex  t",{}],[")",{"bg":6}],["                                                                          ",{}]],"2":[["  )                                                                                         ",{}]],"4":[["                                                                                            ",{}]],"5":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["qiang-comment-dwim-line",{"fg":4,"bold":true}],[" (",{}],["&optional",{"fg":2}],[" arg)                                              ",{}]],"6":[["  ",{}],["\"Replacement for the comment-dwim command.                                                ",{"fg":2}]],"7":[["If no region is selected and current line is not blank and we are not at the end of the lin",{"fg":2}],["\\",{}]],"8":[["e,                                                                                          ",{"fg":2}]],"9":[["then comment current line.                                                                  ",{"fg":2}]],"10":[["Replaces default behaviour of comment-dwim, when it inserts comment at the end of the line.",{"fg":2}],["\\",{}]],"11":[["\"",{"fg":2}],["                                                                                           ",{}]],"12":[["  (interactive ",{}],["\"*P\"",{"fg":2}],[")                                                                        ",{}]],"13":[["  (comment-normalize-vars)                                                                  ",{}]],"14":[["  (",{}],["if",{"fg":6,"bold":true}],[" (and (not (region-active-p)) (not (looking-at ",{}],["\"[ \\t]*$\"",{"fg":2}],[")))                            ",{}]],"15":[["      (comment-or-uncomment-region (line-beginning-position) (line-end-position))           ",{}]],"16":[["    (comment-dwim arg)))                                                                    ",{}]],"18":[["                                                                                            ",{}]],"19":[[";;------------------------------------------------------------                              ",{"fg":1}]],"20":[["                                                                                            ",{}]],"21":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["begin-line-and-insert-line",{"fg":4,"bold":true}],[" ( arg)                                                    ",{}]],"22":[["  ",{}],["\"C-o\"",{"fg":2}],["                                                                                     ",{}]],"23":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"24":[["  (move-beginning-of-line 1)                                                                ",{}]],"25":[["  (open-line 1))                                                                            ",{}]],"26":[["                                                                                            ",{}]],"27":[[";;                                                                                          ",{"fg":1}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   68% L321  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":17}}],[0.029811,{"lines":{"1":[["  ",{}],["(",{"bg":6}],["interactive ",{}],["\"\"",{"fg":2}],[")",{"bg":6}],["                                                                          ",{}]],"2":[["  (find-tag-ex  t)                                                                          ",{}]],"3":[["  )                                                                                         ",{}]],"5":[["                                                                                            ",{}]],"6":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["qiang-comment-dwim-line",{"fg":4,"bold":true}],[" (",{}],["&optional",{"fg":2}],[" arg)                                              ",{}]],"7":[["  ",{}],["\"Replacement for the comment-dwim command.                                                ",{"fg":2}]],"8":[["If no region is selected and current line is not blank and we are not at the end of the lin",{"fg":2}],["\\",{}]],"9":[["e,                                                                                          ",{"fg":2}]],"10":[["then comment current line.                                                                  ",{"fg":2}]],"11":[["Replaces default behaviour of comment-dwim, when it inserts comment at the end of the line.",{"fg":2}],["\\",{}]],"12":[["\"",{"fg":2}],["                                                                                           ",{}]],"13":[["  (interactive ",{}],["\"*P\"",{"fg":2}],[")                                                                        ",{}]],"14":[["  (comment-normalize-vars)                                                                  ",{}]],"15":[["  (",{}],["if",{"fg":6,"bold":true}],[" (and (not (region-active-p)) (not (looking-at ",{}],["\"[ \\t]*$\"",{"fg":2}],[")))                            ",{}]],"16":[["      (comment-or-uncomment-region (line-beginning-position) (line-end-position))           ",{}]],"17":[["    (comment-dwim arg)))                                                                    ",{}]],"19":[["                                                                                            ",{}]],"20":[[";;------------------------------------------------------------                              ",{"fg":1}]],"21":[["                                                                                            ",{}]],"22":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["begin-line-and-insert-line",{"fg":4,"bold":true}],[" ( arg)                                                    ",{}]],"23":[["  ",{}],["\"C-o\"",{"fg":2}],["                                                                                     ",{}]],"24":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"25":[["  (move-beginning-of-line 1)                                                                ",{}]],"26":[["  (open-line 1))                                                                            ",{}]],"27":[["                                                                                            ",{}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   68% L320  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]}}],[0.030808,{"lines":{"1":[["  ",{}],["\"\"",{"fg":2}],["                                                                                        ",{}]],"2":[["  (interactive ",{}],["\"\"",{"fg":2}],[")                                                                          ",{}]],"3":[["  (find-tag-ex  t)                                                                          ",{}]],"4":[["  )                                                                                         ",{}]],"6":[["                                                                                            ",{}]],"7":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["qiang-comment-dwim-line",{"fg":4,"bold":true}],[" (",{}],["&optional",{"fg":2}],[" arg)                                              ",{}]],"8":[["  ",{}],["\"Replacement for the comment-dwim command.                                                ",{"fg":2}]],"9":[["If no region is selected and current line is not blank and we are not at the end of the lin",{"fg":2}],["\\",{}]],"10":[["e,                                                                                          ",{"fg":2}]],"11":[["then comment current line.                                                                  ",{"fg":2}]],"12":[["Replaces default behaviour of comment-dwim, when it inserts comment at the end of the line.",{"fg":2}],["\\",{}]],"13":[["\"",{"fg":2}],["                                                                                           ",{}]],"14":[["  (interactive ",{}],["\"*P\"",{"fg":2}],[")                                                                        ",{}]],"15":[["  (comment-normalize-vars)                                                                  ",{}]],"16":[["  (",{}],["if",{"fg":6,"bold":true}],[" (and (not (region-active-p)) (not (looking-at ",{}],["\"[ \\t]*$\"",{"fg":2}],[")))                            ",{}]],"17":[["      (comment-or-uncomment-region (line-beginning-position) (line-end-position))           ",{}]],"18":[["    (comment-dwim arg)))                                                                    ",{}]],"20":[["                                                                                            ",{}]],"21":[[";;------------------------------------------------------------                              ",{"fg":1}]],"22":[["                                                                                            ",{}]],"23":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["begin-line-and-insert-line",{"fg":4,"bold":true}],[" ( arg)                                                    ",{}]],"24":[["  ",{}],["\"C-o\"",{"fg":2}],["                                                                                     ",{}]],"25":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"26":[["  (move-beginning-of-line 1)                                                                ",{}]],"27":[["  (open-line 1))                                                                            ",{}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   68% L319  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":3}}],[0.029248,{"lines":{"1":[["                                                                                            ",{}]],"2":[["  ",{}],["\"\"",{"fg":2}],["                                                                                        ",{}]],"3":[["  (interactive ",{}],["\"\"",{"fg":2}],[")                                                                          ",{}]],"4":[["  (find-tag-ex  t)                                                                          ",{}]],"5":[["  )                                                                                         ",{}]],"7":[["                                                                                            ",{}]],"8":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["qiang-comment-dwim-line",{"fg":4,"bold":true}],[" (",{}],["&optional",{"fg":2}],[" arg)                                              ",{}]],"9":[["  ",{}],["\"Replacement for the comment-dwim command.                                                ",{"fg":2}]],"10":[["If no region is selected and current line is not blank and we are not at the end of the lin",{"fg":2}],["\\",{}]],"11":[["e,                                                                                          ",{"fg":2}]],"12":[["then comment current line.                                                                  ",{"fg":2}]],"13":[["Replaces default behaviour of comment-dwim, when it inserts comment at the end of the line.",{"fg":2}],["\\",{}]],"14":[["\"",{"fg":2}],["                                                                                           ",{}]],"15":[["  (interactive ",{}],["\"*P\"",{"fg":2}],[")                                                                        ",{}]],"16":[["  (comment-normalize-vars)                                                                  ",{}]],"17":[["  (",{}],["if",{"fg":6,"bold":true}],[" (and (not (region-active-p)) (not (looking-at ",{}],["\"[ \\t]*$\"",{"fg":2}],[")))                            ",{}]],"18":[["      (comment-or-uncomment-region (line-beginning-position) (line-end-position))           ",{}]],"19":[["    (comment-dwim arg)))                                                                    ",{}]],"21":[["                                                                                            ",{}]],"22":[[";;------------------------------------------------------------                              ",{"fg":1}]],"23":[["                                                                                            ",{}]],"24":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["begin-line-and-insert-line",{"fg":4,"bold":true}],[" ( arg)                                                    ",{}]],"25":[["  ",{}],["\"C-o\"",{"fg":2}],["                                                                                     ",{}]],"26":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"27":[["  (move-beginning-of-line 1)                                                                ",{}]]},"cursor":{"x":0}}],[0.000602,{"lines":{"1":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["find-tag-next-ex",{"fg":4,"bold":true}],[" ",{}],["(",{"bg":6}],["  ",{}],[")",{"bg":6}],["                                                                ",{}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   68% L318  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":27}}],[0.031564,{"lines":{"1":[["                                                                                            ",{}]],"2":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["find-tag-next-ex",{"fg":4,"bold":true}],[" (  )                                                                ",{}]],"3":[["  ",{}],["\"\"",{"fg":2}],["                                                                                        ",{}]],"4":[["  (interactive ",{}],["\"\"",{"fg":2}],[")                                                                          ",{}]],"5":[["  (find-tag-ex  t)                                                                          ",{}]],"6":[["  )                                                                                         ",{}]],"8":[["                                                                                            ",{}]],"9":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["qiang-comment-dwim-line",{"fg":4,"bold":true}],[" (",{}],["&optional",{"fg":2}],[" arg)                                              ",{}]],"10":[["  ",{}],["\"Replacement for the comment-dwim command.                                                ",{"fg":2}]],"11":[["If no region is selected and current line is not blank and we are not at the end of the lin",{"fg":2}],["\\",{}]],"12":[["e,                                                                                          ",{"fg":2}]],"13":[["then comment current line.                                                                  ",{"fg":2}]],"14":[["Replaces default behaviour of comment-dwim, when it inserts comment at the end of the line.",{"fg":2}],["\\",{}]],"15":[["\"",{"fg":2}],["                                                                                           ",{}]],"16":[["  (interactive ",{}],["\"*P\"",{"fg":2}],[")                                                                        ",{}]],"17":[["  (comment-normalize-vars)                                                                  ",{}]],"18":[["  (",{}],["if",{"fg":6,"bold":true}],[" (and (not (region-active-p)) (not (looking-at ",{}],["\"[ \\t]*$\"",{"fg":2}],[")))                            ",{}]],"19":[["      (comment-or-uncomment-region (line-beginning-position) (line-end-position))           ",{}]],"20":[["    (comment-dwim arg)))                                                                    ",{}]],"22":[["                                                                                            ",{}]],"23":[[";;------------------------------------------------------------                              ",{"fg":1}]],"24":[["                                                                                            ",{}]],"25":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["begin-line-and-insert-line",{"fg":4,"bold":true}],[" ( arg)                                                    ",{}]],"26":[["  ",{}],["\"C-o\"",{"fg":2}],["                                                                                     ",{}]],"27":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   68% L317  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":0}}],[0.030303,{"lines":{"1":[["  ",{}],[")",{"bg":6}],["                                                                                         ",{}]],"2":[["                                                                                            ",{}]],"3":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["find-tag-next-ex",{"fg":4,"bold":true}],[" (  )                                                                ",{}]],"4":[["  ",{}],["\"\"",{"fg":2}],["                                                                                        ",{}]],"5":[["  (interactive ",{}],["\"\"",{"fg":2}],[")                                                                          ",{}]],"6":[["  (find-tag-ex  t)                                                                          ",{}]],"7":[["  )                                                                                         ",{}]],"9":[["                                                                                            ",{}]],"10":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["qiang-comment-dwim-line",{"fg":4,"bold":true}],[" (",{}],["&optional",{"fg":2}],[" arg)                                              ",{}]],"11":[["  ",{}],["\"Replacement for the comment-dwim command.                                                ",{"fg":2}]],"12":[["If no region is selected and current line is not blank and we are not at the end of the lin",{"fg":2}],["\\",{}]],"13":[["e,                                                                                          ",{"fg":2}]],"14":[["then comment current line.                                                                  ",{"fg":2}]],"15":[["Replaces default behaviour of comment-dwim, when it inserts comment at the end of the line.",{"fg":2}],["\\",{}]],"16":[["\"",{"fg":2}],["                                                                                           ",{}]],"17":[["  (interactive ",{}],["\"*P\"",{"fg":2}],[")                                                                        ",{}]],"18":[["  (comment-normalize-vars)                                                                  ",{}]],"19":[["  (",{}],["if",{"fg":6,"bold":true}],[" (and (not (region-active-p)) (not (looking-at ",{}],["\"[ \\t]*$\"",{"fg":2}],[")))                            ",{}]],"20":[["      (comment-or-uncomment-region (line-beginning-position) (line-end-position))           ",{}]],"21":[["    (comment-dwim arg)))                                                                    ",{}]],"23":[["                                                                                            ",{}]],"24":[[";;------------------------------------------------------------                              ",{"fg":1}]],"25":[["                                                                                            ",{}]],"26":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["begin-line-and-insert-line",{"fg":4,"bold":true}],[" ( arg)                                                    ",{}]],"27":[["  ",{}],["\"C-o\"",{"fg":2}],["                                                                                     ",{}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   67% L316  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":2}}],[0.030981,{"lines":{"1":[["    ",{}],[")",{"bg":6}],["                                                                                       ",{}]],"2":[["  )                                                                                         ",{}]],"3":[["                                                                                            ",{}]],"4":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["find-tag-next-ex",{"fg":4,"bold":true}],[" (  )                                                                ",{}]],"5":[["  ",{}],["\"\"",{"fg":2}],["                                                                                        ",{}]],"6":[["  (interactive ",{}],["\"\"",{"fg":2}],[")                                                                          ",{}]],"7":[["  (find-tag-ex  t)                                                                          ",{}]],"8":[["  )                                                                                         ",{}]],"10":[["                                                                                            ",{}]],"11":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["qiang-comment-dwim-line",{"fg":4,"bold":true}],[" (",{}],["&optional",{"fg":2}],[" arg)                                              ",{}]],"12":[["  ",{}],["\"Replacement for the comment-dwim command.                                                ",{"fg":2}]],"13":[["If no region is selected and current line is not blank and we are not at the end of the lin",{"fg":2}],["\\",{}]],"14":[["e,                                                                                          ",{"fg":2}]],"15":[["then comment current line.                                                                  ",{"fg":2}]],"16":[["Replaces default behaviour of comment-dwim, when it inserts comment at the end of the line.",{"fg":2}],["\\",{}]],"17":[["\"",{"fg":2}],["                                                                                           ",{}]],"18":[["  (interactive ",{}],["\"*P\"",{"fg":2}],[")                                                                        ",{}]],"19":[["  (comment-normalize-vars)                                                                  ",{}]],"20":[["  (",{}],["if",{"fg":6,"bold":true}],[" (and (not (region-active-p)) (not (looking-at ",{}],["\"[ \\t]*$\"",{"fg":2}],[")))                            ",{}]],"21":[["      (comment-or-uncomment-region (line-beginning-position) (line-end-position))           ",{}]],"22":[["    (comment-dwim arg)))                                                                    ",{}]],"24":[["                                                                                            ",{}]],"25":[[";;------------------------------------------------------------                              ",{"fg":1}]],"26":[["                                                                                            ",{}]],"27":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["begin-line-and-insert-line",{"fg":4,"bold":true}],[" ( arg)                                                    ",{}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   67% L315  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":4}}],[0.029258,{"lines":{"1":[["                                                                                            ",{}]],"2":[["    ",{}],[")",{"bg":6}],["                                                                                       ",{}]],"3":[["  )                                                                                         ",{}]],"4":[["                                                                                            ",{}]],"5":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["find-tag-next-ex",{"fg":4,"bold":true}],[" (  )                                                                ",{}]],"6":[["  ",{}],["\"\"",{"fg":2}],["                                                                                        ",{}]],"7":[["  (interactive ",{}],["\"\"",{"fg":2}],[")                                                                          ",{}]],"8":[["  (find-tag-ex  t)                                                                          ",{}]],"9":[["  )                                                                                         ",{}]],"11":[["                                                                                            ",{}]],"12":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["qiang-comment-dwim-line",{"fg":4,"bold":true}],[" (",{}],["&optional",{"fg":2}],[" arg)                                              ",{}]],"13":[["  ",{}],["\"Replacement for the comment-dwim command.                                                ",{"fg":2}]],"14":[["If no region is selected and current line is not blank and we are not at the end of the lin",{"fg":2}],["\\",{}]],"15":[["e,                                                                                          ",{"fg":2}]],"16":[["then comment current line.                                                                  ",{"fg":2}]],"17":[["Replaces default behaviour of comment-dwim, when it inserts comment at the end of the line.",{"fg":2}],["\\",{}]],"18":[["\"",{"fg":2}],["                                                                                           ",{}]],"19":[["  (interactive ",{}],["\"*P\"",{"fg":2}],[")                                                                        ",{}]],"20":[["  (comment-normalize-vars)                                                                  ",{}]],"21":[["  (",{}],["if",{"fg":6,"bold":true}],[" (and (not (region-active-p)) (not (looking-at ",{}],["\"[ \\t]*$\"",{"fg":2}],[")))                            ",{}]],"22":[["      (comment-or-uncomment-region (line-beginning-position) (line-end-position))           ",{}]],"23":[["    (comment-dwim arg)))                                                                    ",{}]],"25":[["                                                                                            ",{}]],"26":[[";;------------------------------------------------------------                              ",{"fg":1}]]},"cursor":{"x":0}}],[0.001227,{"lines":{"1":[["    (find-tag   cur-word next-p nil)                                                        ",{}]],"2":[["    )                                                                                       ",{}]],"27":[["                                                                                            ",{}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   67% L314  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":32}}],[0.030124,{"lines":{"1":[["  (",{}],["let",{"fg":6,"bold":true}],[" ((cur-word ",{}],["(",{"bg":6}],["current-word ",{}],[")",{"bg":6}],["))                                                         ",{}]],"2":[["    (find-tag   cur-word next-p nil)                                                        ",{}]],"3":[["    )                                                                                       ",{}]],"4":[["  )                                                                                         ",{}]],"5":[["                                                                                            ",{}]],"6":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["find-tag-next-ex",{"fg":4,"bold":true}],[" (  )                                                                ",{}]],"7":[["  ",{}],["\"\"",{"fg":2}],["                                                                                        ",{}]],"8":[["  (interactive ",{}],["\"\"",{"fg":2}],[")                                                                          ",{}]],"9":[["  (find-tag-ex  t)                                                                          ",{}]],"10":[["  )                                                                                         ",{}]],"12":[["                                                                                            ",{}]],"13":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["qiang-comment-dwim-line",{"fg":4,"bold":true}],[" (",{}],["&optional",{"fg":2}],[" arg)                                              ",{}]],"14":[["  ",{}],["\"Replacement for the comment-dwim command.                                                ",{"fg":2}]],"15":[["If no region is selected and current line is not blank and we are not at the end of the lin",{"fg":2}],["\\",{}]],"16":[["e,                                                                                          ",{"fg":2}]],"17":[["then comment current line.                                                                  ",{"fg":2}]],"18":[["Replaces default behaviour of comment-dwim, when it inserts comment at the end of the line.",{"fg":2}],["\\",{}]],"19":[["\"",{"fg":2}],["                                                                                           ",{}]],"20":[["  (interactive ",{}],["\"*P\"",{"fg":2}],[")                                                                        ",{}]],"21":[["  (comment-normalize-vars)                                                                  ",{}]],"22":[["  (",{}],["if",{"fg":6,"bold":true}],[" (and (not (region-active-p)) (not (looking-at ",{}],["\"[ \\t]*$\"",{"fg":2}],[")))                            ",{}]],"23":[["      (comment-or-uncomment-region (line-beginning-position) (line-end-position))           ",{}]],"24":[["    (comment-dwim arg)))                                                                    ",{}]],"26":[["                                                                                            ",{}]],"27":[[";;------------------------------------------------------------                              ",{"fg":1}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   67% L313  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]}}],[0.032542,{"lines":{"1":[["  ",{}],[";; (find-tag  (current-word) next-p t)                                                    ",{"fg":1}]],"2":[["  (",{}],["let",{"fg":6,"bold":true}],[" ((cur-word ",{}],["(",{"bg":6}],["current-word ",{}],[")",{"bg":6}],["))                                                         ",{}]],"3":[["    (find-tag   cur-word next-p nil)                                                        ",{}]],"4":[["    )                                                                                       ",{}]],"5":[["  )                                                                                         ",{}]],"6":[["                                                                                            ",{}]],"7":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["find-tag-next-ex",{"fg":4,"bold":true}],[" (  )                                                                ",{}]],"8":[["  ",{}],["\"\"",{"fg":2}],["                                                                                        ",{}]],"9":[["  (interactive ",{}],["\"\"",{"fg":2}],[")                                                                          ",{}]],"10":[["  (find-tag-ex  t)                                                                          ",{}]],"11":[["  )                                                                                         ",{}]],"13":[["                                                                                            ",{}]],"14":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["qiang-comment-dwim-line",{"fg":4,"bold":true}],[" (",{}],["&optional",{"fg":2}],[" arg)                                              ",{}]],"15":[["  ",{}],["\"Replacement for the comment-dwim command.                                                ",{"fg":2}]],"16":[["If no region is selected and current line is not blank and we are not at the end of the lin",{"fg":2}],["\\",{}]],"17":[["e,                                                                                          ",{"fg":2}]],"18":[["then comment current line.                                                                  ",{"fg":2}]],"19":[["Replaces default behaviour of comment-dwim, when it inserts comment at the end of the line.",{"fg":2}],["\\",{}]],"20":[["\"",{"fg":2}],["                                                                                           ",{}]],"21":[["  (interactive ",{}],["\"*P\"",{"fg":2}],[")                                                                        ",{}]],"22":[["  (comment-normalize-vars)                                                                  ",{}]],"23":[["  (",{}],["if",{"fg":6,"bold":true}],[" (and (not (region-active-p)) (not (looking-at ",{}],["\"[ \\t]*$\"",{"fg":2}],[")))                            ",{}]],"24":[["      (comment-or-uncomment-region (line-beginning-position) (line-end-position))           ",{}]],"25":[["    (comment-dwim arg)))                                                                    ",{}]],"27":[["                                                                                            ",{}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   67% L312  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]}}],[0.000177,{"lines":{"2":[["  (",{}],["let",{"fg":6,"bold":true}],[" ((cur-word (current-word )))                                                         ",{}]]}}],[0.027142,{"lines":{"1":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"2":[["  ",{}],[";; (find-tag  (current-word) next-p t)                                                    ",{"fg":1}]],"3":[["  (",{}],["let",{"fg":6,"bold":true}],[" ((cur-word (current-word )))                                                         ",{}]],"4":[["    (find-tag   cur-word next-p nil)                                                        ",{}]],"5":[["    )                                                                                       ",{}]],"6":[["  )                                                                                         ",{}]],"7":[["                                                                                            ",{}]],"8":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["find-tag-next-ex",{"fg":4,"bold":true}],[" (  )                                                                ",{}]],"9":[["  ",{}],["\"\"",{"fg":2}],["                                                                                        ",{}]],"10":[["  (interactive ",{}],["\"\"",{"fg":2}],[")                                                                          ",{}]],"11":[["  (find-tag-ex  t)                                                                          ",{}]],"12":[["  )                                                                                         ",{}]],"14":[["                                                                                            ",{}]],"15":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["qiang-comment-dwim-line",{"fg":4,"bold":true}],[" (",{}],["&optional",{"fg":2}],[" arg)                                              ",{}]],"16":[["  ",{}],["\"Replacement for the comment-dwim command.                                                ",{"fg":2}]],"17":[["If no region is selected and current line is not blank and we are not at the end of the lin",{"fg":2}],["\\",{}]],"18":[["e,                                                                                          ",{"fg":2}]],"19":[["then comment current line.                                                                  ",{"fg":2}]],"20":[["Replaces default behaviour of comment-dwim, when it inserts comment at the end of the line.",{"fg":2}],["\\",{}]],"21":[["\"",{"fg":2}],["                                                                                           ",{}]],"22":[["  (interactive ",{}],["\"*P\"",{"fg":2}],[")                                                                        ",{}]],"23":[["  (comment-normalize-vars)                                                                  ",{}]],"24":[["  (",{}],["if",{"fg":6,"bold":true}],[" (and (not (region-active-p)) (not (looking-at ",{}],["\"[ \\t]*$\"",{"fg":2}],[")))                            ",{}]],"25":[["      (comment-or-uncomment-region (line-beginning-position) (line-end-position))           ",{}]],"26":[["    (comment-dwim arg)))                                                                    ",{}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   67% L311  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":18}}],[0.000496,{"lines":{"1":[["  ",{}],["(",{"bg":6}],["interactive ",{}],["\"P\"",{"fg":2}],[")",{"bg":6}],["                                                                         ",{}]]}}],[0.030672,{"lines":{"1":[["  ",{}],["\"\"",{"fg":2}],["                                                                                        ",{}]],"2":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"3":[["  ",{}],[";; (find-tag  (current-word) next-p t)                                                    ",{"fg":1}]],"4":[["  (",{}],["let",{"fg":6,"bold":true}],[" ((cur-word (current-word )))                                                         ",{}]],"5":[["    (find-tag   cur-word next-p nil)                                                        ",{}]],"6":[["    )                                                                                       ",{}]],"7":[["  )                                                                                         ",{}]],"8":[["                                                                                            ",{}]],"9":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["find-tag-next-ex",{"fg":4,"bold":true}],[" (  )                                                                ",{}]],"10":[["  ",{}],["\"\"",{"fg":2}],["                                                                                        ",{}]],"11":[["  (interactive ",{}],["\"\"",{"fg":2}],[")                                                                          ",{}]],"12":[["  (find-tag-ex  t)                                                                          ",{}]],"13":[["  )                                                                                         ",{}]],"15":[["                                                                                            ",{}]],"16":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["qiang-comment-dwim-line",{"fg":4,"bold":true}],[" (",{}],["&optional",{"fg":2}],[" arg)                                              ",{}]],"17":[["  ",{}],["\"Replacement for the comment-dwim command.                                                ",{"fg":2}]],"18":[["If no region is selected and current line is not blank and we are not at the end of the lin",{"fg":2}],["\\",{}]],"19":[["e,                                                                                          ",{"fg":2}]],"20":[["then comment current line.                                                                  ",{"fg":2}]],"21":[["Replaces default behaviour of comment-dwim, when it inserts comment at the end of the line.",{"fg":2}],["\\",{}]],"22":[["\"",{"fg":2}],["                                                                                           ",{}]],"23":[["  (interactive ",{}],["\"*P\"",{"fg":2}],[")                                                                        ",{}]],"24":[["  (comment-normalize-vars)                                                                  ",{}]],"25":[["  (",{}],["if",{"fg":6,"bold":true}],[" (and (not (region-active-p)) (not (looking-at ",{}],["\"[ \\t]*$\"",{"fg":2}],[")))                            ",{}]],"26":[["      (comment-or-uncomment-region (line-beginning-position) (line-end-position))           ",{}]],"27":[["    (comment-dwim arg)))                                                                    ",{}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   67% L310  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":3}}],[0.030817,{"lines":{"1":[["                                                                                            ",{}]],"2":[["  ",{}],["\"\"",{"fg":2}],["                                                                                        ",{}]],"3":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"4":[["  ",{}],[";; (find-tag  (current-word) next-p t)                                                    ",{"fg":1}]],"5":[["  (",{}],["let",{"fg":6,"bold":true}],[" ((cur-word (current-word )))                                                         ",{}]],"6":[["    (find-tag   cur-word next-p nil)                                                        ",{}]],"7":[["    )                                                                                       ",{}]],"8":[["  )                                                                                         ",{}]],"9":[["                                                                                            ",{}]],"10":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["find-tag-next-ex",{"fg":4,"bold":true}],[" (  )                                                                ",{}]],"11":[["  ",{}],["\"\"",{"fg":2}],["                                                                                        ",{}]],"12":[["  (interactive ",{}],["\"\"",{"fg":2}],[")                                                                          ",{}]],"13":[["  (find-tag-ex  t)                                                                          ",{}]],"14":[["  )                                                                                         ",{}]],"16":[["                                                                                            ",{}]],"17":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["qiang-comment-dwim-line",{"fg":4,"bold":true}],[" (",{}],["&optional",{"fg":2}],[" arg)                                              ",{}]],"18":[["  ",{}],["\"Replacement for the comment-dwim command.                                                ",{"fg":2}]],"19":[["If no region is selected and current line is not blank and we are not at the end of the lin",{"fg":2}],["\\",{}]],"20":[["e,                                                                                          ",{"fg":2}]],"21":[["then comment current line.                                                                  ",{"fg":2}]],"22":[["Replaces default behaviour of comment-dwim, when it inserts comment at the end of the line.",{"fg":2}],["\\",{}]],"23":[["\"",{"fg":2}],["                                                                                           ",{}]],"24":[["  (interactive ",{}],["\"*P\"",{"fg":2}],[")                                                                        ",{}]],"25":[["  (comment-normalize-vars)                                                                  ",{}]],"26":[["  (",{}],["if",{"fg":6,"bold":true}],[" (and (not (region-active-p)) (not (looking-at ",{}],["\"[ \\t]*$\"",{"fg":2}],[")))                            ",{}]],"27":[["      (comment-or-uncomment-region (line-beginning-position) (line-end-position))           ",{}]]},"cursor":{"x":0}}],[0.000253,{"lines":{"1":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["find-tag-ex",{"fg":4,"bold":true}],[" (  ",{}],["&optional",{"fg":2}],[" next-p)                                                     ",{}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   66% L309  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":32}}],[0.030811,{"lines":{"1":[["                                                                                            ",{}]],"2":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["find-tag-ex",{"fg":4,"bold":true}],[" (  ",{}],["&optional",{"fg":2}],[" next-p)                                                     ",{}]],"3":[["  ",{}],["\"\"",{"fg":2}],["                                                                                        ",{}]],"4":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"5":[["  ",{}],[";; (find-tag  (current-word) next-p t)                                                    ",{"fg":1}]],"6":[["  (",{}],["let",{"fg":6,"bold":true}],[" ((cur-word (current-word )))                                                         ",{}]],"7":[["    (find-tag   cur-word next-p nil)                                                        ",{}]],"8":[["    )                                                                                       ",{}]],"9":[["  )                                                                                         ",{}]],"10":[["                                                                                            ",{}]],"11":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["find-tag-next-ex",{"fg":4,"bold":true}],[" (  )                                                                ",{}]],"12":[["  ",{}],["\"\"",{"fg":2}],["                                                                                        ",{}]],"13":[["  (interactive ",{}],["\"\"",{"fg":2}],[")                                                                          ",{}]],"14":[["  (find-tag-ex  t)                                                                          ",{}]],"15":[["  )                                                                                         ",{}]],"17":[["                                                                                            ",{}]],"18":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["qiang-comment-dwim-line",{"fg":4,"bold":true}],[" (",{}],["&optional",{"fg":2}],[" arg)                                              ",{}]],"19":[["  ",{}],["\"Replacement for the comment-dwim command.                                                ",{"fg":2}]],"20":[["If no region is selected and current line is not blank and we are not at the end of the lin",{"fg":2}],["\\",{}]],"21":[["e,                                                                                          ",{"fg":2}]],"22":[["then comment current line.                                                                  ",{"fg":2}]],"23":[["Replaces default behaviour of comment-dwim, when it inserts comment at the end of the line.",{"fg":2}],["\\",{}]],"24":[["\"",{"fg":2}],["                                                                                           ",{}]],"25":[["  (interactive ",{}],["\"*P\"",{"fg":2}],[")                                                                        ",{}]],"26":[["  (comment-normalize-vars)                                                                  ",{}]],"27":[["  (",{}],["if",{"fg":6,"bold":true}],[" (and (not (region-active-p)) (not (looking-at ",{}],["\"[ \\t]*$\"",{"fg":2}],[")))                            ",{}]]},"cursor":{"x":0}}],[0.00122,{"lines":{"1":[["  ",{}],[")",{"bg":6}],["                                                                                         ",{}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   66% L308  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":2}}],[0.029186,{"lines":{"1":[["                                                                                            ",{}]],"2":[["  ",{}],[")",{"bg":6}],["                                                                                         ",{}]],"3":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["find-tag-ex",{"fg":4,"bold":true}],[" (  ",{}],["&optional",{"fg":2}],[" next-p)                                                     ",{}]],"4":[["  ",{}],["\"\"",{"fg":2}],["                                                                                        ",{}]],"5":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"6":[["  ",{}],[";; (find-tag  (current-word) next-p t)                                                    ",{"fg":1}]],"7":[["  (",{}],["let",{"fg":6,"bold":true}],[" ((cur-word (current-word )))                                                         ",{}]],"8":[["    (find-tag   cur-word next-p nil)                                                        ",{}]],"9":[["    )                                                                                       ",{}]],"10":[["  )                                                                                         ",{}]],"11":[["                                                                                            ",{}]],"12":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["find-tag-next-ex",{"fg":4,"bold":true}],[" (  )                                                                ",{}]],"13":[["  ",{}],["\"\"",{"fg":2}],["                                                                                        ",{}]],"14":[["  (interactive ",{}],["\"\"",{"fg":2}],[")                                                                          ",{}]],"15":[["  (find-tag-ex  t)                                                                          ",{}]],"16":[["  )                                                                                         ",{}]],"18":[["                                                                                            ",{}]],"19":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["qiang-comment-dwim-line",{"fg":4,"bold":true}],[" (",{}],["&optional",{"fg":2}],[" arg)                                              ",{}]],"20":[["  ",{}],["\"Replacement for the comment-dwim command.                                                ",{"fg":2}]],"21":[["If no region is selected and current line is not blank and we are not at the end of the lin",{"fg":2}],["\\",{}]],"22":[["e,                                                                                          ",{"fg":2}]],"23":[["then comment current line.                                                                  ",{"fg":2}]],"24":[["Replaces default behaviour of comment-dwim, when it inserts comment at the end of the line.",{"fg":2}],["\\",{}]],"25":[["\"",{"fg":2}],["                                                                                           ",{}]],"26":[["  (interactive ",{}],["\"*P\"",{"fg":2}],[")                                                                        ",{}]],"27":[["  (comment-normalize-vars)                                                                  ",{}]]},"cursor":{"x":0}}],[0.001232,{"lines":{"1":[["    (",{}],["progn",{"fg":6,"bold":true}],[" (yank))",{}],[")",{"bg":6}],["                                                                         ",{}]],"2":[["  )                                                                                         ",{}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   66% L307  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":18}}],[0.029034,{"lines":{"1":[["                                                                                            ",{}]],"2":[["    (",{}],["progn",{"fg":6,"bold":true}],[" (yank))",{}],[")",{"bg":6}],["                                                                         ",{}]],"3":[["  )                                                                                         ",{}]],"4":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["find-tag-ex",{"fg":4,"bold":true}],[" (  ",{}],["&optional",{"fg":2}],[" next-p)                                                     ",{}]],"5":[["  ",{}],["\"\"",{"fg":2}],["                                                                                        ",{}]],"6":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"7":[["  ",{}],[";; (find-tag  (current-word) next-p t)                                                    ",{"fg":1}]],"8":[["  (",{}],["let",{"fg":6,"bold":true}],[" ((cur-word (current-word )))                                                         ",{}]],"9":[["    (find-tag   cur-word next-p nil)                                                        ",{}]],"10":[["    )                                                                                       ",{}]],"11":[["  )                                                                                         ",{}]],"12":[["                                                                                            ",{}]],"13":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["find-tag-next-ex",{"fg":4,"bold":true}],[" (  )                                                                ",{}]],"14":[["  ",{}],["\"\"",{"fg":2}],["                                                                                        ",{}]],"15":[["  (interactive ",{}],["\"\"",{"fg":2}],[")                                                                          ",{}]],"16":[["  (find-tag-ex  t)                                                                          ",{}]],"17":[["  )                                                                                         ",{}]],"19":[["                                                                                            ",{}]],"20":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["qiang-comment-dwim-line",{"fg":4,"bold":true}],[" (",{}],["&optional",{"fg":2}],[" arg)                                              ",{}]],"21":[["  ",{}],["\"Replacement for the comment-dwim command.                                                ",{"fg":2}]],"22":[["If no region is selected and current line is not blank and we are not at the end of the lin",{"fg":2}],["\\",{}]],"23":[["e,                                                                                          ",{"fg":2}]],"24":[["then comment current line.                                                                  ",{"fg":2}]],"25":[["Replaces default behaviour of comment-dwim, when it inserts comment at the end of the line.",{"fg":2}],["\\",{}]],"26":[["\"",{"fg":2}],["                                                                                           ",{}]],"27":[["  (interactive ",{}],["\"*P\"",{"fg":2}],[")                                                                        ",{}]]},"cursor":{"x":0}}],[0.001273,{"lines":{"1":[["      (",{}],["progn",{"fg":6,"bold":true}],[" (move-beginning-of-line 1) (",{}],["save-excursion",{"fg":6,"bold":true}],[" (yank )))                           ",{}]],"2":[["    (",{}],["progn",{"fg":6,"bold":true}],[" (yank)))                                                                         ",{}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   66% L306  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":32}}],[0.029352,{"lines":{"1":[["                                                                                            ",{}]],"2":[["      (",{}],["progn",{"fg":6,"bold":true}],[" (move-beginning-of-line 1) (",{}],["save-excursion",{"fg":6,"bold":true}],[" (yank )))                           ",{}]],"3":[["    (",{}],["progn",{"fg":6,"bold":true}],[" (yank)))                                                                         ",{}]],"4":[["  )                                                                                         ",{}]],"5":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["find-tag-ex",{"fg":4,"bold":true}],[" (  ",{}],["&optional",{"fg":2}],[" next-p)                                                     ",{}]],"6":[["  ",{}],["\"\"",{"fg":2}],["                                                                                        ",{}]],"7":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"8":[["  ",{}],[";; (find-tag  (current-word) next-p t)                                                    ",{"fg":1}]],"9":[["  (",{}],["let",{"fg":6,"bold":true}],[" ((cur-word (current-word )))                                                         ",{}]],"10":[["    (find-tag   cur-word next-p nil)                                                        ",{}]],"11":[["    )                                                                                       ",{}]],"12":[["  )                                                                                         ",{}]],"13":[["                                                                                            ",{}]],"14":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["find-tag-next-ex",{"fg":4,"bold":true}],[" (  )                                                                ",{}]],"15":[["  ",{}],["\"\"",{"fg":2}],["                                                                                        ",{}]],"16":[["  (interactive ",{}],["\"\"",{"fg":2}],[")                                                                          ",{}]],"17":[["  (find-tag-ex  t)                                                                          ",{}]],"18":[["  )                                                                                         ",{}]],"20":[["                                                                                            ",{}]],"21":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["qiang-comment-dwim-line",{"fg":4,"bold":true}],[" (",{}],["&optional",{"fg":2}],[" arg)                                              ",{}]],"22":[["  ",{}],["\"Replacement for the comment-dwim command.                                                ",{"fg":2}]],"23":[["If no region is selected and current line is not blank and we are not at the end of the lin",{"fg":2}],["\\",{}]],"24":[["e,                                                                                          ",{"fg":2}]],"25":[["then comment current line.                                                                  ",{"fg":2}]],"26":[["Replaces default behaviour of comment-dwim, when it inserts comment at the end of the line.",{"fg":2}],["\\",{}]],"27":[["\"",{"fg":2}],["                                                                                           ",{}]]},"cursor":{"x":0}}],[5.5e-05,{"lines":{"1":[["  (",{}],["if",{"fg":6,"bold":true}],[" (string-match ",{}],["\"\\n\"",{"fg":2}],[" (current-kill 0 ))                                                 ",{}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   65% L305  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":32}}],[0.029994,{"lines":{"1":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"2":[["  (",{}],["if",{"fg":6,"bold":true}],[" (string-match ",{}],["\"\\n\"",{"fg":2}],[" (current-kill 0 ))                                                 ",{}]],"3":[["      (",{}],["progn",{"fg":6,"bold":true}],[" (move-beginning-of-line 1) (",{}],["save-excursion",{"fg":6,"bold":true}],[" (yank )))                           ",{}]],"4":[["    (",{}],["progn",{"fg":6,"bold":true}],[" (yank)))                                                                         ",{}]],"5":[["  )                                                                                         ",{}]],"6":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["find-tag-ex",{"fg":4,"bold":true}],[" (  ",{}],["&optional",{"fg":2}],[" next-p)                                                     ",{}]],"7":[["  ",{}],["\"\"",{"fg":2}],["                                                                                        ",{}]],"8":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"9":[["  ",{}],[";; (find-tag  (current-word) next-p t)                                                    ",{"fg":1}]],"10":[["  (",{}],["let",{"fg":6,"bold":true}],[" ((cur-word (current-word )))                                                         ",{}]],"11":[["    (find-tag   cur-word next-p nil)                                                        ",{}]],"12":[["    )                                                                                       ",{}]],"13":[["  )                                                                                         ",{}]],"14":[["                                                                                            ",{}]],"15":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["find-tag-next-ex",{"fg":4,"bold":true}],[" (  )                                                                ",{}]],"16":[["  ",{}],["\"\"",{"fg":2}],["                                                                                        ",{}]],"17":[["  (interactive ",{}],["\"\"",{"fg":2}],[")                                                                          ",{}]],"18":[["  (find-tag-ex  t)                                                                          ",{}]],"19":[["  )                                                                                         ",{}]],"21":[["                                                                                            ",{}]],"22":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["qiang-comment-dwim-line",{"fg":4,"bold":true}],[" (",{}],["&optional",{"fg":2}],[" arg)                                              ",{}]],"23":[["  ",{}],["\"Replacement for the comment-dwim command.                                                ",{"fg":2}]],"24":[["If no region is selected and current line is not blank and we are not at the end of the lin",{"fg":2}],["\\",{}]],"25":[["e,                                                                                          ",{"fg":2}]],"26":[["then comment current line.                                                                  ",{"fg":2}]],"27":[["Replaces default behaviour of comment-dwim, when it inserts comment at the end of the line.",{"fg":2}],["\\",{}]]},"cursor":{"x":19,"visible":false}}],[0.000703,{"lines":{"1":[["  ",{}],["(",{"bg":6}],["interactive ",{}],["\"P\"",{"fg":2}],[")",{"bg":6}],["                                                                         ",{}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   65% L304  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":18,"visible":true}}],[0.02911,{"lines":{"1":[["                                                                                            ",{}]],"2":[["  ",{}],["(",{"bg":6}],["interactive ",{}],["\"P\"",{"fg":2}],[")",{"bg":6}],["                                                                         ",{}]],"3":[["  (",{}],["if",{"fg":6,"bold":true}],[" (string-match ",{}],["\"\\n\"",{"fg":2}],[" (current-kill 0 ))                                                 ",{}]],"4":[["      (",{}],["progn",{"fg":6,"bold":true}],[" (move-beginning-of-line 1) (",{}],["save-excursion",{"fg":6,"bold":true}],[" (yank )))                           ",{}]],"5":[["    (",{}],["progn",{"fg":6,"bold":true}],[" (yank)))                                                                         ",{}]],"6":[["  )                                                                                         ",{}]],"7":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["find-tag-ex",{"fg":4,"bold":true}],[" (  ",{}],["&optional",{"fg":2}],[" next-p)                                                     ",{}]],"8":[["  ",{}],["\"\"",{"fg":2}],["                                                                                        ",{}]],"9":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"10":[["  ",{}],[";; (find-tag  (current-word) next-p t)                                                    ",{"fg":1}]],"11":[["  (",{}],["let",{"fg":6,"bold":true}],[" ((cur-word (current-word )))                                                         ",{}]],"12":[["    (find-tag   cur-word next-p nil)                                                        ",{}]],"13":[["    )                                                                                       ",{}]],"14":[["  )                                                                                         ",{}]],"15":[["                                                                                            ",{}]],"16":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["find-tag-next-ex",{"fg":4,"bold":true}],[" (  )                                                                ",{}]],"17":[["  ",{}],["\"\"",{"fg":2}],["                                                                                        ",{}]],"18":[["  (interactive ",{}],["\"\"",{"fg":2}],[")                                                                          ",{}]],"19":[["  (find-tag-ex  t)                                                                          ",{}]],"20":[["  )                                                                                         ",{}]],"22":[["                                                                                            ",{}]],"23":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["qiang-comment-dwim-line",{"fg":4,"bold":true}],[" (",{}],["&optional",{"fg":2}],[" arg)                                              ",{}]],"24":[["  ",{}],["\"Replacement for the comment-dwim command.                                                ",{"fg":2}]],"25":[["If no region is selected and current line is not blank and we are not at the end of the lin",{"fg":2}],["\\",{}]],"26":[["e,                                                                                          ",{"fg":2}]],"27":[["then comment current line.                                                                  ",{"fg":2}]]},"cursor":{"x":0}}],[0.000794,{"lines":{"1":[["  ",{}],["\"如果复制的是跨行的数据由跳到行首，再yank\"",{"fg":2}],["                                                ",{}]],"2":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   65% L303  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":33}}],[0.030346,{"lines":{"1":[["                                                                                            ",{}]],"2":[["  ",{}],["\"如果复制的是跨行的数据由跳到行首，再yank\"",{"fg":2}],["                                                ",{}]],"3":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"4":[["  (",{}],["if",{"fg":6,"bold":true}],[" (string-match ",{}],["\"\\n\"",{"fg":2}],[" (current-kill 0 ))                                                 ",{}]],"5":[["      (",{}],["progn",{"fg":6,"bold":true}],[" (move-beginning-of-line 1) (",{}],["save-excursion",{"fg":6,"bold":true}],[" (yank )))                           ",{}]],"6":[["    (",{}],["progn",{"fg":6,"bold":true}],[" (yank)))                                                                         ",{}]],"7":[["  )                                                                                         ",{}]],"8":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["find-tag-ex",{"fg":4,"bold":true}],[" (  ",{}],["&optional",{"fg":2}],[" next-p)                                                     ",{}]],"9":[["  ",{}],["\"\"",{"fg":2}],["                                                                                        ",{}]],"10":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"11":[["  ",{}],[";; (find-tag  (current-word) next-p t)                                                    ",{"fg":1}]],"12":[["  (",{}],["let",{"fg":6,"bold":true}],[" ((cur-word (current-word )))                                                         ",{}]],"13":[["    (find-tag   cur-word next-p nil)                                                        ",{}]],"14":[["    )                                                                                       ",{}]],"15":[["  )                                                                                         ",{}]],"16":[["                                                                                            ",{}]],"17":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["find-tag-next-ex",{"fg":4,"bold":true}],[" (  )                                                                ",{}]],"18":[["  ",{}],["\"\"",{"fg":2}],["                                                                                        ",{}]],"19":[["  (interactive ",{}],["\"\"",{"fg":2}],[")                                                                          ",{}]],"20":[["  (find-tag-ex  t)                                                                          ",{}]],"21":[["  )                                                                                         ",{}]],"23":[["                                                                                            ",{}]],"24":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["qiang-comment-dwim-line",{"fg":4,"bold":true}],[" (",{}],["&optional",{"fg":2}],[" arg)                                              ",{}]],"25":[["  ",{}],["\"Replacement for the comment-dwim command.                                                ",{"fg":2}]],"26":[["If no region is selected and current line is not blank and we are not at the end of the lin",{"fg":2}],["\\",{}]],"27":[["e,                                                                                          ",{"fg":2}]]},"cursor":{"x":0}}],[0.001621,{"lines":{"1":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["begin-line-and-yank",{"fg":4,"bold":true}],[" ",{}],["(",{"bg":6}],[" arg",{}],[")",{"bg":6}],["                                                           ",{}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   65% L302  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":32}}],[0.029508,{"lines":{"1":[["                                                                                            ",{}]],"2":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["begin-line-and-yank",{"fg":4,"bold":true}],[" ",{}],["(",{"bg":6}],[" arg",{}],[")",{"bg":6}],["                                                           ",{}]],"3":[["  ",{}],["\"如果复制的是跨行的数据由跳到行首，再yank\"",{"fg":2}],["                                                ",{}]],"4":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"5":[["  (",{}],["if",{"fg":6,"bold":true}],[" (string-match ",{}],["\"\\n\"",{"fg":2}],[" (current-kill 0 ))                                                 ",{}]],"6":[["      (",{}],["progn",{"fg":6,"bold":true}],[" (move-beginning-of-line 1) (",{}],["save-excursion",{"fg":6,"bold":true}],[" (yank )))                           ",{}]],"7":[["    (",{}],["progn",{"fg":6,"bold":true}],[" (yank)))                                                                         ",{}]],"8":[["  )                                                                                         ",{}]],"9":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["find-tag-ex",{"fg":4,"bold":true}],[" (  ",{}],["&optional",{"fg":2}],[" next-p)                                                     ",{}]],"10":[["  ",{}],["\"\"",{"fg":2}],["                                                                                        ",{}]],"11":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"12":[["  ",{}],[";; (find-tag  (current-word) next-p t)                                                    ",{"fg":1}]],"13":[["  (",{}],["let",{"fg":6,"bold":true}],[" ((cur-word (current-word )))                                                         ",{}]],"14":[["    (find-tag   cur-word next-p nil)                                                        ",{}]],"15":[["    )                                                                                       ",{}]],"16":[["  )                                                                                         ",{}]],"17":[["                                                                                            ",{}]],"18":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["find-tag-next-ex",{"fg":4,"bold":true}],[" (  )                                                                ",{}]],"19":[["  ",{}],["\"\"",{"fg":2}],["                                                                                        ",{}]],"20":[["  (interactive ",{}],["\"\"",{"fg":2}],[")                                                                          ",{}]],"21":[["  (find-tag-ex  t)                                                                          ",{}]],"22":[["  )                                                                                         ",{}]],"24":[["                                                                                            ",{}]],"25":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["qiang-comment-dwim-line",{"fg":4,"bold":true}],[" (",{}],["&optional",{"fg":2}],[" arg)                                              ",{}]],"26":[["  ",{}],["\"Replacement for the comment-dwim command.                                                ",{"fg":2}]],"27":[["If no region is selected and current line is not blank and we are not at the end of the lin",{"fg":2}],["\\",{}]]},"cursor":{"x":0}}],[0.000641,{"lines":{"1":[[";;;;--- C-y                                                                                 ",{"fg":1}]],"2":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["begin-line-and-yank",{"fg":4,"bold":true}],[" ( arg)                                                           ",{}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   65% L301  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":10}}],[0.029911,{"lines":{"1":[["                                                                                            ",{}]],"2":[[";;;;--- C-y                                                                                 ",{"fg":1}]],"3":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["begin-line-and-yank",{"fg":4,"bold":true}],[" ( arg)                                                           ",{}]],"4":[["  ",{}],["\"如果复制的是跨行的数据由跳到行首，再yank\"",{"fg":2}],["                                                ",{}]],"5":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"6":[["  (",{}],["if",{"fg":6,"bold":true}],[" (string-match ",{}],["\"\\n\"",{"fg":2}],[" (current-kill 0 ))                                                 ",{}]],"7":[["      (",{}],["progn",{"fg":6,"bold":true}],[" (move-beginning-of-line 1) (",{}],["save-excursion",{"fg":6,"bold":true}],[" (yank )))                           ",{}]],"8":[["    (",{}],["progn",{"fg":6,"bold":true}],[" (yank)))                                                                         ",{}]],"9":[["  )                                                                                         ",{}]],"10":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["find-tag-ex",{"fg":4,"bold":true}],[" (  ",{}],["&optional",{"fg":2}],[" next-p)                                                     ",{}]],"11":[["  ",{}],["\"\"",{"fg":2}],["                                                                                        ",{}]],"12":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"13":[["  ",{}],[";; (find-tag  (current-word) next-p t)                                                    ",{"fg":1}]],"14":[["  (",{}],["let",{"fg":6,"bold":true}],[" ((cur-word (current-word )))                                                         ",{}]],"15":[["    (find-tag   cur-word next-p nil)                                                        ",{}]],"16":[["    )                                                                                       ",{}]],"17":[["  )                                                                                         ",{}]],"18":[["                                                                                            ",{}]],"19":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["find-tag-next-ex",{"fg":4,"bold":true}],[" (  )                                                                ",{}]],"20":[["  ",{}],["\"\"",{"fg":2}],["                                                                                        ",{}]],"21":[["  (interactive ",{}],["\"\"",{"fg":2}],[")                                                                          ",{}]],"22":[["  (find-tag-ex  t)                                                                          ",{}]],"23":[["  )                                                                                         ",{}]],"25":[["                                                                                            ",{}]],"26":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["qiang-comment-dwim-line",{"fg":4,"bold":true}],[" (",{}],["&optional",{"fg":2}],[" arg)                                              ",{}]],"27":[["  ",{}],["\"Replacement for the comment-dwim command.                                                ",{"fg":2}]]},"cursor":{"x":0}}],[5.6e-05,{"lines":{"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   65% L300  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]}}],[0.031736,{"lines":{"2":[["                                                                                            ",{}]],"3":[[";;;;--- C-y                                                                                 ",{"fg":1}]],"4":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["begin-line-and-yank",{"fg":4,"bold":true}],[" ( arg)                                                           ",{}]],"5":[["  ",{}],["\"如果复制的是跨行的数据由跳到行首，再yank\"",{"fg":2}],["                                                ",{}]],"6":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"7":[["  (",{}],["if",{"fg":6,"bold":true}],[" (string-match ",{}],["\"\\n\"",{"fg":2}],[" (current-kill 0 ))                                                 ",{}]],"8":[["      (",{}],["progn",{"fg":6,"bold":true}],[" (move-beginning-of-line 1) (",{}],["save-excursion",{"fg":6,"bold":true}],[" (yank )))                           ",{}]],"9":[["    (",{}],["progn",{"fg":6,"bold":true}],[" (yank)))                                                                         ",{}]],"10":[["  )                                                                                         ",{}]],"11":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["find-tag-ex",{"fg":4,"bold":true}],[" (  ",{}],["&optional",{"fg":2}],[" next-p)                                                     ",{}]],"12":[["  ",{}],["\"\"",{"fg":2}],["                                                                                        ",{}]],"13":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"14":[["  ",{}],[";; (find-tag  (current-word) next-p t)                                                    ",{"fg":1}]],"15":[["  (",{}],["let",{"fg":6,"bold":true}],[" ((cur-word (current-word )))                                                         ",{}]],"16":[["    (find-tag   cur-word next-p nil)                                                        ",{}]],"17":[["    )                                                                                       ",{}]],"18":[["  )                                                                                         ",{}]],"19":[["                                                                                            ",{}]],"20":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["find-tag-next-ex",{"fg":4,"bold":true}],[" (  )                                                                ",{}]],"21":[["  ",{}],["\"\"",{"fg":2}],["                                                                                        ",{}]],"22":[["  (interactive ",{}],["\"\"",{"fg":2}],[")                                                                          ",{}]],"23":[["  (find-tag-ex  t)                                                                          ",{}]],"24":[["  )                                                                                         ",{}]],"26":[["                                                                                            ",{}]],"27":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["qiang-comment-dwim-line",{"fg":4,"bold":true}],[" (",{}],["&optional",{"fg":2}],[" arg)                                              ",{}]]},"cursor":{"y":2}}],[5.6e-05,{"lines":{"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   65% L299  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"y":1}}],[0.029652,{"lines":{"3":[["                                                                                            ",{}]],"4":[[";;;;--- C-y                                                                                 ",{"fg":1}]],"5":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["begin-line-and-yank",{"fg":4,"bold":true}],[" ( arg)                                                           ",{}]],"6":[["  ",{}],["\"如果复制的是跨行的数据由跳到行首，再yank\"",{"fg":2}],["                                                ",{}]],"7":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"8":[["  (",{}],["if",{"fg":6,"bold":true}],[" (string-match ",{}],["\"\\n\"",{"fg":2}],[" (current-kill 0 ))                                                 ",{}]],"9":[["      (",{}],["progn",{"fg":6,"bold":true}],[" (move-beginning-of-line 1) (",{}],["save-excursion",{"fg":6,"bold":true}],[" (yank )))                           ",{}]],"10":[["    (",{}],["progn",{"fg":6,"bold":true}],[" (yank)))                                                                         ",{}]],"11":[["  )                                                                                         ",{}]],"12":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["find-tag-ex",{"fg":4,"bold":true}],[" (  ",{}],["&optional",{"fg":2}],[" next-p)                                                     ",{}]],"13":[["  ",{}],["\"\"",{"fg":2}],["                                                                                        ",{}]],"14":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"15":[["  ",{}],[";; (find-tag  (current-word) next-p t)                                                    ",{"fg":1}]],"16":[["  (",{}],["let",{"fg":6,"bold":true}],[" ((cur-word (current-word )))                                                         ",{}]],"17":[["    (find-tag   cur-word next-p nil)                                                        ",{}]],"18":[["    )                                                                                       ",{}]],"19":[["  )                                                                                         ",{}]],"20":[["                                                                                            ",{}]],"21":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["find-tag-next-ex",{"fg":4,"bold":true}],[" (  )                                                                ",{}]],"22":[["  ",{}],["\"\"",{"fg":2}],["                                                                                        ",{}]],"23":[["  (interactive ",{}],["\"\"",{"fg":2}],[")                                                                          ",{}]],"24":[["  (find-tag-ex  t)                                                                          ",{}]],"25":[["  )                                                                                         ",{}]]},"cursor":{"y":3}}],[5.3e-05,{"lines":{"1":[["  (opt-region-or-whole-line ",{}],["\"kill\"",{"fg":2}],[" arg))                                                    ",{}]],"27":[["                                                                                            ",{}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   65% L298  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":32,"y":1}}],[0.031079,{"lines":{"1":[["                                                                                            ",{}]],"2":[["  (opt-region-or-whole-line ",{}],["\"kill\"",{"fg":2}],[" arg))                                                    ",{}]],"4":[["                                                                                            ",{}]],"5":[[";;;;--- C-y                                                                                 ",{"fg":1}]],"6":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["begin-line-and-yank",{"fg":4,"bold":true}],[" ( arg)                                                           ",{}]],"7":[["  ",{}],["\"如果复制的是跨行的数据由跳到行首，再yank\"",{"fg":2}],["                                                ",{}]],"8":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"9":[["  (",{}],["if",{"fg":6,"bold":true}],[" (string-match ",{}],["\"\\n\"",{"fg":2}],[" (current-kill 0 ))                                                 ",{}]],"10":[["      (",{}],["progn",{"fg":6,"bold":true}],[" (move-beginning-of-line 1) (",{}],["save-excursion",{"fg":6,"bold":true}],[" (yank )))                           ",{}]],"11":[["    (",{}],["progn",{"fg":6,"bold":true}],[" (yank)))                                                                         ",{}]],"12":[["  )                                                                                         ",{}]],"13":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["find-tag-ex",{"fg":4,"bold":true}],[" (  ",{}],["&optional",{"fg":2}],[" next-p)                                                     ",{}]],"14":[["  ",{}],["\"\"",{"fg":2}],["                                                                                        ",{}]],"15":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"16":[["  ",{}],[";; (find-tag  (current-word) next-p t)                                                    ",{"fg":1}]],"17":[["  (",{}],["let",{"fg":6,"bold":true}],[" ((cur-word (current-word )))                                                         ",{}]],"18":[["    (find-tag   cur-word next-p nil)                                                        ",{}]],"19":[["    )                                                                                       ",{}]],"20":[["  )                                                                                         ",{}]],"21":[["                                                                                            ",{}]],"22":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["find-tag-next-ex",{"fg":4,"bold":true}],[" (  )                                                                ",{}]],"23":[["  ",{}],["\"\"",{"fg":2}],["                                                                                        ",{}]],"24":[["  (interactive ",{}],["\"\"",{"fg":2}],[")                                                                          ",{}]],"25":[["  (find-tag-ex  t)                                                                          ",{}]],"26":[["  )                                                                                         ",{}]]},"cursor":{"x":0}}],[0.0007049999999999999,{"lines":{"1":[["  ",{}],["(",{"bg":6}],["interactive ",{}],["\"P\"",{"fg":2}],[")",{"bg":6}],["                                                                         ",{}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   64% L297  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":18}}],[0.029911,{"lines":{"1":[["                                                                                            ",{}]],"2":[["  ",{}],["(",{"bg":6}],["interactive ",{}],["\"P\"",{"fg":2}],[")",{"bg":6}],["                                                                         ",{}]],"3":[["  (opt-region-or-whole-line ",{}],["\"kill\"",{"fg":2}],[" arg))                                                    ",{}]],"5":[["                                                                                            ",{}]],"6":[[";;;;--- C-y                                                                                 ",{"fg":1}]],"7":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["begin-line-and-yank",{"fg":4,"bold":true}],[" ( arg)                                                           ",{}]],"8":[["  ",{}],["\"如果复制的是跨行的数据由跳到行首，再yank\"",{"fg":2}],["                                                ",{}]],"9":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"10":[["  (",{}],["if",{"fg":6,"bold":true}],[" (string-match ",{}],["\"\\n\"",{"fg":2}],[" (current-kill 0 ))                                                 ",{}]],"11":[["      (",{}],["progn",{"fg":6,"bold":true}],[" (move-beginning-of-line 1) (",{}],["save-excursion",{"fg":6,"bold":true}],[" (yank )))                           ",{}]],"12":[["    (",{}],["progn",{"fg":6,"bold":true}],[" (yank)))                                                                         ",{}]],"13":[["  )                                                                                         ",{}]],"14":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["find-tag-ex",{"fg":4,"bold":true}],[" (  ",{}],["&optional",{"fg":2}],[" next-p)                                                     ",{}]],"15":[["  ",{}],["\"\"",{"fg":2}],["                                                                                        ",{}]],"16":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"17":[["  ",{}],[";; (find-tag  (current-word) next-p t)                                                    ",{"fg":1}]],"18":[["  (",{}],["let",{"fg":6,"bold":true}],[" ((cur-word (current-word )))                                                         ",{}]],"19":[["    (find-tag   cur-word next-p nil)                                                        ",{}]],"20":[["    )                                                                                       ",{}]],"21":[["  )                                                                                         ",{}]],"22":[["                                                                                            ",{}]],"23":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["find-tag-next-ex",{"fg":4,"bold":true}],[" (  )                                                                ",{}]],"24":[["  ",{}],["\"\"",{"fg":2}],["                                                                                        ",{}]],"25":[["  (interactive ",{}],["\"\"",{"fg":2}],[")                                                                          ",{}]],"26":[["  (find-tag-ex  t)                                                                          ",{}]],"27":[["  )                                                                                         ",{}]]},"cursor":{"x":0}}],[0.000735,{"lines":{"1":[["\"",{"fg":2}],["                                                                                           ",{}]],"2":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   64% L296  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]}}],[0.029621,{"lines":{"1":[["                                                                                            ",{}]],"2":[["\"",{"fg":2}],["                                                                                           ",{}]],"3":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"4":[["  (opt-region-or-whole-line ",{}],["\"kill\"",{"fg":2}],[" arg))                                                    ",{}]],"6":[["                                                                                            ",{}]],"7":[[";;;;--- C-y                                                                                 ",{"fg":1}]],"8":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["begin-line-and-yank",{"fg":4,"bold":true}],[" ( arg)                                                           ",{}]],"9":[["  ",{}],["\"如果复制的是跨行的数据由跳到行首，再yank\"",{"fg":2}],["                                                ",{}]],"10":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"11":[["  (",{}],["if",{"fg":6,"bold":true}],[" (string-match ",{}],["\"\\n\"",{"fg":2}],[" (current-kill 0 ))                                                 ",{}]],"12":[["      (",{}],["progn",{"fg":6,"bold":true}],[" (move-beginning-of-line 1) (",{}],["save-excursion",{"fg":6,"bold":true}],[" (yank )))                           ",{}]],"13":[["    (",{}],["progn",{"fg":6,"bold":true}],[" (yank)))                                                                         ",{}]],"14":[["  )                                                                                         ",{}]],"15":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["find-tag-ex",{"fg":4,"bold":true}],[" (  ",{}],["&optional",{"fg":2}],[" next-p)                                                     ",{}]],"16":[["  ",{}],["\"\"",{"fg":2}],["                                                                                        ",{}]],"17":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"18":[["  ",{}],[";; (find-tag  (current-word) next-p t)                                                    ",{"fg":1}]],"19":[["  (",{}],["let",{"fg":6,"bold":true}],[" ((cur-word (current-word )))                                                         ",{}]],"20":[["    (find-tag   cur-word next-p nil)                                                        ",{}]],"21":[["    )                                                                                       ",{}]],"22":[["  )                                                                                         ",{}]],"23":[["                                                                                            ",{}]],"24":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["find-tag-next-ex",{"fg":4,"bold":true}],[" (  )                                                                ",{}]],"25":[["  ",{}],["\"\"",{"fg":2}],["                                                                                        ",{}]],"26":[["  (interactive ",{}],["\"\"",{"fg":2}],[")                                                                          ",{}]],"27":[["  (find-tag-ex  t)                                                                          ",{}]]}}],[5.5e-05,{"lines":{"1":[["        2:支持剪切多行.  如 剪切3行是  M-3 C-k                                              ",{"fg":2}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   64% L295  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":32}}],[0.031147,{"lines":{"1":[["        1:剪切所在的行                                                                      ",{"fg":2}]],"2":[["        2:支持剪切多行.  如 剪切3行是  M-3 C-k                                              ",{"fg":2}]],"3":[["\"",{"fg":2}],["                                                                                           ",{}]],"4":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"5":[["  (opt-region-or-whole-line ",{}],["\"kill\"",{"fg":2}],[" arg))                                                    ",{}]],"7":[["                                                                                            ",{}]],"8":[[";;;;--- C-y                                                                                 ",{"fg":1}]],"9":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["begin-line-and-yank",{"fg":4,"bold":true}],[" ( arg)                                                           ",{}]],"10":[["  ",{}],["\"如果复制的是跨行的数据由跳到行首，再yank\"",{"fg":2}],["                                                ",{}]],"11":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"12":[["  (",{}],["if",{"fg":6,"bold":true}],[" (string-match ",{}],["\"\\n\"",{"fg":2}],[" (current-kill 0 ))                                                 ",{}]],"13":[["      (",{}],["progn",{"fg":6,"bold":true}],[" (move-beginning-of-line 1) (",{}],["save-excursion",{"fg":6,"bold":true}],[" (yank )))                           ",{}]],"14":[["    (",{}],["progn",{"fg":6,"bold":true}],[" (yank)))                                                                         ",{}]],"15":[["  )                                                                                         ",{}]],"16":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["find-tag-ex",{"fg":4,"bold":true}],[" (  ",{}],["&optional",{"fg":2}],[" next-p)                                                     ",{}]],"17":[["  ",{}],["\"\"",{"fg":2}],["                                                                                        ",{}]],"18":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"19":[["  ",{}],[";; (find-tag  (current-word) next-p t)                                                    ",{"fg":1}]],"20":[["  (",{}],["let",{"fg":6,"bold":true}],[" ((cur-word (current-word )))                                                         ",{}]],"21":[["    (find-tag   cur-word next-p nil)                                                        ",{}]],"22":[["    )                                                                                       ",{}]],"23":[["  )                                                                                         ",{}]],"24":[["                                                                                            ",{}]],"25":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["find-tag-next-ex",{"fg":4,"bold":true}],[" (  )                                                                ",{}]],"26":[["  ",{}],["\"\"",{"fg":2}],["                                                                                        ",{}]],"27":[["  (interactive ",{}],["\"\"",{"fg":2}],[")                                                                          ",{}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   64% L294  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":20}}],[0.029625,{"lines":{"1":[["                                                                                            ",{}]],"2":[["        1:剪切所在的行                                                                      ",{"fg":2}]],"3":[["        2:支持剪切多行.  如 剪切3行是  M-3 C-k                                              ",{"fg":2}]],"4":[["\"",{"fg":2}],["                                                                                           ",{}]],"5":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"6":[["  (opt-region-or-whole-line ",{}],["\"kill\"",{"fg":2}],[" arg))                                                    ",{}]],"8":[["                                                                                            ",{}]],"9":[[";;;;--- C-y                                                                                 ",{"fg":1}]],"10":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["begin-line-and-yank",{"fg":4,"bold":true}],[" ( arg)                                                           ",{}]],"11":[["  ",{}],["\"如果复制的是跨行的数据由跳到行首，再yank\"",{"fg":2}],["                                                ",{}]],"12":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"13":[["  (",{}],["if",{"fg":6,"bold":true}],[" (string-match ",{}],["\"\\n\"",{"fg":2}],[" (current-kill 0 ))                                                 ",{}]],"14":[["      (",{}],["progn",{"fg":6,"bold":true}],[" (move-beginning-of-line 1) (",{}],["save-excursion",{"fg":6,"bold":true}],[" (yank )))                           ",{}]],"15":[["    (",{}],["progn",{"fg":6,"bold":true}],[" (yank)))                                                                         ",{}]],"16":[["  )                                                                                         ",{}]],"17":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["find-tag-ex",{"fg":4,"bold":true}],[" (  ",{}],["&optional",{"fg":2}],[" next-p)                                                     ",{}]],"18":[["  ",{}],["\"\"",{"fg":2}],["                                                                                        ",{}]],"19":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"20":[["  ",{}],[";; (find-tag  (current-word) next-p t)                                                    ",{"fg":1}]],"21":[["  (",{}],["let",{"fg":6,"bold":true}],[" ((cur-word (current-word )))                                                         ",{}]],"22":[["    (find-tag   cur-word next-p nil)                                                        ",{}]],"23":[["    )                                                                                       ",{}]],"24":[["  )                                                                                         ",{}]],"25":[["                                                                                            ",{}]],"26":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["find-tag-next-ex",{"fg":4,"bold":true}],[" (  )                                                                ",{}]],"27":[["  ",{}],["\"\"",{"fg":2}],["                                                                                        ",{}]]},"cursor":{"x":0}}],[0.000106,{"lines":{"1":[["没有选择区域时:                                                                             ",{"fg":2}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   64% L293  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":15}}],[0.032282,{"lines":{"1":[["                                                                                            ",{}]],"2":[["没有选择区域时:                                                                             ",{"fg":2}]],"3":[["        1:剪切所在的行                                                                      ",{"fg":2}]],"4":[["        2:支持剪切多行.  如 剪切3行是  M-3 C-k                                              ",{"fg":2}]],"5":[["\"",{"fg":2}],["                                                                                           ",{}]],"6":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"7":[["  (opt-region-or-whole-line ",{}],["\"kill\"",{"fg":2}],[" arg))                                                    ",{}]],"9":[["                                                                                            ",{}]],"10":[[";;;;--- C-y                                                                                 ",{"fg":1}]],"11":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["begin-line-and-yank",{"fg":4,"bold":true}],[" ( arg)                                                           ",{}]],"12":[["  ",{}],["\"如果复制的是跨行的数据由跳到行首，再yank\"",{"fg":2}],["                                                ",{}]],"13":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"14":[["  (",{}],["if",{"fg":6,"bold":true}],[" (string-match ",{}],["\"\\n\"",{"fg":2}],[" (current-kill 0 ))                                                 ",{}]],"15":[["      (",{}],["progn",{"fg":6,"bold":true}],[" (move-beginning-of-line 1) (",{}],["save-excursion",{"fg":6,"bold":true}],[" (yank )))                           ",{}]],"16":[["    (",{}],["progn",{"fg":6,"bold":true}],[" (yank)))                                                                         ",{}]],"17":[["  )                                                                                         ",{}]],"18":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["find-tag-ex",{"fg":4,"bold":true}],[" (  ",{}],["&optional",{"fg":2}],[" next-p)                                                     ",{}]],"19":[["  ",{}],["\"\"",{"fg":2}],["                                                                                        ",{}]],"20":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"21":[["  ",{}],[";; (find-tag  (current-word) next-p t)                                                    ",{"fg":1}]],"22":[["  (",{}],["let",{"fg":6,"bold":true}],[" ((cur-word (current-word )))                                                         ",{}]],"23":[["    (find-tag   cur-word next-p nil)                                                        ",{}]],"24":[["    )                                                                                       ",{}]],"25":[["  )                                                                                         ",{}]],"26":[["                                                                                            ",{}]],"27":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["find-tag-next-ex",{"fg":4,"bold":true}],[" (  )                                                                ",{}]]},"cursor":{"x":0}}],[9.500000000000001e-05,{"lines":{"1":[["        2:剪切的内容没有跨行：剪切区域中的内内容                                            ",{"fg":2}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   64% L292  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":32}}],[0.029958,{"lines":{"1":[["        1:剪切的内容是跨行的：剪切区域所在的所有行的内容。不仅仅是区域内的内容              ",{"fg":2}]],"2":[["        2:剪切的内容没有跨行：剪切区域中的内内容                                            ",{"fg":2}]],"3":[["没有选择区域时:                                                                             ",{"fg":2}]],"4":[["        1:剪切所在的行                                                                      ",{"fg":2}]],"5":[["        2:支持剪切多行.  如 剪切3行是  M-3 C-k                                              ",{"fg":2}]],"6":[["\"",{"fg":2}],["                                                                                           ",{}]],"7":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"8":[["  (opt-region-or-whole-line ",{}],["\"kill\"",{"fg":2}],[" arg))                                                    ",{}]],"10":[["                                                                                            ",{}]],"11":[[";;;;--- C-y                                                                                 ",{"fg":1}]],"12":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["begin-line-and-yank",{"fg":4,"bold":true}],[" ( arg)                                                           ",{}]],"13":[["  ",{}],["\"如果复制的是跨行的数据由跳到行首，再yank\"",{"fg":2}],["                                                ",{}]],"14":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"15":[["  (",{}],["if",{"fg":6,"bold":true}],[" (string-match ",{}],["\"\\n\"",{"fg":2}],[" (current-kill 0 ))                                                 ",{}]],"16":[["      (",{}],["progn",{"fg":6,"bold":true}],[" (move-beginning-of-line 1) (",{}],["save-excursion",{"fg":6,"bold":true}],[" (yank )))                           ",{}]],"17":[["    (",{}],["progn",{"fg":6,"bold":true}],[" (yank)))                                                                         ",{}]],"18":[["  )                                                                                         ",{}]],"19":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["find-tag-ex",{"fg":4,"bold":true}],[" (  ",{}],["&optional",{"fg":2}],[" next-p)                                                     ",{}]],"20":[["  ",{}],["\"\"",{"fg":2}],["                                                                                        ",{}]],"21":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"22":[["  ",{}],[";; (find-tag  (current-word) next-p t)                                                    ",{"fg":1}]],"23":[["  (",{}],["let",{"fg":6,"bold":true}],[" ((cur-word (current-word )))                                                         ",{}]],"24":[["    (find-tag   cur-word next-p nil)                                                        ",{}]],"25":[["    )                                                                                       ",{}]],"26":[["  )                                                                                         ",{}]]},"cursor":{"x":0,"visible":false}}],[8.7e-05,{"lines":{"27":[["                                                                                            ",{}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   64% L291  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":32,"visible":true}}],[0.029456,{"lines":{"1":[["  ",{}],["\"有选择区域时：                                                                           ",{"fg":2}]],"2":[["        1:剪切的内容是跨行的：剪切区域所在的所有行的内容。不仅仅是区域内的内容              ",{"fg":2}]],"3":[["        2:剪切的内容没有跨行：剪切区域中的内内容                                            ",{"fg":2}]],"4":[["没有选择区域时:                                                                             ",{"fg":2}]],"5":[["        1:剪切所在的行                                                                      ",{"fg":2}]],"6":[["        2:支持剪切多行.  如 剪切3行是  M-3 C-k                                              ",{"fg":2}]],"7":[["\"",{"fg":2}],["                                                                                           ",{}]],"8":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"9":[["  (opt-region-or-whole-line ",{}],["\"kill\"",{"fg":2}],[" arg))                                                    ",{}]],"11":[["                                                                                            ",{}]],"12":[[";;;;--- C-y                                                                                 ",{"fg":1}]],"13":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["begin-line-and-yank",{"fg":4,"bold":true}],[" ( arg)                                                           ",{}]],"14":[["  ",{}],["\"如果复制的是跨行的数据由跳到行首，再yank\"",{"fg":2}],["                                                ",{}]],"15":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"16":[["  (",{}],["if",{"fg":6,"bold":true}],[" (string-match ",{}],["\"\\n\"",{"fg":2}],[" (current-kill 0 ))                                                 ",{}]],"17":[["      (",{}],["progn",{"fg":6,"bold":true}],[" (move-beginning-of-line 1) (",{}],["save-excursion",{"fg":6,"bold":true}],[" (yank )))                           ",{}]],"18":[["    (",{}],["progn",{"fg":6,"bold":true}],[" (yank)))                                                                         ",{}]],"19":[["  )                                                                                         ",{}]],"20":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["find-tag-ex",{"fg":4,"bold":true}],[" (  ",{}],["&optional",{"fg":2}],[" next-p)                                                     ",{}]],"21":[["  ",{}],["\"\"",{"fg":2}],["                                                                                        ",{}]],"22":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"23":[["  ",{}],[";; (find-tag  (current-word) next-p t)                                                    ",{"fg":1}]],"24":[["  (",{}],["let",{"fg":6,"bold":true}],[" ((cur-word (current-word )))                                                         ",{}]],"25":[["    (find-tag   cur-word next-p nil)                                                        ",{}]],"26":[["    )                                                                                       ",{}]],"27":[["  )                                                                                         ",{}]]},"cursor":{"x":0,"visible":false}}],[8.6e-05,{"lines":{"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   64% L290  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":15,"visible":true}}],[0.030036,{"lines":{"1":[["                                                                                            ",{}]],"2":[["  ",{}],["\"有选择区域时：                                                                           ",{"fg":2}]],"3":[["        1:剪切的内容是跨行的：剪切区域所在的所有行的内容。不仅仅是区域内的内容              ",{"fg":2}]],"4":[["        2:剪切的内容没有跨行：剪切区域中的内内容                                            ",{"fg":2}]],"5":[["没有选择区域时:                                                                             ",{"fg":2}]],"6":[["        1:剪切所在的行                                                                      ",{"fg":2}]],"7":[["        2:支持剪切多行.  如 剪切3行是  M-3 C-k                                              ",{"fg":2}]],"8":[["\"",{"fg":2}],["                                                                                           ",{}]],"9":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"10":[["  (opt-region-or-whole-line ",{}],["\"kill\"",{"fg":2}],[" arg))                                                    ",{}]],"12":[["                                                                                            ",{}]],"13":[[";;;;--- C-y                                                                                 ",{"fg":1}]],"14":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["begin-line-and-yank",{"fg":4,"bold":true}],[" ( arg)                                                           ",{}]],"15":[["  ",{}],["\"如果复制的是跨行的数据由跳到行首，再yank\"",{"fg":2}],["                                                ",{}]],"16":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"17":[["  (",{}],["if",{"fg":6,"bold":true}],[" (string-match ",{}],["\"\\n\"",{"fg":2}],[" (current-kill 0 ))                                                 ",{}]],"18":[["      (",{}],["progn",{"fg":6,"bold":true}],[" (move-beginning-of-line 1) (",{}],["save-excursion",{"fg":6,"bold":true}],[" (yank )))                           ",{}]],"19":[["    (",{}],["progn",{"fg":6,"bold":true}],[" (yank)))                                                                         ",{}]],"20":[["  )                                                                                         ",{}]],"21":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["find-tag-ex",{"fg":4,"bold":true}],[" (  ",{}],["&optional",{"fg":2}],[" next-p)                                                     ",{}]],"22":[["  ",{}],["\"\"",{"fg":2}],["                                                                                        ",{}]],"23":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"24":[["  ",{}],[";; (find-tag  (current-word) next-p t)                                                    ",{"fg":1}]],"25":[["  (",{}],["let",{"fg":6,"bold":true}],[" ((cur-word (current-word )))                                                         ",{}]],"26":[["    (find-tag   cur-word next-p nil)                                                        ",{}]],"27":[["    )                                                                                       ",{}]]},"cursor":{"x":0}}],[0.0009810000000000001,{"lines":{"1":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["kill-region-or-whole-line",{"fg":4,"bold":true}],["(",{"bg":6}],["&optional",{"fg":2}],[" arg",{}],[")",{"bg":6}],["                                             ",{}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   63% L289  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":32}}],[0.0317,{"lines":{"1":[["                                                                                            ",{}]],"2":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["kill-region-or-whole-line",{"fg":4,"bold":true}],["(",{"bg":6}],["&optional",{"fg":2}],[" arg",{}],[")",{"bg":6}],["                                             ",{}]],"3":[["  ",{}],["\"有选择区域时：                                                                           ",{"fg":2}]],"4":[["        1:剪切的内容是跨行的：剪切区域所在的所有行的内容。不仅仅是区域内的内容              ",{"fg":2}]],"5":[["        2:剪切的内容没有跨行：剪切区域中的内内容                                            ",{"fg":2}]],"6":[["没有选择区域时:                                                                             ",{"fg":2}]],"7":[["        1:剪切所在的行                                                                      ",{"fg":2}]],"8":[["        2:支持剪切多行.  如 剪切3行是  M-3 C-k                                              ",{"fg":2}]],"9":[["\"",{"fg":2}],["                                                                                           ",{}]],"10":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"11":[["  (opt-region-or-whole-line ",{}],["\"kill\"",{"fg":2}],[" arg))                                                    ",{}]],"13":[["                                                                                            ",{}]],"14":[[";;;;--- C-y                                                                                 ",{"fg":1}]],"15":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["begin-line-and-yank",{"fg":4,"bold":true}],[" ( arg)                                                           ",{}]],"16":[["  ",{}],["\"如果复制的是跨行的数据由跳到行首，再yank\"",{"fg":2}],["                                                ",{}]],"17":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"18":[["  (",{}],["if",{"fg":6,"bold":true}],[" (string-match ",{}],["\"\\n\"",{"fg":2}],[" (current-kill 0 ))                                                 ",{}]],"19":[["      (",{}],["progn",{"fg":6,"bold":true}],[" (move-beginning-of-line 1) (",{}],["save-excursion",{"fg":6,"bold":true}],[" (yank )))                           ",{}]],"20":[["    (",{}],["progn",{"fg":6,"bold":true}],[" (yank)))                                                                         ",{}]],"21":[["  )                                                                                         ",{}]],"22":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["find-tag-ex",{"fg":4,"bold":true}],[" (  ",{}],["&optional",{"fg":2}],[" next-p)                                                     ",{}]],"23":[["  ",{}],["\"\"",{"fg":2}],["                                                                                        ",{}]],"24":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"25":[["  ",{}],[";; (find-tag  (current-word) next-p t)                                                    ",{"fg":1}]],"26":[["  (",{}],["let",{"fg":6,"bold":true}],[" ((cur-word (current-word )))                                                         ",{}]],"27":[["    (find-tag   cur-word next-p nil)                                                        ",{}]]},"cursor":{"x":0}}],[0.000775,{"lines":{"1":[[";;;###autoload                                                                              ",{"fg":1}]],"2":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["kill-region-or-whole-line",{"fg":4,"bold":true}],["(",{}],["&optional",{"fg":2}],[" arg)                                             ",{}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   63% L288  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":13}}],[0.028448,{"lines":{"1":[["                                                                                            ",{}]],"2":[[";;;###autoload                                                                              ",{"fg":1}]],"3":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["kill-region-or-whole-line",{"fg":4,"bold":true}],["(",{}],["&optional",{"fg":2}],[" arg)                                             ",{}]],"4":[["  ",{}],["\"有选择区域时：                                                                           ",{"fg":2}]],"5":[["        1:剪切的内容是跨行的：剪切区域所在的所有行的内容。不仅仅是区域内的内容              ",{"fg":2}]],"6":[["        2:剪切的内容没有跨行：剪切区域中的内内容                                            ",{"fg":2}]],"7":[["没有选择区域时:                                                                             ",{"fg":2}]],"8":[["        1:剪切所在的行                                                                      ",{"fg":2}]],"9":[["        2:支持剪切多行.  如 剪切3行是  M-3 C-k                                              ",{"fg":2}]],"10":[["\"",{"fg":2}],["                                                                                           ",{}]],"11":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"12":[["  (opt-region-or-whole-line ",{}],["\"kill\"",{"fg":2}],[" arg))                                                    ",{}]],"14":[["                                                                                            ",{}]],"15":[[";;;;--- C-y                                                                                 ",{"fg":1}]],"16":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["begin-line-and-yank",{"fg":4,"bold":true}],[" ( arg)                                                           ",{}]],"17":[["  ",{}],["\"如果复制的是跨行的数据由跳到行首，再yank\"",{"fg":2}],["                                                ",{}]],"18":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"19":[["  (",{}],["if",{"fg":6,"bold":true}],[" (string-match ",{}],["\"\\n\"",{"fg":2}],[" (current-kill 0 ))                                                 ",{}]],"20":[["      (",{}],["progn",{"fg":6,"bold":true}],[" (move-beginning-of-line 1) (",{}],["save-excursion",{"fg":6,"bold":true}],[" (yank )))                           ",{}]],"21":[["    (",{}],["progn",{"fg":6,"bold":true}],[" (yank)))                                                                         ",{}]],"22":[["  )                                                                                         ",{}]],"23":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["find-tag-ex",{"fg":4,"bold":true}],[" (  ",{}],["&optional",{"fg":2}],[" next-p)                                                     ",{}]],"24":[["  ",{}],["\"\"",{"fg":2}],["                                                                                        ",{}]],"25":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"26":[["  ",{}],[";; (find-tag  (current-word) next-p t)                                                    ",{"fg":1}]],"27":[["  (",{}],["let",{"fg":6,"bold":true}],[" ((cur-word (current-word )))                                                         ",{}]]},"cursor":{"x":0}}],[8.6e-05,{"lines":{"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   63% L287  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]}}],[0.032176,{"lines":{"2":[["                                                                                            ",{}]],"3":[[";;;###autoload                                                                              ",{"fg":1}]],"4":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["kill-region-or-whole-line",{"fg":4,"bold":true}],["(",{}],["&optional",{"fg":2}],[" arg)                                             ",{}]],"5":[["  ",{}],["\"有选择区域时：                                                                           ",{"fg":2}]],"6":[["        1:剪切的内容是跨行的：剪切区域所在的所有行的内容。不仅仅是区域内的内容              ",{"fg":2}]],"7":[["        2:剪切的内容没有跨行：剪切区域中的内内容                                            ",{"fg":2}]],"8":[["没有选择区域时:                                                                             ",{"fg":2}]],"9":[["        1:剪切所在的行                                                                      ",{"fg":2}]],"10":[["        2:支持剪切多行.  如 剪切3行是  M-3 C-k                                              ",{"fg":2}]],"11":[["\"",{"fg":2}],["                                                                                           ",{}]],"12":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"13":[["  (opt-region-or-whole-line ",{}],["\"kill\"",{"fg":2}],[" arg))                                                    ",{}]],"15":[["                                                                                            ",{}]],"16":[[";;;;--- C-y                                                                                 ",{"fg":1}]],"17":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["begin-line-and-yank",{"fg":4,"bold":true}],[" ( arg)                                                           ",{}]],"18":[["  ",{}],["\"如果复制的是跨行的数据由跳到行首，再yank\"",{"fg":2}],["                                                ",{}]],"19":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"20":[["  (",{}],["if",{"fg":6,"bold":true}],[" (string-match ",{}],["\"\\n\"",{"fg":2}],[" (current-kill 0 ))                                                 ",{}]],"21":[["      (",{}],["progn",{"fg":6,"bold":true}],[" (move-beginning-of-line 1) (",{}],["save-excursion",{"fg":6,"bold":true}],[" (yank )))                           ",{}]],"22":[["    (",{}],["progn",{"fg":6,"bold":true}],[" (yank)))                                                                         ",{}]],"23":[["  )                                                                                         ",{}]],"24":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["find-tag-ex",{"fg":4,"bold":true}],[" (  ",{}],["&optional",{"fg":2}],[" next-p)                                                     ",{}]],"25":[["  ",{}],["\"\"",{"fg":2}],["                                                                                        ",{}]],"26":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"27":[["  ",{}],[";; (find-tag  (current-word) next-p t)                                                    ",{"fg":1}]]},"cursor":{"y":2}}],[0.001681,{"lines":{"1":[["  ",{}],[")",{"bg":6}],["                                                                                         ",{}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   63% L286  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":2,"y":1}}],[0.028463,{"lines":{"1":[["                                                                                            ",{}]],"2":[["  ",{}],[")",{"bg":6}],["                                                                                         ",{}]],"3":[["                                                                                            ",{}]],"4":[[";;;###autoload                                                                              ",{"fg":1}]],"5":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["kill-region-or-whole-line",{"fg":4,"bold":true}],["(",{}],["&optional",{"fg":2}],[" arg)                                             ",{}]],"6":[["  ",{}],["\"有选择区域时：                                                                           ",{"fg":2}]],"7":[["        1:剪切的内容是跨行的：剪切区域所在的所有行的内容。不仅仅是区域内的内容              ",{"fg":2}]],"8":[["        2:剪切的内容没有跨行：剪切区域中的内内容                                            ",{"fg":2}]],"9":[["没有选择区域时:                                                                             ",{"fg":2}]],"10":[["        1:剪切所在的行                                                                      ",{"fg":2}]],"11":[["        2:支持剪切多行.  如 剪切3行是  M-3 C-k                                              ",{"fg":2}]],"12":[["\"",{"fg":2}],["                                                                                           ",{}]],"13":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"14":[["  (opt-region-or-whole-line ",{}],["\"kill\"",{"fg":2}],[" arg))                                                    ",{}]],"16":[["                                                                                            ",{}]],"17":[[";;;;--- C-y                                                                                 ",{"fg":1}]],"18":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["begin-line-and-yank",{"fg":4,"bold":true}],[" ( arg)                                                           ",{}]],"19":[["  ",{}],["\"如果复制的是跨行的数据由跳到行首，再yank\"",{"fg":2}],["                                                ",{}]],"20":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"21":[["  (",{}],["if",{"fg":6,"bold":true}],[" (string-match ",{}],["\"\\n\"",{"fg":2}],[" (current-kill 0 ))                                                 ",{}]],"22":[["      (",{}],["progn",{"fg":6,"bold":true}],[" (move-beginning-of-line 1) (",{}],["save-excursion",{"fg":6,"bold":true}],[" (yank )))                           ",{}]],"23":[["    (",{}],["progn",{"fg":6,"bold":true}],[" (yank)))                                                                         ",{}]],"24":[["  )                                                                                         ",{}]],"25":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["find-tag-ex",{"fg":4,"bold":true}],[" (  ",{}],["&optional",{"fg":2}],[" next-p)                                                     ",{}]],"26":[["  ",{}],["\"\"",{"fg":2}],["                                                                                        ",{}]],"27":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]]},"cursor":{"x":0}}],[0.001389,{"lines":{"1":[["  (opt-region-or-whole-line ",{}],["\"copy\"",{"fg":2}],[" arg)                                                     ",{}]],"2":[["  )                                                                                         ",{}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   63% L285  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":32}}],[0.134127,{"lines":{"1":[["                                                                                            ",{}]],"2":[["  (opt-region-or-whole-line ",{}],["\"copy\"",{"fg":2}],[" arg)                                                     ",{}]],"3":[["  )                                                                                         ",{}]],"4":[["                                                                                            ",{}]],"5":[[";;;###autoload                                                                              ",{"fg":1}]],"6":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["kill-region-or-whole-line",{"fg":4,"bold":true}],["(",{}],["&optional",{"fg":2}],[" arg)                                             ",{}]],"7":[["  ",{}],["\"有选择区域时：                                                                           ",{"fg":2}]],"8":[["        1:剪切的内容是跨行的：剪切区域所在的所有行的内容。不仅仅是区域内的内容              ",{"fg":2}]],"9":[["        2:剪切的内容没有跨行：剪切区域中的内内容                                            ",{"fg":2}]],"10":[["没有选择区域时:                                                                             ",{"fg":2}]],"11":[["        1:剪切所在的行                                                                      ",{"fg":2}]],"12":[["        2:支持剪切多行.  如 剪切3行是  M-3 C-k                                              ",{"fg":2}]],"13":[["\"",{"fg":2}],["                                                                                           ",{}]],"14":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"15":[["  (opt-region-or-whole-line ",{}],["\"kill\"",{"fg":2}],[" arg))                                                    ",{}]],"17":[["                                                                                            ",{}]],"18":[[";;;;--- C-y                                                                                 ",{"fg":1}]],"19":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["begin-line-and-yank",{"fg":4,"bold":true}],[" ( arg)                                                           ",{}]],"20":[["  ",{}],["\"如果复制的是跨行的数据由跳到行首，再yank\"",{"fg":2}],["                                                ",{}]],"21":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"22":[["  (",{}],["if",{"fg":6,"bold":true}],[" (string-match ",{}],["\"\\n\"",{"fg":2}],[" (current-kill 0 ))                                                 ",{}]],"23":[["      (",{}],["progn",{"fg":6,"bold":true}],[" (move-beginning-of-line 1) (",{}],["save-excursion",{"fg":6,"bold":true}],[" (yank )))                           ",{}]],"24":[["    (",{}],["progn",{"fg":6,"bold":true}],[" (yank)))                                                                         ",{}]],"25":[["  )                                                                                         ",{}]],"26":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["find-tag-ex",{"fg":4,"bold":true}],[" (  ",{}],["&optional",{"fg":2}],[" next-p)                                                     ",{}]],"27":[["  ",{}],["\"\"",{"fg":2}],["                                                                                        ",{}]]},"cursor":{"x":0}}],[0.000608,{"lines":{"1":[["  ",{}],["(",{"bg":6}],["interactive ",{}],["\"P\"",{"fg":2}],[")",{"bg":6}],["                                                                         ",{}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   63% L284  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":18}}],[0.49911,{"lines":{"1":[["\"",{"fg":2}],["                                                                                           ",{}]],"2":[["  ",{}],["(",{"bg":6}],["interactive ",{}],["\"P\"",{"fg":2}],[")",{"bg":6}],["                                                                         ",{}]],"3":[["  (opt-region-or-whole-line ",{}],["\"copy\"",{"fg":2}],[" arg)                                                     ",{}]],"4":[["  )                                                                                         ",{}]],"5":[["                                                                                            ",{}]],"6":[[";;;###autoload                                                                              ",{"fg":1}]],"7":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["kill-region-or-whole-line",{"fg":4,"bold":true}],["(",{}],["&optional",{"fg":2}],[" arg)                                             ",{}]],"8":[["  ",{}],["\"有选择区域时：                                                                           ",{"fg":2}]],"9":[["        1:剪切的内容是跨行的：剪切区域所在的所有行的内容。不仅仅是区域内的内容              ",{"fg":2}]],"10":[["        2:剪切的内容没有跨行：剪切区域中的内内容                                            ",{"fg":2}]],"11":[["没有选择区域时:                                                                             ",{"fg":2}]],"12":[["        1:剪切所在的行                                                                      ",{"fg":2}]],"13":[["        2:支持剪切多行.  如 剪切3行是  M-3 C-k                                              ",{"fg":2}]],"14":[["\"",{"fg":2}],["                                                                                           ",{}]],"15":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"16":[["  (opt-region-or-whole-line ",{}],["\"kill\"",{"fg":2}],[" arg))                                                    ",{}]],"18":[["                                                                                            ",{}]],"19":[[";;;;--- C-y                                                                                 ",{"fg":1}]],"20":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["begin-line-and-yank",{"fg":4,"bold":true}],[" ( arg)                                                           ",{}]],"21":[["  ",{}],["\"如果复制的是跨行的数据由跳到行首，再yank\"",{"fg":2}],["                                                ",{}]],"22":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"23":[["  (",{}],["if",{"fg":6,"bold":true}],[" (string-match ",{}],["\"\\n\"",{"fg":2}],[" (current-kill 0 ))                                                 ",{}]],"24":[["      (",{}],["progn",{"fg":6,"bold":true}],[" (move-beginning-of-line 1) (",{}],["save-excursion",{"fg":6,"bold":true}],[" (yank )))                           ",{}]],"25":[["    (",{}],["progn",{"fg":6,"bold":true}],[" (yank)))                                                                         ",{}]],"26":[["  )                                                                                         ",{}]],"27":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["find-tag-ex",{"fg":4,"bold":true}],[" (  ",{}],["&optional",{"fg":2}],[" next-p)                                                     ",{}]]},"cursor":{"x":1,"visible":false}}],[0.0005579999999999999,{"lines":{"2":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   63% L283  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":0,"visible":true}}],[0.031806,{"lines":{"1":[["                                                                                            ",{}]],"2":[["\"",{"fg":2}],["                                                                                           ",{}]],"3":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"4":[["  (opt-region-or-whole-line ",{}],["\"copy\"",{"fg":2}],[" arg)                                                     ",{}]],"5":[["  )                                                                                         ",{}]],"6":[["                                                                                            ",{}]],"7":[[";;;###autoload                                                                              ",{"fg":1}]],"8":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["kill-region-or-whole-line",{"fg":4,"bold":true}],["(",{}],["&optional",{"fg":2}],[" arg)                                             ",{}]],"9":[["  ",{}],["\"有选择区域时：                                                                           ",{"fg":2}]],"10":[["        1:剪切的内容是跨行的：剪切区域所在的所有行的内容。不仅仅是区域内的内容              ",{"fg":2}]],"11":[["        2:剪切的内容没有跨行：剪切区域中的内内容                                            ",{"fg":2}]],"12":[["没有选择区域时:                                                                             ",{"fg":2}]],"13":[["        1:剪切所在的行                                                                      ",{"fg":2}]],"14":[["        2:支持剪切多行.  如 剪切3行是  M-3 C-k                                              ",{"fg":2}]],"15":[["\"",{"fg":2}],["                                                                                           ",{}]],"16":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"17":[["  (opt-region-or-whole-line ",{}],["\"kill\"",{"fg":2}],[" arg))                                                    ",{}]],"19":[["                                                                                            ",{}]],"20":[[";;;;--- C-y                                                                                 ",{"fg":1}]],"21":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["begin-line-and-yank",{"fg":4,"bold":true}],[" ( arg)                                                           ",{}]],"22":[["  ",{}],["\"如果复制的是跨行的数据由跳到行首，再yank\"",{"fg":2}],["                                                ",{}]],"23":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"24":[["  (",{}],["if",{"fg":6,"bold":true}],[" (string-match ",{}],["\"\\n\"",{"fg":2}],[" (current-kill 0 ))                                                 ",{}]],"25":[["      (",{}],["progn",{"fg":6,"bold":true}],[" (move-beginning-of-line 1) (",{}],["save-excursion",{"fg":6,"bold":true}],[" (yank )))                           ",{}]],"26":[["    (",{}],["progn",{"fg":6,"bold":true}],[" (yank)))                                                                         ",{}]],"27":[["  )                                                                                         ",{}]]}}],[0.000227,{"lines":{"1":[["        2:支持复制多行.  如 复制3行是  M-3 C-w                                              ",{"fg":2}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   63% L282  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":32}}],[0.029189,{"lines":{"1":[["                                                                                            ",{}]],"2":[["        2:支持复制多行.  如 复制3行是  M-3 C-w                                              ",{"fg":2}]],"3":[["\"",{"fg":2}],["                                                                                           ",{}]],"4":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"5":[["  (opt-region-or-whole-line ",{}],["\"copy\"",{"fg":2}],[" arg)                                                     ",{}]],"6":[["  )                                                                                         ",{}]],"7":[["                                                                                            ",{}]],"8":[[";;;###autoload                                                                              ",{"fg":1}]],"9":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["kill-region-or-whole-line",{"fg":4,"bold":true}],["(",{}],["&optional",{"fg":2}],[" arg)                                             ",{}]],"10":[["  ",{}],["\"有选择区域时：                                                                           ",{"fg":2}]],"11":[["        1:剪切的内容是跨行的：剪切区域所在的所有行的内容。不仅仅是区域内的内容              ",{"fg":2}]],"12":[["        2:剪切的内容没有跨行：剪切区域中的内内容                                            ",{"fg":2}]],"13":[["没有选择区域时:                                                                             ",{"fg":2}]],"14":[["        1:剪切所在的行                                                                      ",{"fg":2}]],"15":[["        2:支持剪切多行.  如 剪切3行是  M-3 C-k                                              ",{"fg":2}]],"16":[["\"",{"fg":2}],["                                                                                           ",{}]],"17":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"18":[["  (opt-region-or-whole-line ",{}],["\"kill\"",{"fg":2}],[" arg))                                                    ",{}]],"20":[["                                                                                            ",{}]],"21":[[";;;;--- C-y                                                                                 ",{"fg":1}]],"22":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["begin-line-and-yank",{"fg":4,"bold":true}],[" ( arg)                                                           ",{}]],"23":[["  ",{}],["\"如果复制的是跨行的数据由跳到行首，再yank\"",{"fg":2}],["                                                ",{}]],"24":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"25":[["  (",{}],["if",{"fg":6,"bold":true}],[" (string-match ",{}],["\"\\n\"",{"fg":2}],[" (current-kill 0 ))                                                 ",{}]],"26":[["      (",{}],["progn",{"fg":6,"bold":true}],[" (move-beginning-of-line 1) (",{}],["save-excursion",{"fg":6,"bold":true}],[" (yank )))                           ",{}]],"27":[["    (",{}],["progn",{"fg":6,"bold":true}],[" (yank)))                                                                         ",{}]]},"cursor":{"x":0}}],[5.7e-05,{"lines":{"1":[["        1:复制所在的行                                                                      ",{"fg":2}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   62% L281  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":20}}],[0.030675,{"lines":{"1":[["                                                                                            ",{}]],"2":[["        1:复制所在的行                                                                      ",{"fg":2}]],"3":[["        2:支持复制多行.  如 复制3行是  M-3 C-w                                              ",{"fg":2}]],"4":[["\"",{"fg":2}],["                                                                                           ",{}]],"5":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"6":[["  (opt-region-or-whole-line ",{}],["\"copy\"",{"fg":2}],[" arg)                                                     ",{}]],"7":[["  )                                                                                         ",{}]],"8":[["                                                                                            ",{}]],"9":[[";;;###autoload                                                                              ",{"fg":1}]],"10":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["kill-region-or-whole-line",{"fg":4,"bold":true}],["(",{}],["&optional",{"fg":2}],[" arg)                                             ",{}]],"11":[["  ",{}],["\"有选择区域时：                                                                           ",{"fg":2}]],"12":[["        1:剪切的内容是跨行的：剪切区域所在的所有行的内容。不仅仅是区域内的内容              ",{"fg":2}]],"13":[["        2:剪切的内容没有跨行：剪切区域中的内内容                                            ",{"fg":2}]],"14":[["没有选择区域时:                                                                             ",{"fg":2}]],"15":[["        1:剪切所在的行                                                                      ",{"fg":2}]],"16":[["        2:支持剪切多行.  如 剪切3行是  M-3 C-k                                              ",{"fg":2}]],"17":[["\"",{"fg":2}],["                                                                                           ",{}]],"18":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"19":[["  (opt-region-or-whole-line ",{}],["\"kill\"",{"fg":2}],[" arg))                                                    ",{}]],"21":[["                                                                                            ",{}]],"22":[[";;;;--- C-y                                                                                 ",{"fg":1}]],"23":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["begin-line-and-yank",{"fg":4,"bold":true}],[" ( arg)                                                           ",{}]],"24":[["  ",{}],["\"如果复制的是跨行的数据由跳到行首，再yank\"",{"fg":2}],["                                                ",{}]],"25":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"26":[["  (",{}],["if",{"fg":6,"bold":true}],[" (string-match ",{}],["\"\\n\"",{"fg":2}],[" (current-kill 0 ))                                                 ",{}]],"27":[["      (",{}],["progn",{"fg":6,"bold":true}],[" (move-beginning-of-line 1) (",{}],["save-excursion",{"fg":6,"bold":true}],[" (yank )))                           ",{}]]},"cursor":{"x":0}}],[5.4e-05,{"lines":{"1":[["没有选择区域时:                                                                             ",{"fg":2}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   62% L280  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":15}}],[0.029964,{"lines":{"1":[["                                                                                            ",{}]],"2":[["没有选择区域时:                                                                             ",{"fg":2}]],"3":[["        1:复制所在的行                                                                      ",{"fg":2}]],"4":[["        2:支持复制多行.  如 复制3行是  M-3 C-w                                              ",{"fg":2}]],"5":[["\"",{"fg":2}],["                                                                                           ",{}]],"6":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"7":[["  (opt-region-or-whole-line ",{}],["\"copy\"",{"fg":2}],[" arg)                                                     ",{}]],"8":[["  )                                                                                         ",{}]],"9":[["                                                                                            ",{}]],"10":[[";;;###autoload                                                                              ",{"fg":1}]],"11":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["kill-region-or-whole-line",{"fg":4,"bold":true}],["(",{}],["&optional",{"fg":2}],[" arg)                                             ",{}]],"12":[["  ",{}],["\"有选择区域时：                                                                           ",{"fg":2}]],"13":[["        1:剪切的内容是跨行的：剪切区域所在的所有行的内容。不仅仅是区域内的内容              ",{"fg":2}]],"14":[["        2:剪切的内容没有跨行：剪切区域中的内内容                                            ",{"fg":2}]],"15":[["没有选择区域时:                                                                             ",{"fg":2}]],"16":[["        1:剪切所在的行                                                                      ",{"fg":2}]],"17":[["        2:支持剪切多行.  如 剪切3行是  M-3 C-k                                              ",{"fg":2}]],"18":[["\"",{"fg":2}],["                                                                                           ",{}]],"19":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"20":[["  (opt-region-or-whole-line ",{}],["\"kill\"",{"fg":2}],[" arg))                                                    ",{}]],"22":[["                                                                                            ",{}]],"23":[[";;;;--- C-y                                                                                 ",{"fg":1}]],"24":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["begin-line-and-yank",{"fg":4,"bold":true}],[" ( arg)                                                           ",{}]],"25":[["  ",{}],["\"如果复制的是跨行的数据由跳到行首，再yank\"",{"fg":2}],["                                                ",{}]],"26":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"27":[["  (",{}],["if",{"fg":6,"bold":true}],[" (string-match ",{}],["\"\\n\"",{"fg":2}],[" (current-kill 0 ))                                                 ",{}]]},"cursor":{"x":0}}],[5.7e-05,{"lines":{"1":[["        2:复制的内容没有跨行：复制区域中的内内容                                            ",{"fg":2}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   62% L279  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":32}}],[0.03106,{"lines":{"1":[["                                                                                            ",{}]],"2":[["        2:复制的内容没有跨行：复制区域中的内内容                                            ",{"fg":2}]],"3":[["没有选择区域时:                                                                             ",{"fg":2}]],"4":[["        1:复制所在的行                                                                      ",{"fg":2}]],"5":[["        2:支持复制多行.  如 复制3行是  M-3 C-w                                              ",{"fg":2}]],"6":[["\"",{"fg":2}],["                                                                                           ",{}]],"7":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"8":[["  (opt-region-or-whole-line ",{}],["\"copy\"",{"fg":2}],[" arg)                                                     ",{}]],"9":[["  )                                                                                         ",{}]],"10":[["                                                                                            ",{}]],"11":[[";;;###autoload                                                                              ",{"fg":1}]],"12":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["kill-region-or-whole-line",{"fg":4,"bold":true}],["(",{}],["&optional",{"fg":2}],[" arg)                                             ",{}]],"13":[["  ",{}],["\"有选择区域时：                                                                           ",{"fg":2}]],"14":[["        1:剪切的内容是跨行的：剪切区域所在的所有行的内容。不仅仅是区域内的内容              ",{"fg":2}]],"15":[["        2:剪切的内容没有跨行：剪切区域中的内内容                                            ",{"fg":2}]],"16":[["没有选择区域时:                                                                             ",{"fg":2}]],"17":[["        1:剪切所在的行                                                                      ",{"fg":2}]],"18":[["        2:支持剪切多行.  如 剪切3行是  M-3 C-k                                              ",{"fg":2}]],"19":[["\"",{"fg":2}],["                                                                                           ",{}]],"20":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"21":[["  (opt-region-or-whole-line ",{}],["\"kill\"",{"fg":2}],[" arg))                                                    ",{}]],"23":[["                                                                                            ",{}]],"24":[[";;;;--- C-y                                                                                 ",{"fg":1}]],"25":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["begin-line-and-yank",{"fg":4,"bold":true}],[" ( arg)                                                           ",{}]],"26":[["  ",{}],["\"如果复制的是跨行的数据由跳到行首，再yank\"",{"fg":2}],["                                                ",{}]],"27":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]]},"cursor":{"x":0}}],[5.8e-05,{"lines":{"1":[["        1:复制的内容是跨行的：复制区域所在的所有行的内容。不仅仅是区域内的内容              ",{"fg":2}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   62% L278  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":32}}],[0.031662,{"lines":{"1":[["                                                                                            ",{}]],"2":[["        1:复制的内容是跨行的：复制区域所在的所有行的内容。不仅仅是区域内的内容              ",{"fg":2}]],"3":[["        2:复制的内容没有跨行：复制区域中的内内容                                            ",{"fg":2}]],"4":[["没有选择区域时:                                                                             ",{"fg":2}]],"5":[["        1:复制所在的行                                                                      ",{"fg":2}]],"6":[["        2:支持复制多行.  如 复制3行是  M-3 C-w                                              ",{"fg":2}]],"7":[["\"",{"fg":2}],["                                                                                           ",{}]],"8":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"9":[["  (opt-region-or-whole-line ",{}],["\"copy\"",{"fg":2}],[" arg)                                                     ",{}]],"10":[["  )                                                                                         ",{}]],"11":[["                                                                                            ",{}]],"12":[[";;;###autoload                                                                              ",{"fg":1}]],"13":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["kill-region-or-whole-line",{"fg":4,"bold":true}],["(",{}],["&optional",{"fg":2}],[" arg)                                             ",{}]],"14":[["  ",{}],["\"有选择区域时：                                                                           ",{"fg":2}]],"15":[["        1:剪切的内容是跨行的：剪切区域所在的所有行的内容。不仅仅是区域内的内容              ",{"fg":2}]],"16":[["        2:剪切的内容没有跨行：剪切区域中的内内容                                            ",{"fg":2}]],"17":[["没有选择区域时:                                                                             ",{"fg":2}]],"18":[["        1:剪切所在的行                                                                      ",{"fg":2}]],"19":[["        2:支持剪切多行.  如 剪切3行是  M-3 C-k                                              ",{"fg":2}]],"20":[["\"",{"fg":2}],["                                                                                           ",{}]],"21":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"22":[["  (opt-region-or-whole-line ",{}],["\"kill\"",{"fg":2}],[" arg))                                                    ",{}]],"24":[["                                                                                            ",{}]],"25":[[";;;;--- C-y                                                                                 ",{"fg":1}]],"26":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["begin-line-and-yank",{"fg":4,"bold":true}],[" ( arg)                                                           ",{}]],"27":[["  ",{}],["\"如果复制的是跨行的数据由跳到行首，再yank\"",{"fg":2}],["                                                ",{}]]},"cursor":{"x":0}}],[5.7e-05,{"lines":{"1":[["  ",{}],["\"有选择区域时：                                                                           ",{"fg":2}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   62% L277  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":15}}],[0.028628,{"lines":{"1":[["                                                                                            ",{}]],"2":[["  ",{}],["\"有选择区域时：                                                                           ",{"fg":2}]],"3":[["        1:复制的内容是跨行的：复制区域所在的所有行的内容。不仅仅是区域内的内容              ",{"fg":2}]],"4":[["        2:复制的内容没有跨行：复制区域中的内内容                                            ",{"fg":2}]],"5":[["没有选择区域时:                                                                             ",{"fg":2}]],"6":[["        1:复制所在的行                                                                      ",{"fg":2}]],"7":[["        2:支持复制多行.  如 复制3行是  M-3 C-w                                              ",{"fg":2}]],"8":[["\"",{"fg":2}],["                                                                                           ",{}]],"9":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"10":[["  (opt-region-or-whole-line ",{}],["\"copy\"",{"fg":2}],[" arg)                                                     ",{}]],"11":[["  )                                                                                         ",{}]],"12":[["                                                                                            ",{}]],"13":[[";;;###autoload                                                                              ",{"fg":1}]],"14":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["kill-region-or-whole-line",{"fg":4,"bold":true}],["(",{}],["&optional",{"fg":2}],[" arg)                                             ",{}]],"15":[["  ",{}],["\"有选择区域时：                                                                           ",{"fg":2}]],"16":[["        1:剪切的内容是跨行的：剪切区域所在的所有行的内容。不仅仅是区域内的内容              ",{"fg":2}]],"17":[["        2:剪切的内容没有跨行：剪切区域中的内内容                                            ",{"fg":2}]],"18":[["没有选择区域时:                                                                             ",{"fg":2}]],"19":[["        1:剪切所在的行                                                                      ",{"fg":2}]],"20":[["        2:支持剪切多行.  如 剪切3行是  M-3 C-k                                              ",{"fg":2}]],"21":[["\"",{"fg":2}],["                                                                                           ",{}]],"22":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"23":[["  (opt-region-or-whole-line ",{}],["\"kill\"",{"fg":2}],[" arg))                                                    ",{}]],"25":[["                                                                                            ",{}]],"26":[[";;;;--- C-y                                                                                 ",{"fg":1}]],"27":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["begin-line-and-yank",{"fg":4,"bold":true}],[" ( arg)                                                           ",{}]]},"cursor":{"x":0}}],[0.000637,{"lines":{"1":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["copy-region-or-whole-line",{"fg":4,"bold":true}],["(",{"bg":6}],["&optional",{"fg":2}],[" arg",{}],[")",{"bg":6}],["                                             ",{}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   62% L276  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":32}}],[0.029682,{"lines":{"1":[["                                                                                            ",{}]],"2":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["copy-region-or-whole-line",{"fg":4,"bold":true}],["(",{"bg":6}],["&optional",{"fg":2}],[" arg",{}],[")",{"bg":6}],["                                             ",{}]],"3":[["  ",{}],["\"有选择区域时：                                                                           ",{"fg":2}]],"4":[["        1:复制的内容是跨行的：复制区域所在的所有行的内容。不仅仅是区域内的内容              ",{"fg":2}]],"5":[["        2:复制的内容没有跨行：复制区域中的内内容                                            ",{"fg":2}]],"6":[["没有选择区域时:                                                                             ",{"fg":2}]],"7":[["        1:复制所在的行                                                                      ",{"fg":2}]],"8":[["        2:支持复制多行.  如 复制3行是  M-3 C-w                                              ",{"fg":2}]],"9":[["\"",{"fg":2}],["                                                                                           ",{}]],"10":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"11":[["  (opt-region-or-whole-line ",{}],["\"copy\"",{"fg":2}],[" arg)                                                     ",{}]],"12":[["  )                                                                                         ",{}]],"13":[["                                                                                            ",{}]],"14":[[";;;###autoload                                                                              ",{"fg":1}]],"15":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["kill-region-or-whole-line",{"fg":4,"bold":true}],["(",{}],["&optional",{"fg":2}],[" arg)                                             ",{}]],"16":[["  ",{}],["\"有选择区域时：                                                                           ",{"fg":2}]],"17":[["        1:剪切的内容是跨行的：剪切区域所在的所有行的内容。不仅仅是区域内的内容              ",{"fg":2}]],"18":[["        2:剪切的内容没有跨行：剪切区域中的内内容                                            ",{"fg":2}]],"19":[["没有选择区域时:                                                                             ",{"fg":2}]],"20":[["        1:剪切所在的行                                                                      ",{"fg":2}]],"21":[["        2:支持剪切多行.  如 剪切3行是  M-3 C-k                                              ",{"fg":2}]],"22":[["\"",{"fg":2}],["                                                                                           ",{}]],"23":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"24":[["  (opt-region-or-whole-line ",{}],["\"kill\"",{"fg":2}],[" arg))                                                    ",{}]],"26":[["                                                                                            ",{}]],"27":[[";;;;--- C-y                                                                                 ",{"fg":1}]]},"cursor":{"x":0}}],[0.0006140000000000001,{"lines":{"1":[[";;;###autoload                                                                              ",{"fg":1}]],"2":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["copy-region-or-whole-line",{"fg":4,"bold":true}],["(",{}],["&optional",{"fg":2}],[" arg)                                             ",{}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   62% L275  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":13}}],[0.028865,{"lines":{"1":[["                                                                                            ",{}]],"2":[[";;;###autoload                                                                              ",{"fg":1}]],"3":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["copy-region-or-whole-line",{"fg":4,"bold":true}],["(",{}],["&optional",{"fg":2}],[" arg)                                             ",{}]],"4":[["  ",{}],["\"有选择区域时：                                                                           ",{"fg":2}]],"5":[["        1:复制的内容是跨行的：复制区域所在的所有行的内容。不仅仅是区域内的内容              ",{"fg":2}]],"6":[["        2:复制的内容没有跨行：复制区域中的内内容                                            ",{"fg":2}]],"7":[["没有选择区域时:                                                                             ",{"fg":2}]],"8":[["        1:复制所在的行                                                                      ",{"fg":2}]],"9":[["        2:支持复制多行.  如 复制3行是  M-3 C-w                                              ",{"fg":2}]],"10":[["\"",{"fg":2}],["                                                                                           ",{}]],"11":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"12":[["  (opt-region-or-whole-line ",{}],["\"copy\"",{"fg":2}],[" arg)                                                     ",{}]],"13":[["  )                                                                                         ",{}]],"14":[["                                                                                            ",{}]],"15":[[";;;###autoload                                                                              ",{"fg":1}]],"16":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["kill-region-or-whole-line",{"fg":4,"bold":true}],["(",{}],["&optional",{"fg":2}],[" arg)                                             ",{}]],"17":[["  ",{}],["\"有选择区域时：                                                                           ",{"fg":2}]],"18":[["        1:剪切的内容是跨行的：剪切区域所在的所有行的内容。不仅仅是区域内的内容              ",{"fg":2}]],"19":[["        2:剪切的内容没有跨行：剪切区域中的内内容                                            ",{"fg":2}]],"20":[["没有选择区域时:                                                                             ",{"fg":2}]],"21":[["        1:剪切所在的行                                                                      ",{"fg":2}]],"22":[["        2:支持剪切多行.  如 剪切3行是  M-3 C-k                                              ",{"fg":2}]],"23":[["\"",{"fg":2}],["                                                                                           ",{}]],"24":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"25":[["  (opt-region-or-whole-line ",{}],["\"kill\"",{"fg":2}],[" arg))                                                    ",{}]]},"cursor":{"x":0}}],[0.000153,{"lines":{"27":[["                                                                                            ",{}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   61% L274  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]}}],[0.030761,{"lines":{"2":[["                                                                                            ",{}]],"3":[[";;;###autoload                                                                              ",{"fg":1}]],"4":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["copy-region-or-whole-line",{"fg":4,"bold":true}],["(",{}],["&optional",{"fg":2}],[" arg)                                             ",{}]],"5":[["  ",{}],["\"有选择区域时：                                                                           ",{"fg":2}]],"6":[["        1:复制的内容是跨行的：复制区域所在的所有行的内容。不仅仅是区域内的内容              ",{"fg":2}]],"7":[["        2:复制的内容没有跨行：复制区域中的内内容                                            ",{"fg":2}]],"8":[["没有选择区域时:                                                                             ",{"fg":2}]],"9":[["        1:复制所在的行                                                                      ",{"fg":2}]],"10":[["        2:支持复制多行.  如 复制3行是  M-3 C-w                                              ",{"fg":2}]],"11":[["\"",{"fg":2}],["                                                                                           ",{}]],"12":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"13":[["  (opt-region-or-whole-line ",{}],["\"copy\"",{"fg":2}],[" arg)                                                     ",{}]],"14":[["  )                                                                                         ",{}]],"15":[["                                                                                            ",{}]],"16":[[";;;###autoload                                                                              ",{"fg":1}]],"17":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["kill-region-or-whole-line",{"fg":4,"bold":true}],["(",{}],["&optional",{"fg":2}],[" arg)                                             ",{}]],"18":[["  ",{}],["\"有选择区域时：                                                                           ",{"fg":2}]],"19":[["        1:剪切的内容是跨行的：剪切区域所在的所有行的内容。不仅仅是区域内的内容              ",{"fg":2}]],"20":[["        2:剪切的内容没有跨行：剪切区域中的内内容                                            ",{"fg":2}]],"21":[["没有选择区域时:                                                                             ",{"fg":2}]],"22":[["        1:剪切所在的行                                                                      ",{"fg":2}]],"23":[["        2:支持剪切多行.  如 剪切3行是  M-3 C-k                                              ",{"fg":2}]],"24":[["\"",{"fg":2}],["                                                                                           ",{}]],"25":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"26":[["  (opt-region-or-whole-line ",{}],["\"kill\"",{"fg":2}],[" arg))                                                    ",{}]]},"cursor":{"y":2}}],[0.001308,{"lines":{"1":[["      (funcall do-line-func arg)",{}],[")",{"bg":6}],["))                                                         ",{}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   61% L273  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":32,"y":1}}],[0.030612,{"lines":{"1":[["      (message ",{}],["\"%s line :%d\"",{"fg":2}],["  opt-type arg)                                                 ",{}]],"2":[["      (funcall do-line-func arg)",{}],[")",{"bg":6}],["))                                                         ",{}]],"3":[["                                                                                            ",{}]],"4":[[";;;###autoload                                                                              ",{"fg":1}]],"5":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["copy-region-or-whole-line",{"fg":4,"bold":true}],["(",{}],["&optional",{"fg":2}],[" arg)                                             ",{}]],"6":[["  ",{}],["\"有选择区域时：                                                                           ",{"fg":2}]],"7":[["        1:复制的内容是跨行的：复制区域所在的所有行的内容。不仅仅是区域内的内容              ",{"fg":2}]],"8":[["        2:复制的内容没有跨行：复制区域中的内内容                                            ",{"fg":2}]],"9":[["没有选择区域时:                                                                             ",{"fg":2}]],"10":[["        1:复制所在的行                                                                      ",{"fg":2}]],"11":[["        2:支持复制多行.  如 复制3行是  M-3 C-w                                              ",{"fg":2}]],"12":[["\"",{"fg":2}],["                                                                                           ",{}]],"13":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"14":[["  (opt-region-or-whole-line ",{}],["\"copy\"",{"fg":2}],[" arg)                                                     ",{}]],"15":[["  )                                                                                         ",{}]],"16":[["                                                                                            ",{}]],"17":[[";;;###autoload                                                                              ",{"fg":1}]],"18":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["kill-region-or-whole-line",{"fg":4,"bold":true}],["(",{}],["&optional",{"fg":2}],[" arg)                                             ",{}]],"19":[["  ",{}],["\"有选择区域时：                                                                           ",{"fg":2}]],"20":[["        1:剪切的内容是跨行的：剪切区域所在的所有行的内容。不仅仅是区域内的内容              ",{"fg":2}]],"21":[["        2:剪切的内容没有跨行：剪切区域中的内内容                                            ",{"fg":2}]],"22":[["没有选择区域时:                                                                             ",{"fg":2}]],"23":[["        1:剪切所在的行                                                                      ",{"fg":2}]],"24":[["        2:支持剪切多行.  如 剪切3行是  M-3 C-k                                              ",{"fg":2}]],"25":[["\"",{"fg":2}],["                                                                                           ",{}]],"26":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"27":[["  (opt-region-or-whole-line ",{}],["\"kill\"",{"fg":2}],[" arg))                                                    ",{}]]},"cursor":{"x":43,"visible":false}}],[0.001396,{"lines":{"2":[["      (funcall do-line-func arg))))                                                         ",{}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   61% L272  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":32,"visible":true}}],[0.028593,{"lines":{"1":[["                                                                                            ",{}]],"2":[["      (message ",{}],["\"%s line :%d\"",{"fg":2}],["  opt-type arg)                                                 ",{}]],"3":[["      (funcall do-line-func arg))))                                                         ",{}]],"4":[["                                                                                            ",{}]],"5":[[";;;###autoload                                                                              ",{"fg":1}]],"6":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["copy-region-or-whole-line",{"fg":4,"bold":true}],["(",{}],["&optional",{"fg":2}],[" arg)                                             ",{}]],"7":[["  ",{}],["\"有选择区域时：                                                                           ",{"fg":2}]],"8":[["        1:复制的内容是跨行的：复制区域所在的所有行的内容。不仅仅是区域内的内容              ",{"fg":2}]],"9":[["        2:复制的内容没有跨行：复制区域中的内内容                                            ",{"fg":2}]],"10":[["没有选择区域时:                                                                             ",{"fg":2}]],"11":[["        1:复制所在的行                                                                      ",{"fg":2}]],"12":[["        2:支持复制多行.  如 复制3行是  M-3 C-w                                              ",{"fg":2}]],"13":[["\"",{"fg":2}],["                                                                                           ",{}]],"14":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"15":[["  (opt-region-or-whole-line ",{}],["\"copy\"",{"fg":2}],[" arg)                                                     ",{}]],"16":[["  )                                                                                         ",{}]],"17":[["                                                                                            ",{}]],"18":[[";;;###autoload                                                                              ",{"fg":1}]],"19":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["kill-region-or-whole-line",{"fg":4,"bold":true}],["(",{}],["&optional",{"fg":2}],[" arg)                                             ",{}]],"20":[["  ",{}],["\"有选择区域时：                                                                           ",{"fg":2}]],"21":[["        1:剪切的内容是跨行的：剪切区域所在的所有行的内容。不仅仅是区域内的内容              ",{"fg":2}]],"22":[["        2:剪切的内容没有跨行：剪切区域中的内内容                                            ",{"fg":2}]],"23":[["没有选择区域时:                                                                             ",{"fg":2}]],"24":[["        1:剪切所在的行                                                                      ",{"fg":2}]],"25":[["        2:支持剪切多行.  如 剪切3行是  M-3 C-k                                              ",{"fg":2}]],"26":[["\"",{"fg":2}],["                                                                                           ",{}]],"27":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]]},"cursor":{"x":0}}],[0.000588,{"lines":{"1":[["      ",{}],["(",{"bg":6}],["or arg (setq arg 1)",{}],[")",{"bg":6}],["                                                                 ",{}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   61% L271  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":26}}],[0.029752,{"lines":{"1":[["                                                                                            ",{}]],"2":[["      ",{}],["(",{"bg":6}],["or arg (setq arg 1)",{}],[")",{"bg":6}],["                                                                 ",{}]],"3":[["      (message ",{}],["\"%s line :%d\"",{"fg":2}],["  opt-type arg)                                                 ",{}]],"4":[["      (funcall do-line-func arg))))                                                         ",{}]],"5":[["                                                                                            ",{}]],"6":[[";;;###autoload                                                                              ",{"fg":1}]],"7":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["copy-region-or-whole-line",{"fg":4,"bold":true}],["(",{}],["&optional",{"fg":2}],[" arg)                                             ",{}]],"8":[["  ",{}],["\"有选择区域时：                                                                           ",{"fg":2}]],"9":[["        1:复制的内容是跨行的：复制区域所在的所有行的内容。不仅仅是区域内的内容              ",{"fg":2}]],"10":[["        2:复制的内容没有跨行：复制区域中的内内容                                            ",{"fg":2}]],"11":[["没有选择区域时:                                                                             ",{"fg":2}]],"12":[["        1:复制所在的行                                                                      ",{"fg":2}]],"13":[["        2:支持复制多行.  如 复制3行是  M-3 C-w                                              ",{"fg":2}]],"14":[["\"",{"fg":2}],["                                                                                           ",{}]],"15":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"16":[["  (opt-region-or-whole-line ",{}],["\"copy\"",{"fg":2}],[" arg)                                                     ",{}]],"17":[["  )                                                                                         ",{}]],"18":[["                                                                                            ",{}]],"19":[[";;;###autoload                                                                              ",{"fg":1}]],"20":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["kill-region-or-whole-line",{"fg":4,"bold":true}],["(",{}],["&optional",{"fg":2}],[" arg)                                             ",{}]],"21":[["  ",{}],["\"有选择区域时：                                                                           ",{"fg":2}]],"22":[["        1:剪切的内容是跨行的：剪切区域所在的所有行的内容。不仅仅是区域内的内容              ",{"fg":2}]],"23":[["        2:剪切的内容没有跨行：剪切区域中的内内容                                            ",{"fg":2}]],"24":[["没有选择区域时:                                                                             ",{"fg":2}]],"25":[["        1:剪切所在的行                                                                      ",{"fg":2}]],"26":[["        2:支持剪切多行.  如 剪切3行是  M-3 C-k                                              ",{"fg":2}]],"27":[["\"",{"fg":2}],["                                                                                           ",{}]]},"cursor":{"x":0}}],[0.000603,{"lines":{"1":[["    (",{}],["progn",{"fg":6,"bold":true}],["                                                                                  ",{}]],"2":[["      (or arg (setq arg 1))                                                                 ",{}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   61% L270  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":9}}],[0.029168,{"lines":{"1":[["                                                                                            ",{}]],"2":[["    (",{}],["progn",{"fg":6,"bold":true}],["                                                                                  ",{}]],"3":[["      (or arg (setq arg 1))                                                                 ",{}]],"4":[["      (message ",{}],["\"%s line :%d\"",{"fg":2}],["  opt-type arg)                                                 ",{}]],"5":[["      (funcall do-line-func arg))))                                                         ",{}]],"6":[["                                                                                            ",{}]],"7":[[";;;###autoload                                                                              ",{"fg":1}]],"8":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["copy-region-or-whole-line",{"fg":4,"bold":true}],["(",{}],["&optional",{"fg":2}],[" arg)                                             ",{}]],"9":[["  ",{}],["\"有选择区域时：                                                                           ",{"fg":2}]],"10":[["        1:复制的内容是跨行的：复制区域所在的所有行的内容。不仅仅是区域内的内容              ",{"fg":2}]],"11":[["        2:复制的内容没有跨行：复制区域中的内内容                                            ",{"fg":2}]],"12":[["没有选择区域时:                                                                             ",{"fg":2}]],"13":[["        1:复制所在的行                                                                      ",{"fg":2}]],"14":[["        2:支持复制多行.  如 复制3行是  M-3 C-w                                              ",{"fg":2}]],"15":[["\"",{"fg":2}],["                                                                                           ",{}]],"16":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"17":[["  (opt-region-or-whole-line ",{}],["\"copy\"",{"fg":2}],[" arg)                                                     ",{}]],"18":[["  )                                                                                         ",{}]],"19":[["                                                                                            ",{}]],"20":[[";;;###autoload                                                                              ",{"fg":1}]],"21":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["kill-region-or-whole-line",{"fg":4,"bold":true}],["(",{}],["&optional",{"fg":2}],[" arg)                                             ",{}]],"22":[["  ",{}],["\"有选择区域时：                                                                           ",{"fg":2}]],"23":[["        1:剪切的内容是跨行的：剪切区域所在的所有行的内容。不仅仅是区域内的内容              ",{"fg":2}]],"24":[["        2:剪切的内容没有跨行：剪切区域中的内内容                                            ",{"fg":2}]],"25":[["没有选择区域时:                                                                             ",{"fg":2}]],"26":[["        1:剪切所在的行                                                                      ",{"fg":2}]],"27":[["        2:支持剪切多行.  如 剪切3行是  M-3 C-k                                              ",{"fg":2}]]},"cursor":{"x":0}}],[0.000612,{"lines":{"1":[["        (funcall do-region-func ",{}],["(",{"bg":6}],["region-beginning",{}],[")",{"bg":6}],[" (region-end) ))                          ",{}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   60% L269  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":32}}],[0.059847,{"lines":{"1":[["                                                                                            ",{}]],"2":[["        (funcall do-region-func ",{}],["(",{"bg":6}],["region-beginning",{}],[")",{"bg":6}],[" (region-end) ))                          ",{}]],"3":[["    (",{}],["progn",{"fg":6,"bold":true}],["                                                                                  ",{}]],"4":[["      (or arg (setq arg 1))                                                                 ",{}]],"5":[["      (message ",{}],["\"%s line :%d\"",{"fg":2}],["  opt-type arg)                                                 ",{}]],"6":[["      (funcall do-line-func arg))))                                                         ",{}]],"7":[["                                                                                            ",{}]],"8":[[";;;###autoload                                                                              ",{"fg":1}]],"9":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["copy-region-or-whole-line",{"fg":4,"bold":true}],["(",{}],["&optional",{"fg":2}],[" arg)                                             ",{}]],"10":[["  ",{}],["\"有选择区域时：                                                                           ",{"fg":2}]],"11":[["        1:复制的内容是跨行的：复制区域所在的所有行的内容。不仅仅是区域内的内容              ",{"fg":2}]],"12":[["        2:复制的内容没有跨行：复制区域中的内内容                                            ",{"fg":2}]],"13":[["没有选择区域时:                                                                             ",{"fg":2}]],"14":[["        1:复制所在的行                                                                      ",{"fg":2}]],"15":[["        2:支持复制多行.  如 复制3行是  M-3 C-w                                              ",{"fg":2}]],"16":[["\"",{"fg":2}],["                                                                                           ",{}]],"17":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"18":[["  (opt-region-or-whole-line ",{}],["\"copy\"",{"fg":2}],[" arg)                                                     ",{}]],"19":[["  )                                                                                         ",{}]],"20":[["                                                                                            ",{}]],"21":[[";;;###autoload                                                                              ",{"fg":1}]],"22":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["kill-region-or-whole-line",{"fg":4,"bold":true}],["(",{}],["&optional",{"fg":2}],[" arg)                                             ",{}]],"23":[["  ",{}],["\"有选择区域时：                                                                           ",{"fg":2}]],"24":[["        1:剪切的内容是跨行的：剪切区域所在的所有行的内容。不仅仅是区域内的内容              ",{"fg":2}]],"25":[["        2:剪切的内容没有跨行：剪切区域中的内内容                                            ",{"fg":2}]],"26":[["没有选择区域时:                                                                             ",{"fg":2}]],"27":[["        1:剪切所在的行                                                                      ",{"fg":2}]]},"cursor":{"x":0}}],[0.003003,{"lines":{"1":[["            (",{}],["if",{"fg":6,"bold":true}],[" (string= opt-type ",{}],["\"copy\"",{"fg":2}],[" ) (jump-to-register 0))                            ",{}]],"2":[["            ) ",{}],[";-----------                                                                  ",{"fg":1}]],"3":[["        (funcall do-region-func (region-beginning) (region-end) ))                          ",{}]],"4":[["    (",{}],["progn",{"fg":6,"bold":true}],["                                                                                  ",{}]],"5":[["      (or arg (setq arg 1))                                                                 ",{}]],"6":[["      (message ",{}],["\"%s line :%d\"",{"fg":2}],["  opt-type arg)                                                 ",{}]],"7":[["      (funcall do-line-func arg))))                                                         ",{}]],"8":[["                                                                                            ",{}]],"9":[[";;;###autoload                                                                              ",{"fg":1}]],"10":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["copy-region-or-whole-line",{"fg":4,"bold":true}],["(",{}],["&optional",{"fg":2}],[" arg)                                             ",{}]],"11":[["  ",{}],["\"有选择区域时：                                                                           ",{"fg":2}]],"12":[["        1:复制的内容是跨行的：复制区域所在的所有行的内容。不仅仅是区域内的内容              ",{"fg":2}]],"13":[["        2:复制的内容没有跨行：复制区域中的内内容                                            ",{"fg":2}]],"14":[["没有选择区域时:                                                                             ",{"fg":2}]],"15":[["        1:复制所在的行                                                                      ",{"fg":2}]],"16":[["        2:支持复制多行.  如 复制3行是  M-3 C-w                                              ",{"fg":2}]],"17":[["\"",{"fg":2}],["                                                                                           ",{}]],"18":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"19":[["  (opt-region-or-whole-line ",{}],["\"copy\"",{"fg":2}],[" arg)                                                     ",{}]],"20":[["  )                                                                                         ",{}]],"21":[["                                                                                            ",{}]],"22":[[";;;###autoload                                                                              ",{"fg":1}]],"23":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["kill-region-or-whole-line",{"fg":4,"bold":true}],["(",{}],["&optional",{"fg":2}],[" arg)                                             ",{}]],"24":[["  ",{}],["\"有选择区域时：                                                                           ",{"fg":2}]],"25":[["        1:剪切的内容是跨行的：剪切区域所在的所有行的内容。不仅仅是区域内的内容              ",{"fg":2}]],"26":[["        2:剪切的内容没有跨行：剪切区域中的内内容                                            ",{"fg":2}]],"27":[["没有选择区域时:                                                                             ",{"fg":2}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   60% L267  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":32}}],[0.031289,{"lines":{"1":[["                                                                                            ",{}]],"2":[["            (",{}],["if",{"fg":6,"bold":true}],[" (string= opt-type ",{}],["\"copy\"",{"fg":2}],[" ) (jump-to-register 0))                            ",{}]],"3":[["            ) ",{}],[";-----------                                                                  ",{"fg":1}]],"4":[["        (funcall do-region-func (region-beginning) (region-end) ))                          ",{}]],"5":[["    (",{}],["progn",{"fg":6,"bold":true}],["                                                                                  ",{}]],"6":[["      (or arg (setq arg 1))                                                                 ",{}]],"7":[["      (message ",{}],["\"%s line :%d\"",{"fg":2}],["  opt-type arg)                                                 ",{}]],"8":[["      (funcall do-line-func arg))))                                                         ",{}]],"9":[["                                                                                            ",{}]],"10":[[";;;###autoload                                                                              ",{"fg":1}]],"11":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["copy-region-or-whole-line",{"fg":4,"bold":true}],["(",{}],["&optional",{"fg":2}],[" arg)                                             ",{}]],"12":[["  ",{}],["\"有选择区域时：                                                                           ",{"fg":2}]],"13":[["        1:复制的内容是跨行的：复制区域所在的所有行的内容。不仅仅是区域内的内容              ",{"fg":2}]],"14":[["        2:复制的内容没有跨行：复制区域中的内内容                                            ",{"fg":2}]],"15":[["没有选择区域时:                                                                             ",{"fg":2}]],"16":[["        1:复制所在的行                                                                      ",{"fg":2}]],"17":[["        2:支持复制多行.  如 复制3行是  M-3 C-w                                              ",{"fg":2}]],"18":[["\"",{"fg":2}],["                                                                                           ",{}]],"19":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"20":[["  (opt-region-or-whole-line ",{}],["\"copy\"",{"fg":2}],[" arg)                                                     ",{}]],"21":[["  )                                                                                         ",{}]],"22":[["                                                                                            ",{}]],"23":[[";;;###autoload                                                                              ",{"fg":1}]],"24":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["kill-region-or-whole-line",{"fg":4,"bold":true}],["(",{}],["&optional",{"fg":2}],[" arg)                                             ",{}]],"25":[["  ",{}],["\"有选择区域时：                                                                           ",{"fg":2}]],"26":[["        1:剪切的内容是跨行的：剪切区域所在的所有行的内容。不仅仅是区域内的内容              ",{"fg":2}]],"27":[["        2:剪切的内容没有跨行：剪切区域中的内内容                                            ",{"fg":2}]]},"cursor":{"x":0}}],[0.0007930000000000001,{"lines":{"1":[["            (funcall do-region-func (car tmp-mark-pos) (cadr tmp-mark-pos)  )               ",{}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   59% L266  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":32}}],[0.026144,{"lines":{"1":[["                                                                                            ",{}]],"2":[["            (funcall do-region-func (car tmp-mark-pos) (cadr tmp-mark-pos)  )               ",{}]],"3":[["            (",{}],["if",{"fg":6,"bold":true}],[" (string= opt-type ",{}],["\"copy\"",{"fg":2}],[" ) (jump-to-register 0))                            ",{}]],"4":[["            ) ",{}],[";-----------                                                                  ",{"fg":1}]],"5":[["        (funcall do-region-func (region-beginning) (region-end) ))                          ",{}]],"6":[["    (",{}],["progn",{"fg":6,"bold":true}],["                                                                                  ",{}]],"7":[["      (or arg (setq arg 1))                                                                 ",{}]],"8":[["      (message ",{}],["\"%s line :%d\"",{"fg":2}],["  opt-type arg)                                                 ",{}]],"9":[["      (funcall do-line-func arg))))                                                         ",{}]],"10":[["                                                                                            ",{}]],"11":[[";;;###autoload                                                                              ",{"fg":1}]],"12":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["copy-region-or-whole-line",{"fg":4,"bold":true}],["(",{}],["&optional",{"fg":2}],[" arg)                                             ",{}]],"13":[["  ",{}],["\"有选择区域时：                                                                           ",{"fg":2}]],"14":[["        1:复制的内容是跨行的：复制区域所在的所有行的内容。不仅仅是区域内的内容              ",{"fg":2}]],"15":[["        2:复制的内容没有跨行：复制区域中的内内容                                            ",{"fg":2}]],"16":[["没有选择区域时:                                                                             ",{"fg":2}]],"17":[["        1:复制所在的行                                                                      ",{"fg":2}]],"18":[["        2:支持复制多行.  如 复制3行是  M-3 C-w                                              ",{"fg":2}]],"19":[["\"",{"fg":2}],["                                                                                           ",{}]],"20":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"21":[["  (opt-region-or-whole-line ",{}],["\"copy\"",{"fg":2}],[" arg)                                                     ",{}]],"22":[["  )                                                                                         ",{}]],"23":[["                                                                                            ",{}]],"24":[[";;;###autoload                                                                              ",{"fg":1}]],"25":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["kill-region-or-whole-line",{"fg":4,"bold":true}],["(",{}],["&optional",{"fg":2}],[" arg)                                             ",{}]],"26":[["  ",{}],["\"有选择区域时：                                                                           ",{"fg":2}]],"27":[["        1:剪切的内容是跨行的：剪切区域所在的所有行的内容。不仅仅是区域内的内容              ",{"fg":2}]]},"cursor":{"x":0}}],[0.0005989999999999999,{"lines":{"1":[["            (setq tmp-mark-pos  ",{}],["(",{"bg":6}],["get-mark-pos-ex",{}],[")",{"bg":6}],[")                                          ",{}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   59% L265  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":32}}],[0.031724,{"lines":{"1":[["                                                                                            ",{}]],"2":[["            (setq tmp-mark-pos  ",{}],["(",{"bg":6}],["get-mark-pos-ex",{}],[")",{"bg":6}],[")                                          ",{}]],"3":[["            (funcall do-region-func (car tmp-mark-pos) (cadr tmp-mark-pos)  )               ",{}]],"4":[["            (",{}],["if",{"fg":6,"bold":true}],[" (string= opt-type ",{}],["\"copy\"",{"fg":2}],[" ) (jump-to-register 0))                            ",{}]],"5":[["            ) ",{}],[";-----------                                                                  ",{"fg":1}]],"6":[["        (funcall do-region-func (region-beginning) (region-end) ))                          ",{}]],"7":[["    (",{}],["progn",{"fg":6,"bold":true}],["                                                                                  ",{}]],"8":[["      (or arg (setq arg 1))                                                                 ",{}]],"9":[["      (message ",{}],["\"%s line :%d\"",{"fg":2}],["  opt-type arg)                                                 ",{}]],"10":[["      (funcall do-line-func arg))))                                                         ",{}]],"11":[["                                                                                            ",{}]],"12":[[";;;###autoload                                                                              ",{"fg":1}]],"13":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["copy-region-or-whole-line",{"fg":4,"bold":true}],["(",{}],["&optional",{"fg":2}],[" arg)                                             ",{}]],"14":[["  ",{}],["\"有选择区域时：                                                                           ",{"fg":2}]],"15":[["        1:复制的内容是跨行的：复制区域所在的所有行的内容。不仅仅是区域内的内容              ",{"fg":2}]],"16":[["        2:复制的内容没有跨行：复制区域中的内内容                                            ",{"fg":2}]],"17":[["没有选择区域时:                                                                             ",{"fg":2}]],"18":[["        1:复制所在的行                                                                      ",{"fg":2}]],"19":[["        2:支持复制多行.  如 复制3行是  M-3 C-w                                              ",{"fg":2}]],"20":[["\"",{"fg":2}],["                                                                                           ",{}]],"21":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"22":[["  (opt-region-or-whole-line ",{}],["\"copy\"",{"fg":2}],[" arg)                                                     ",{}]],"23":[["  )                                                                                         ",{}]],"24":[["                                                                                            ",{}]],"25":[[";;;###autoload                                                                              ",{"fg":1}]],"26":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["kill-region-or-whole-line",{"fg":4,"bold":true}],["(",{}],["&optional",{"fg":2}],[" arg)                                             ",{}]],"27":[["  ",{}],["\"有选择区域时：                                                                           ",{"fg":2}]]},"cursor":{"x":0}}],[0.000644,{"lines":{"1":[["            (",{}],["if",{"fg":6,"bold":true}],[" (string= opt-type ",{}],["\"copy\"",{"fg":2}],[" ) (point-to-register 0))                           ",{}]],"2":[["            (setq tmp-mark-pos  (get-mark-pos-ex))                                          ",{}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   59% L264  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":32}}],[0.02938,{"lines":{"1":[["          (",{}],["progn",{"fg":6,"bold":true}],["                                                                            ",{}]],"2":[["            (",{}],["if",{"fg":6,"bold":true}],[" (string= opt-type ",{}],["\"copy\"",{"fg":2}],[" ) (point-to-register 0))                           ",{}]],"3":[["            (setq tmp-mark-pos  (get-mark-pos-ex))                                          ",{}]],"4":[["            (funcall do-region-func (car tmp-mark-pos) (cadr tmp-mark-pos)  )               ",{}]],"5":[["            (",{}],["if",{"fg":6,"bold":true}],[" (string= opt-type ",{}],["\"copy\"",{"fg":2}],[" ) (jump-to-register 0))                            ",{}]],"6":[["            ) ",{}],[";-----------                                                                  ",{"fg":1}]],"7":[["        (funcall do-region-func (region-beginning) (region-end) ))                          ",{}]],"8":[["    (",{}],["progn",{"fg":6,"bold":true}],["                                                                                  ",{}]],"9":[["      (or arg (setq arg 1))                                                                 ",{}]],"10":[["      (message ",{}],["\"%s line :%d\"",{"fg":2}],["  opt-type arg)                                                 ",{}]],"11":[["      (funcall do-line-func arg))))                                                         ",{}]],"12":[["                                                                                            ",{}]],"13":[[";;;###autoload                                                                              ",{"fg":1}]],"14":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["copy-region-or-whole-line",{"fg":4,"bold":true}],["(",{}],["&optional",{"fg":2}],[" arg)                                             ",{}]],"15":[["  ",{}],["\"有选择区域时：                                                                           ",{"fg":2}]],"16":[["        1:复制的内容是跨行的：复制区域所在的所有行的内容。不仅仅是区域内的内容              ",{"fg":2}]],"17":[["        2:复制的内容没有跨行：复制区域中的内内容                                            ",{"fg":2}]],"18":[["没有选择区域时:                                                                             ",{"fg":2}]],"19":[["        1:复制所在的行                                                                      ",{"fg":2}]],"20":[["        2:支持复制多行.  如 复制3行是  M-3 C-w                                              ",{"fg":2}]],"21":[["\"",{"fg":2}],["                                                                                           ",{}]],"22":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"23":[["  (opt-region-or-whole-line ",{}],["\"copy\"",{"fg":2}],[" arg)                                                     ",{}]],"24":[["  )                                                                                         ",{}]],"25":[["                                                                                            ",{}]],"26":[[";;;###autoload                                                                              ",{"fg":1}]],"27":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["kill-region-or-whole-line",{"fg":4,"bold":true}],["(",{}],["&optional",{"fg":2}],[" arg)                                             ",{}]]},"cursor":{"x":16,"visible":false}}],[5.7e-05,{"lines":{"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   59% L263  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":15,"visible":true}}],[0.030878,{"lines":{"1":[["                                                                                            ",{}]],"2":[["          (",{}],["progn",{"fg":6,"bold":true}],["                                                                            ",{}]],"3":[["            (",{}],["if",{"fg":6,"bold":true}],[" (string= opt-type ",{}],["\"copy\"",{"fg":2}],[" ) (point-to-register 0))                           ",{}]],"4":[["            (setq tmp-mark-pos  (get-mark-pos-ex))                                          ",{}]],"5":[["            (funcall do-region-func (car tmp-mark-pos) (cadr tmp-mark-pos)  )               ",{}]],"6":[["            (",{}],["if",{"fg":6,"bold":true}],[" (string= opt-type ",{}],["\"copy\"",{"fg":2}],[" ) (jump-to-register 0))                            ",{}]],"7":[["            ) ",{}],[";-----------                                                                  ",{"fg":1}]],"8":[["        (funcall do-region-func (region-beginning) (region-end) ))                          ",{}]],"9":[["    (",{}],["progn",{"fg":6,"bold":true}],["                                                                                  ",{}]],"10":[["      (or arg (setq arg 1))                                                                 ",{}]],"11":[["      (message ",{}],["\"%s line :%d\"",{"fg":2}],["  opt-type arg)                                                 ",{}]],"12":[["      (funcall do-line-func arg))))                                                         ",{}]],"13":[["                                                                                            ",{}]],"14":[[";;;###autoload                                                                              ",{"fg":1}]],"15":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["copy-region-or-whole-line",{"fg":4,"bold":true}],["(",{}],["&optional",{"fg":2}],[" arg)                                             ",{}]],"16":[["  ",{}],["\"有选择区域时：                                                                           ",{"fg":2}]],"17":[["        1:复制的内容是跨行的：复制区域所在的所有行的内容。不仅仅是区域内的内容              ",{"fg":2}]],"18":[["        2:复制的内容没有跨行：复制区域中的内内容                                            ",{"fg":2}]],"19":[["没有选择区域时:                                                                             ",{"fg":2}]],"20":[["        1:复制所在的行                                                                      ",{"fg":2}]],"21":[["        2:支持复制多行.  如 复制3行是  M-3 C-w                                              ",{"fg":2}]],"22":[["\"",{"fg":2}],["                                                                                           ",{}]],"23":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"24":[["  (opt-region-or-whole-line ",{}],["\"copy\"",{"fg":2}],[" arg)                                                     ",{}]],"25":[["  )                                                                                         ",{}]],"26":[["                                                                                            ",{}]],"27":[[";;;###autoload                                                                              ",{"fg":1}]]},"cursor":{"x":0}}],[5.4e-05,{"lines":{"1":[["                        (buffer-substring-no-properties (region-beginning)(region-end)))    ",{}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   58% L262  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":32}}],[0.030119,{"lines":{"1":[["                                                                                            ",{}]],"2":[["                        (buffer-substring-no-properties (region-beginning)(region-end)))    ",{}]],"3":[["          (",{}],["progn",{"fg":6,"bold":true}],["                                                                            ",{}]],"4":[["            (",{}],["if",{"fg":6,"bold":true}],[" (string= opt-type ",{}],["\"copy\"",{"fg":2}],[" ) (point-to-register 0))                           ",{}]],"5":[["            (setq tmp-mark-pos  (get-mark-pos-ex))                                          ",{}]],"6":[["            (funcall do-region-func (car tmp-mark-pos) (cadr tmp-mark-pos)  )               ",{}]],"7":[["            (",{}],["if",{"fg":6,"bold":true}],[" (string= opt-type ",{}],["\"copy\"",{"fg":2}],[" ) (jump-to-register 0))                            ",{}]],"8":[["            ) ",{}],[";-----------                                                                  ",{"fg":1}]],"9":[["        (funcall do-region-func (region-beginning) (region-end) ))                          ",{}]],"10":[["    (",{}],["progn",{"fg":6,"bold":true}],["                                                                                  ",{}]],"11":[["      (or arg (setq arg 1))                                                                 ",{}]],"12":[["      (message ",{}],["\"%s line :%d\"",{"fg":2}],["  opt-type arg)                                                 ",{}]],"13":[["      (funcall do-line-func arg))))                                                         ",{}]],"14":[["                                                                                            ",{}]],"15":[[";;;###autoload                                                                              ",{"fg":1}]],"16":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["copy-region-or-whole-line",{"fg":4,"bold":true}],["(",{}],["&optional",{"fg":2}],[" arg)                                             ",{}]],"17":[["  ",{}],["\"有选择区域时：                                                                           ",{"fg":2}]],"18":[["        1:复制的内容是跨行的：复制区域所在的所有行的内容。不仅仅是区域内的内容              ",{"fg":2}]],"19":[["        2:复制的内容没有跨行：复制区域中的内内容                                            ",{"fg":2}]],"20":[["没有选择区域时:                                                                             ",{"fg":2}]],"21":[["        1:复制所在的行                                                                      ",{"fg":2}]],"22":[["        2:支持复制多行.  如 复制3行是  M-3 C-w                                              ",{"fg":2}]],"23":[["\"",{"fg":2}],["                                                                                           ",{}]],"24":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"25":[["  (opt-region-or-whole-line ",{}],["\"copy\"",{"fg":2}],[" arg)                                                     ",{}]],"26":[["  )                                                                                         ",{}]]},"cursor":{"x":0}}],[5.5e-05,{"lines":{"1":[["      (",{}],["if",{"fg":6,"bold":true}],[" (string-match ",{}],["\"\\n\"",{"fg":2}],["                                                                ",{}]],"27":[["                                                                                            ",{}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   58% L261  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":27}}],[0.030505,{"lines":{"1":[["                                                                                            ",{}]],"2":[["      (",{}],["if",{"fg":6,"bold":true}],[" (string-match ",{}],["\"\\n\"",{"fg":2}],["                                                                ",{}]],"3":[["                        (buffer-substring-no-properties (region-beginning)(region-end)))    ",{}]],"4":[["          (",{}],["progn",{"fg":6,"bold":true}],["                                                                            ",{}]],"5":[["            (",{}],["if",{"fg":6,"bold":true}],[" (string= opt-type ",{}],["\"copy\"",{"fg":2}],[" ) (point-to-register 0))                           ",{}]],"6":[["            (setq tmp-mark-pos  (get-mark-pos-ex))                                          ",{}]],"7":[["            (funcall do-region-func (car tmp-mark-pos) (cadr tmp-mark-pos)  )               ",{}]],"8":[["            (",{}],["if",{"fg":6,"bold":true}],[" (string= opt-type ",{}],["\"copy\"",{"fg":2}],[" ) (jump-to-register 0))                            ",{}]],"9":[["            ) ",{}],[";-----------                                                                  ",{"fg":1}]],"10":[["        (funcall do-region-func (region-beginning) (region-end) ))                          ",{}]],"11":[["    (",{}],["progn",{"fg":6,"bold":true}],["                                                                                  ",{}]],"12":[["      (or arg (setq arg 1))                                                                 ",{}]],"13":[["      (message ",{}],["\"%s line :%d\"",{"fg":2}],["  opt-type arg)                                                 ",{}]],"14":[["      (funcall do-line-func arg))))                                                         ",{}]],"15":[["                                                                                            ",{}]],"16":[[";;;###autoload                                                                              ",{"fg":1}]],"17":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["copy-region-or-whole-line",{"fg":4,"bold":true}],["(",{}],["&optional",{"fg":2}],[" arg)                                             ",{}]],"18":[["  ",{}],["\"有选择区域时：                                                                           ",{"fg":2}]],"19":[["        1:复制的内容是跨行的：复制区域所在的所有行的内容。不仅仅是区域内的内容              ",{"fg":2}]],"20":[["        2:复制的内容没有跨行：复制区域中的内内容                                            ",{"fg":2}]],"21":[["没有选择区域时:                                                                             ",{"fg":2}]],"22":[["        1:复制所在的行                                                                      ",{"fg":2}]],"23":[["        2:支持复制多行.  如 复制3行是  M-3 C-w                                              ",{"fg":2}]],"24":[["\"",{"fg":2}],["                                                                                           ",{}]],"25":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"26":[["  (opt-region-or-whole-line ",{}],["\"copy\"",{"fg":2}],[" arg)                                                     ",{}]],"27":[["  )                                                                                         ",{}]]},"cursor":{"x":0}}],[0.001404,{"lines":{"1":[["            ",{}],[")",{"bg":6}],["                                                                               ",{}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   58% L260  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":12}}],[0.029944,{"lines":{"1":[["                                                                                            ",{}]],"2":[["            ",{}],[")",{"bg":6}],["                                                                               ",{}]],"3":[["      (",{}],["if",{"fg":6,"bold":true}],[" (string-match ",{}],["\"\\n\"",{"fg":2}],["                                                                ",{}]],"4":[["                        (buffer-substring-no-properties (region-beginning)(region-end)))    ",{}]],"5":[["          (",{}],["progn",{"fg":6,"bold":true}],["                                                                            ",{}]],"6":[["            (",{}],["if",{"fg":6,"bold":true}],[" (string= opt-type ",{}],["\"copy\"",{"fg":2}],[" ) (point-to-register 0))                           ",{}]],"7":[["            (setq tmp-mark-pos  (get-mark-pos-ex))                                          ",{}]],"8":[["            (funcall do-region-func (car tmp-mark-pos) (cadr tmp-mark-pos)  )               ",{}]],"9":[["            (",{}],["if",{"fg":6,"bold":true}],[" (string= opt-type ",{}],["\"copy\"",{"fg":2}],[" ) (jump-to-register 0))                            ",{}]],"10":[["            ) ",{}],[";-----------                                                                  ",{"fg":1}]],"11":[["        (funcall do-region-func (region-beginning) (region-end) ))                          ",{}]],"12":[["    (",{}],["progn",{"fg":6,"bold":true}],["                                                                                  ",{}]],"13":[["      (or arg (setq arg 1))                                                                 ",{}]],"14":[["      (message ",{}],["\"%s line :%d\"",{"fg":2}],["  opt-type arg)                                                 ",{}]],"15":[["      (funcall do-line-func arg))))                                                         ",{}]],"16":[["                                                                                            ",{}]],"17":[[";;;###autoload                                                                              ",{"fg":1}]],"18":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["copy-region-or-whole-line",{"fg":4,"bold":true}],["(",{}],["&optional",{"fg":2}],[" arg)                                             ",{}]],"19":[["  ",{}],["\"有选择区域时：                                                                           ",{"fg":2}]],"20":[["        1:复制的内容是跨行的：复制区域所在的所有行的内容。不仅仅是区域内的内容              ",{"fg":2}]],"21":[["        2:复制的内容没有跨行：复制区域中的内内容                                            ",{"fg":2}]],"22":[["没有选择区域时:                                                                             ",{"fg":2}]],"23":[["        1:复制所在的行                                                                      ",{"fg":2}]],"24":[["        2:支持复制多行.  如 复制3行是  M-3 C-w                                              ",{"fg":2}]],"25":[["\"",{"fg":2}],["                                                                                           ",{}]],"26":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"27":[["  (opt-region-or-whole-line ",{}],["\"copy\"",{"fg":2}],[" arg)                                                     ",{}]]},"cursor":{"x":0}}],[0.002018,{"lines":{"1":[["            (",{}],["if",{"fg":6,"bold":true}],["  viper-mode (string= viper-current-state ",{}],["\"visual-state\"",{"fg":2}],[" ) t )               ",{}]],"2":[["            )                                                                               ",{}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   57% L259  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":32}}],[0.026815,{"lines":{"1":[["                                                                                            ",{}]],"2":[["            (",{}],["if",{"fg":6,"bold":true}],["  viper-mode (string= viper-current-state ",{}],["\"visual-state\"",{"fg":2}],[" ) t )               ",{}]],"3":[["            )                                                                               ",{}]],"4":[["      (",{}],["if",{"fg":6,"bold":true}],[" (string-match ",{}],["\"\\n\"",{"fg":2}],["                                                                ",{}]],"5":[["                        (buffer-substring-no-properties (region-beginning)(region-end)))    ",{}]],"6":[["          (",{}],["progn",{"fg":6,"bold":true}],["                                                                            ",{}]],"7":[["            (",{}],["if",{"fg":6,"bold":true}],[" (string= opt-type ",{}],["\"copy\"",{"fg":2}],[" ) (point-to-register 0))                           ",{}]],"8":[["            (setq tmp-mark-pos  (get-mark-pos-ex))                                          ",{}]],"9":[["            (funcall do-region-func (car tmp-mark-pos) (cadr tmp-mark-pos)  )               ",{}]],"10":[["            (",{}],["if",{"fg":6,"bold":true}],[" (string= opt-type ",{}],["\"copy\"",{"fg":2}],[" ) (jump-to-register 0))                            ",{}]],"11":[["            ) ",{}],[";-----------                                                                  ",{"fg":1}]],"12":[["        (funcall do-region-func (region-beginning) (region-end) ))                          ",{}]],"13":[["    (",{}],["progn",{"fg":6,"bold":true}],["                                                                                  ",{}]],"14":[["      (or arg (setq arg 1))                                                                 ",{}]],"15":[["      (message ",{}],["\"%s line :%d\"",{"fg":2}],["  opt-type arg)                                                 ",{}]],"16":[["      (funcall do-line-func arg))))                                                         ",{}]],"17":[["                                                                                            ",{}]],"18":[[";;;###autoload                                                                              ",{"fg":1}]],"19":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["copy-region-or-whole-line",{"fg":4,"bold":true}],["(",{}],["&optional",{"fg":2}],[" arg)                                             ",{}]],"20":[["  ",{}],["\"有选择区域时：                                                                           ",{"fg":2}]],"21":[["        1:复制的内容是跨行的：复制区域所在的所有行的内容。不仅仅是区域内的内容              ",{"fg":2}]],"22":[["        2:复制的内容没有跨行：复制区域中的内内容                                            ",{"fg":2}]],"23":[["没有选择区域时:                                                                             ",{"fg":2}]],"24":[["        1:复制所在的行                                                                      ",{"fg":2}]],"25":[["        2:支持复制多行.  如 复制3行是  M-3 C-w                                              ",{"fg":2}]],"26":[["\"",{"fg":2}],["                                                                                           ",{}]],"27":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]]},"cursor":{"x":0}}],[0.000275,{"lines":{"1":[["            (not  (= (region-beginning) (region-end) ))                                     ",{}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   57% L258  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":32}}],[0.030659,{"lines":{"1":[["                                                                                            ",{}]],"2":[["            (not  (= (region-beginning) (region-end) ))                                     ",{}]],"3":[["            (",{}],["if",{"fg":6,"bold":true}],["  viper-mode (string= viper-current-state ",{}],["\"visual-state\"",{"fg":2}],[" ) t )               ",{}]],"4":[["            )                                                                               ",{}]],"5":[["      (",{}],["if",{"fg":6,"bold":true}],[" (string-match ",{}],["\"\\n\"",{"fg":2}],["                                                                ",{}]],"6":[["                        (buffer-substring-no-properties (region-beginning)(region-end)))    ",{}]],"7":[["          (",{}],["progn",{"fg":6,"bold":true}],["                                                                            ",{}]],"8":[["            (",{}],["if",{"fg":6,"bold":true}],[" (string= opt-type ",{}],["\"copy\"",{"fg":2}],[" ) (point-to-register 0))                           ",{}]],"9":[["            (setq tmp-mark-pos  (get-mark-pos-ex))                                          ",{}]],"10":[["            (funcall do-region-func (car tmp-mark-pos) (cadr tmp-mark-pos)  )               ",{}]],"11":[["            (",{}],["if",{"fg":6,"bold":true}],[" (string= opt-type ",{}],["\"copy\"",{"fg":2}],[" ) (jump-to-register 0))                            ",{}]],"12":[["            ) ",{}],[";-----------                                                                  ",{"fg":1}]],"13":[["        (funcall do-region-func (region-beginning) (region-end) ))                          ",{}]],"14":[["    (",{}],["progn",{"fg":6,"bold":true}],["                                                                                  ",{}]],"15":[["      (or arg (setq arg 1))                                                                 ",{}]],"16":[["      (message ",{}],["\"%s line :%d\"",{"fg":2}],["  opt-type arg)                                                 ",{}]],"17":[["      (funcall do-line-func arg))))                                                         ",{}]],"18":[["                                                                                            ",{}]],"19":[[";;;###autoload                                                                              ",{"fg":1}]],"20":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["copy-region-or-whole-line",{"fg":4,"bold":true}],["(",{}],["&optional",{"fg":2}],[" arg)                                             ",{}]],"21":[["  ",{}],["\"有选择区域时：                                                                           ",{"fg":2}]],"22":[["        1:复制的内容是跨行的：复制区域所在的所有行的内容。不仅仅是区域内的内容              ",{"fg":2}]],"23":[["        2:复制的内容没有跨行：复制区域中的内内容                                            ",{"fg":2}]],"24":[["没有选择区域时:                                                                             ",{"fg":2}]],"25":[["        1:复制所在的行                                                                      ",{"fg":2}]],"26":[["        2:支持复制多行.  如 复制3行是  M-3 C-w                                              ",{"fg":2}]],"27":[["\"",{"fg":2}],["                                                                                           ",{}]]},"cursor":{"x":0}}],[5.3e-05,{"lines":{"1":[["  (",{}],["if",{"fg":6,"bold":true}],[" (and  mark-active                                                                     ",{}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   57% L257  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":22}}],[0.032264,{"lines":{"1":[["    ",{}],[")",{"bg":6}],["                                                                                       ",{}]],"2":[["  (",{}],["if",{"fg":6,"bold":true}],[" (and  mark-active                                                                     ",{}]],"3":[["            (not  (= (region-beginning) (region-end) ))                                     ",{}]],"4":[["            (",{}],["if",{"fg":6,"bold":true}],["  viper-mode (string= viper-current-state ",{}],["\"visual-state\"",{"fg":2}],[" ) t )               ",{}]],"5":[["            )                                                                               ",{}]],"6":[["      (",{}],["if",{"fg":6,"bold":true}],[" (string-match ",{}],["\"\\n\"",{"fg":2}],["                                                                ",{}]],"7":[["                        (buffer-substring-no-properties (region-beginning)(region-end)))    ",{}]],"8":[["          (",{}],["progn",{"fg":6,"bold":true}],["                                                                            ",{}]],"9":[["            (",{}],["if",{"fg":6,"bold":true}],[" (string= opt-type ",{}],["\"copy\"",{"fg":2}],[" ) (point-to-register 0))                           ",{}]],"10":[["            (setq tmp-mark-pos  (get-mark-pos-ex))                                          ",{}]],"11":[["            (funcall do-region-func (car tmp-mark-pos) (cadr tmp-mark-pos)  )               ",{}]],"12":[["            (",{}],["if",{"fg":6,"bold":true}],[" (string= opt-type ",{}],["\"copy\"",{"fg":2}],[" ) (jump-to-register 0))                            ",{}]],"13":[["            ) ",{}],[";-----------                                                                  ",{"fg":1}]],"14":[["        (funcall do-region-func (region-beginning) (region-end) ))                          ",{}]],"15":[["    (",{}],["progn",{"fg":6,"bold":true}],["                                                                                  ",{}]],"16":[["      (or arg (setq arg 1))                                                                 ",{}]],"17":[["      (message ",{}],["\"%s line :%d\"",{"fg":2}],["  opt-type arg)                                                 ",{}]],"18":[["      (funcall do-line-func arg))))                                                         ",{}]],"19":[["                                                                                            ",{}]],"20":[[";;;###autoload                                                                              ",{"fg":1}]],"21":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["copy-region-or-whole-line",{"fg":4,"bold":true}],["(",{}],["&optional",{"fg":2}],[" arg)                                             ",{}]],"22":[["  ",{}],["\"有选择区域时：                                                                           ",{"fg":2}]],"23":[["        1:复制的内容是跨行的：复制区域所在的所有行的内容。不仅仅是区域内的内容              ",{"fg":2}]],"24":[["        2:复制的内容没有跨行：复制区域中的内内容                                            ",{"fg":2}]],"25":[["没有选择区域时:                                                                             ",{"fg":2}]],"26":[["        1:复制所在的行                                                                      ",{"fg":2}]],"27":[["        2:支持复制多行.  如 复制3行是  M-3 C-w                                              ",{"fg":2}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   57% L256  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":4}}],[0.029009,{"lines":{"1":[["                                                                                            ",{}]],"2":[["    ",{}],[")",{"bg":6}],["                                                                                       ",{}]],"3":[["  (",{}],["if",{"fg":6,"bold":true}],[" (and  mark-active                                                                     ",{}]],"4":[["            (not  (= (region-beginning) (region-end) ))                                     ",{}]],"5":[["            (",{}],["if",{"fg":6,"bold":true}],["  viper-mode (string= viper-current-state ",{}],["\"visual-state\"",{"fg":2}],[" ) t )               ",{}]],"6":[["            )                                                                               ",{}]],"7":[["      (",{}],["if",{"fg":6,"bold":true}],[" (string-match ",{}],["\"\\n\"",{"fg":2}],["                                                                ",{}]],"8":[["                        (buffer-substring-no-properties (region-beginning)(region-end)))    ",{}]],"9":[["          (",{}],["progn",{"fg":6,"bold":true}],["                                                                            ",{}]],"10":[["            (",{}],["if",{"fg":6,"bold":true}],[" (string= opt-type ",{}],["\"copy\"",{"fg":2}],[" ) (point-to-register 0))                           ",{}]],"11":[["            (setq tmp-mark-pos  (get-mark-pos-ex))                                          ",{}]],"12":[["            (funcall do-region-func (car tmp-mark-pos) (cadr tmp-mark-pos)  )               ",{}]],"13":[["            (",{}],["if",{"fg":6,"bold":true}],[" (string= opt-type ",{}],["\"copy\"",{"fg":2}],[" ) (jump-to-register 0))                            ",{}]],"14":[["            ) ",{}],[";-----------                                                                  ",{"fg":1}]],"15":[["        (funcall do-region-func (region-beginning) (region-end) ))                          ",{}]],"16":[["    (",{}],["progn",{"fg":6,"bold":true}],["                                                                                  ",{}]],"17":[["      (or arg (setq arg 1))                                                                 ",{}]],"18":[["      (message ",{}],["\"%s line :%d\"",{"fg":2}],["  opt-type arg)                                                 ",{}]],"19":[["      (funcall do-line-func arg))))                                                         ",{}]],"20":[["                                                                                            ",{}]],"21":[[";;;###autoload                                                                              ",{"fg":1}]],"22":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["copy-region-or-whole-line",{"fg":4,"bold":true}],["(",{}],["&optional",{"fg":2}],[" arg)                                             ",{}]],"23":[["  ",{}],["\"有选择区域时：                                                                           ",{"fg":2}]],"24":[["        1:复制的内容是跨行的：复制区域所在的所有行的内容。不仅仅是区域内的内容              ",{"fg":2}]],"25":[["        2:复制的内容没有跨行：复制区域中的内内容                                            ",{"fg":2}]],"26":[["没有选择区域时:                                                                             ",{"fg":2}]],"27":[["        1:复制所在的行                                                                      ",{"fg":2}]]},"cursor":{"x":0}}],[0.001322,{"lines":{"1":[["    (setq do-region-func 'kill-region do-line-func  'kill-whole-line  )                     ",{}]],"2":[["    )                                                                                       ",{}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   56% L255  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":32}}],[0.028873,{"lines":{"1":[["                                                                                            ",{}]],"2":[["    (setq do-region-func 'kill-region do-line-func  'kill-whole-line  )                     ",{}]],"3":[["    )                                                                                       ",{}]],"4":[["  (",{}],["if",{"fg":6,"bold":true}],[" (and  mark-active                                                                     ",{}]],"5":[["            (not  (= (region-beginning) (region-end) ))                                     ",{}]],"6":[["            (",{}],["if",{"fg":6,"bold":true}],["  viper-mode (string= viper-current-state ",{}],["\"visual-state\"",{"fg":2}],[" ) t )               ",{}]],"7":[["            )                                                                               ",{}]],"8":[["      (",{}],["if",{"fg":6,"bold":true}],[" (string-match ",{}],["\"\\n\"",{"fg":2}],["                                                                ",{}]],"9":[["                        (buffer-substring-no-properties (region-beginning)(region-end)))    ",{}]],"10":[["          (",{}],["progn",{"fg":6,"bold":true}],["                                                                            ",{}]],"11":[["            (",{}],["if",{"fg":6,"bold":true}],[" (string= opt-type ",{}],["\"copy\"",{"fg":2}],[" ) (point-to-register 0))                           ",{}]],"12":[["            (setq tmp-mark-pos  (get-mark-pos-ex))                                          ",{}]],"13":[["            (funcall do-region-func (car tmp-mark-pos) (cadr tmp-mark-pos)  )               ",{}]],"14":[["            (",{}],["if",{"fg":6,"bold":true}],[" (string= opt-type ",{}],["\"copy\"",{"fg":2}],[" ) (jump-to-register 0))                            ",{}]],"15":[["            ) ",{}],[";-----------                                                                  ",{"fg":1}]],"16":[["        (funcall do-region-func (region-beginning) (region-end) ))                          ",{}]],"17":[["    (",{}],["progn",{"fg":6,"bold":true}],["                                                                                  ",{}]],"18":[["      (or arg (setq arg 1))                                                                 ",{}]],"19":[["      (message ",{}],["\"%s line :%d\"",{"fg":2}],["  opt-type arg)                                                 ",{}]],"20":[["      (funcall do-line-func arg))))                                                         ",{}]],"21":[["                                                                                            ",{}]],"22":[[";;;###autoload                                                                              ",{"fg":1}]],"23":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["copy-region-or-whole-line",{"fg":4,"bold":true}],["(",{}],["&optional",{"fg":2}],[" arg)                                             ",{}]],"24":[["  ",{}],["\"有选择区域时：                                                                           ",{"fg":2}]],"25":[["        1:复制的内容是跨行的：复制区域所在的所有行的内容。不仅仅是区域内的内容              ",{"fg":2}]],"26":[["        2:复制的内容没有跨行：复制区域中的内内容                                            ",{"fg":2}]],"27":[["没有选择区域时:                                                                             ",{"fg":2}]]},"cursor":{"x":0}}],[6.7e-05,{"lines":{"1":[["      (setq do-region-func 'copy-region-as-kill do-line-func  'copy-whole-line  )           ",{}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   56% L254  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":32}}],[0.029914,{"lines":{"1":[["                                                                                            ",{}]],"2":[["      (setq do-region-func 'copy-region-as-kill do-line-func  'copy-whole-line  )           ",{}]],"3":[["    (setq do-region-func 'kill-region do-line-func  'kill-whole-line  )                     ",{}]],"4":[["    )                                                                                       ",{}]],"5":[["  (",{}],["if",{"fg":6,"bold":true}],[" (and  mark-active                                                                     ",{}]],"6":[["            (not  (= (region-beginning) (region-end) ))                                     ",{}]],"7":[["            (",{}],["if",{"fg":6,"bold":true}],["  viper-mode (string= viper-current-state ",{}],["\"visual-state\"",{"fg":2}],[" ) t )               ",{}]],"8":[["            )                                                                               ",{}]],"9":[["      (",{}],["if",{"fg":6,"bold":true}],[" (string-match ",{}],["\"\\n\"",{"fg":2}],["                                                                ",{}]],"10":[["                        (buffer-substring-no-properties (region-beginning)(region-end)))    ",{}]],"11":[["          (",{}],["progn",{"fg":6,"bold":true}],["                                                                            ",{}]],"12":[["            (",{}],["if",{"fg":6,"bold":true}],[" (string= opt-type ",{}],["\"copy\"",{"fg":2}],[" ) (point-to-register 0))                           ",{}]],"13":[["            (setq tmp-mark-pos  (get-mark-pos-ex))                                          ",{}]],"14":[["            (funcall do-region-func (car tmp-mark-pos) (cadr tmp-mark-pos)  )               ",{}]],"15":[["            (",{}],["if",{"fg":6,"bold":true}],[" (string= opt-type ",{}],["\"copy\"",{"fg":2}],[" ) (jump-to-register 0))                            ",{}]],"16":[["            ) ",{}],[";-----------                                                                  ",{"fg":1}]],"17":[["        (funcall do-region-func (region-beginning) (region-end) ))                          ",{}]],"18":[["    (",{}],["progn",{"fg":6,"bold":true}],["                                                                                  ",{}]],"19":[["      (or arg (setq arg 1))                                                                 ",{}]],"20":[["      (message ",{}],["\"%s line :%d\"",{"fg":2}],["  opt-type arg)                                                 ",{}]],"21":[["      (funcall do-line-func arg))))                                                         ",{}]],"22":[["                                                                                            ",{}]],"23":[[";;;###autoload                                                                              ",{"fg":1}]],"24":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["copy-region-or-whole-line",{"fg":4,"bold":true}],["(",{}],["&optional",{"fg":2}],[" arg)                                             ",{}]],"25":[["  ",{}],["\"有选择区域时：                                                                           ",{"fg":2}]],"26":[["        1:复制的内容是跨行的：复制区域所在的所有行的内容。不仅仅是区域内的内容              ",{"fg":2}]],"27":[["        2:复制的内容没有跨行：复制区域中的内内容                                            ",{"fg":2}]]},"cursor":{"x":0}}],[0.000622,{"lines":{"1":[["  (",{}],["if",{"fg":6,"bold":true}],[" ",{}],["(",{"bg":6}],["string= opt-type ",{}],["\"copy\"",{"fg":2}],[")",{"bg":6}],["                                                             ",{}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   56% L253  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":30}}],[0.030228,{"lines":{"1":[["\"",{"fg":2}],["                                                                                           ",{}]],"2":[["  (",{}],["if",{"fg":6,"bold":true}],[" ",{}],["(",{"bg":6}],["string= opt-type ",{}],["\"copy\"",{"fg":2}],[")",{"bg":6}],["                                                             ",{}]],"3":[["      (setq do-region-func 'copy-region-as-kill do-line-func  'copy-whole-line  )           ",{}]],"4":[["    (setq do-region-func 'kill-region do-line-func  'kill-whole-line  )                     ",{}]],"5":[["    )                                                                                       ",{}]],"6":[["  (",{}],["if",{"fg":6,"bold":true}],[" (and  mark-active                                                                     ",{}]],"7":[["            (not  (= (region-beginning) (region-end) ))                                     ",{}]],"8":[["            (",{}],["if",{"fg":6,"bold":true}],["  viper-mode (string= viper-current-state ",{}],["\"visual-state\"",{"fg":2}],[" ) t )               ",{}]],"9":[["            )                                                                               ",{}]],"10":[["      (",{}],["if",{"fg":6,"bold":true}],[" (string-match ",{}],["\"\\n\"",{"fg":2}],["                                                                ",{}]],"11":[["                        (buffer-substring-no-properties (region-beginning)(region-end)))    ",{}]],"12":[["          (",{}],["progn",{"fg":6,"bold":true}],["                                                                            ",{}]],"13":[["            (",{}],["if",{"fg":6,"bold":true}],[" (string= opt-type ",{}],["\"copy\"",{"fg":2}],[" ) (point-to-register 0))                           ",{}]],"14":[["            (setq tmp-mark-pos  (get-mark-pos-ex))                                          ",{}]],"15":[["            (funcall do-region-func (car tmp-mark-pos) (cadr tmp-mark-pos)  )               ",{}]],"16":[["            (",{}],["if",{"fg":6,"bold":true}],[" (string= opt-type ",{}],["\"copy\"",{"fg":2}],[" ) (jump-to-register 0))                            ",{}]],"17":[["            ) ",{}],[";-----------                                                                  ",{"fg":1}]],"18":[["        (funcall do-region-func (region-beginning) (region-end) ))                          ",{}]],"19":[["    (",{}],["progn",{"fg":6,"bold":true}],["                                                                                  ",{}]],"20":[["      (or arg (setq arg 1))                                                                 ",{}]],"21":[["      (message ",{}],["\"%s line :%d\"",{"fg":2}],["  opt-type arg)                                                 ",{}]],"22":[["      (funcall do-line-func arg))))                                                         ",{}]],"23":[["                                                                                            ",{}]],"24":[[";;;###autoload                                                                              ",{"fg":1}]],"25":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["copy-region-or-whole-line",{"fg":4,"bold":true}],["(",{}],["&optional",{"fg":2}],[" arg)                                             ",{}]],"26":[["  ",{}],["\"有选择区域时：                                                                           ",{"fg":2}]],"27":[["        1:复制的内容是跨行的：复制区域所在的所有行的内容。不仅仅是区域内的内容              ",{"fg":2}]]},"cursor":{"x":1,"visible":false}}],[0.000758,{"lines":{"2":[["  (",{}],["if",{"fg":6,"bold":true}],[" (string= opt-type ",{}],["\"copy\"",{"fg":2}],[")                                                             ",{}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   56% L252  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":0,"visible":true}}],[0.030825,{"lines":{"1":[["                                                                                            ",{}]],"2":[["\"",{"fg":2}],["                                                                                           ",{}]],"3":[["  (",{}],["if",{"fg":6,"bold":true}],[" (string= opt-type ",{}],["\"copy\"",{"fg":2}],[")                                                             ",{}]],"4":[["      (setq do-region-func 'copy-region-as-kill do-line-func  'copy-whole-line  )           ",{}]],"5":[["    (setq do-region-func 'kill-region do-line-func  'kill-whole-line  )                     ",{}]],"6":[["    )                                                                                       ",{}]],"7":[["  (",{}],["if",{"fg":6,"bold":true}],[" (and  mark-active                                                                     ",{}]],"8":[["            (not  (= (region-beginning) (region-end) ))                                     ",{}]],"9":[["            (",{}],["if",{"fg":6,"bold":true}],["  viper-mode (string= viper-current-state ",{}],["\"visual-state\"",{"fg":2}],[" ) t )               ",{}]],"10":[["            )                                                                               ",{}]],"11":[["      (",{}],["if",{"fg":6,"bold":true}],[" (string-match ",{}],["\"\\n\"",{"fg":2}],["                                                                ",{}]],"12":[["                        (buffer-substring-no-properties (region-beginning)(region-end)))    ",{}]],"13":[["          (",{}],["progn",{"fg":6,"bold":true}],["                                                                            ",{}]],"14":[["            (",{}],["if",{"fg":6,"bold":true}],[" (string= opt-type ",{}],["\"copy\"",{"fg":2}],[" ) (point-to-register 0))                           ",{}]],"15":[["            (setq tmp-mark-pos  (get-mark-pos-ex))                                          ",{}]],"16":[["            (funcall do-region-func (car tmp-mark-pos) (cadr tmp-mark-pos)  )               ",{}]],"17":[["            (",{}],["if",{"fg":6,"bold":true}],[" (string= opt-type ",{}],["\"copy\"",{"fg":2}],[" ) (jump-to-register 0))                            ",{}]],"18":[["            ) ",{}],[";-----------                                                                  ",{"fg":1}]],"19":[["        (funcall do-region-func (region-beginning) (region-end) ))                          ",{}]],"20":[["    (",{}],["progn",{"fg":6,"bold":true}],["                                                                                  ",{}]],"21":[["      (or arg (setq arg 1))                                                                 ",{}]],"22":[["      (message ",{}],["\"%s line :%d\"",{"fg":2}],["  opt-type arg)                                                 ",{}]],"23":[["      (funcall do-line-func arg))))                                                         ",{}]],"24":[["                                                                                            ",{}]],"25":[[";;;###autoload                                                                              ",{"fg":1}]],"26":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["copy-region-or-whole-line",{"fg":4,"bold":true}],["(",{}],["&optional",{"fg":2}],[" arg)                                             ",{}]],"27":[["  ",{}],["\"有选择区域时：                                                                           ",{"fg":2}]]}}],[5.6e-05,{"lines":{"1":[["  ",{}],["\"提供高级的复制 剪切功能                                                                  ",{"fg":2}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   56% L251  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":24}}],[0.03005,{"lines":{"1":[["                                                                                            ",{}]],"2":[["  ",{}],["\"提供高级的复制 剪切功能                                                                  ",{"fg":2}]],"3":[["\"",{"fg":2}],["                                                                                           ",{}]],"4":[["  (",{}],["if",{"fg":6,"bold":true}],[" (string= opt-type ",{}],["\"copy\"",{"fg":2}],[")                                                             ",{}]],"5":[["      (setq do-region-func 'copy-region-as-kill do-line-func  'copy-whole-line  )           ",{}]],"6":[["    (setq do-region-func 'kill-region do-line-func  'kill-whole-line  )                     ",{}]],"7":[["    )                                                                                       ",{}]],"8":[["  (",{}],["if",{"fg":6,"bold":true}],[" (and  mark-active                                                                     ",{}]],"9":[["            (not  (= (region-beginning) (region-end) ))                                     ",{}]],"10":[["            (",{}],["if",{"fg":6,"bold":true}],["  viper-mode (string= viper-current-state ",{}],["\"visual-state\"",{"fg":2}],[" ) t )               ",{}]],"11":[["            )                                                                               ",{}]],"12":[["      (",{}],["if",{"fg":6,"bold":true}],[" (string-match ",{}],["\"\\n\"",{"fg":2}],["                                                                ",{}]],"13":[["                        (buffer-substring-no-properties (region-beginning)(region-end)))    ",{}]],"14":[["          (",{}],["progn",{"fg":6,"bold":true}],["                                                                            ",{}]],"15":[["            (",{}],["if",{"fg":6,"bold":true}],[" (string= opt-type ",{}],["\"copy\"",{"fg":2}],[" ) (point-to-register 0))                           ",{}]],"16":[["            (setq tmp-mark-pos  (get-mark-pos-ex))                                          ",{}]],"17":[["            (funcall do-region-func (car tmp-mark-pos) (cadr tmp-mark-pos)  )               ",{}]],"18":[["            (",{}],["if",{"fg":6,"bold":true}],[" (string= opt-type ",{}],["\"copy\"",{"fg":2}],[" ) (jump-to-register 0))                            ",{}]],"19":[["            ) ",{}],[";-----------                                                                  ",{"fg":1}]],"20":[["        (funcall do-region-func (region-beginning) (region-end) ))                          ",{}]],"21":[["    (",{}],["progn",{"fg":6,"bold":true}],["                                                                                  ",{}]],"22":[["      (or arg (setq arg 1))                                                                 ",{}]],"23":[["      (message ",{}],["\"%s line :%d\"",{"fg":2}],["  opt-type arg)                                                 ",{}]],"24":[["      (funcall do-line-func arg))))                                                         ",{}]],"25":[["                                                                                            ",{}]],"26":[[";;;###autoload                                                                              ",{"fg":1}]],"27":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["copy-region-or-whole-line",{"fg":4,"bold":true}],["(",{}],["&optional",{"fg":2}],[" arg)                                             ",{}]]},"cursor":{"x":0}}],[7.9e-05,{"lines":{"1":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["opt-region-or-whole-line",{"fg":4,"bold":true}],["(opt-type   arg)                                             ",{}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   55% L250  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":32}}],[0.031542,{"lines":{"1":[["                                                                                            ",{}]],"2":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["opt-region-or-whole-line",{"fg":4,"bold":true}],["(opt-type   arg)                                             ",{}]],"3":[["  ",{}],["\"提供高级的复制 剪切功能                                                                  ",{"fg":2}]],"4":[["\"",{"fg":2}],["                                                                                           ",{}]],"5":[["  (",{}],["if",{"fg":6,"bold":true}],[" (string= opt-type ",{}],["\"copy\"",{"fg":2}],[")                                                             ",{}]],"6":[["      (setq do-region-func 'copy-region-as-kill do-line-func  'copy-whole-line  )           ",{}]],"7":[["    (setq do-region-func 'kill-region do-line-func  'kill-whole-line  )                     ",{}]],"8":[["    )                                                                                       ",{}]],"9":[["  (",{}],["if",{"fg":6,"bold":true}],[" (and  mark-active                                                                     ",{}]],"10":[["            (not  (= (region-beginning) (region-end) ))                                     ",{}]],"11":[["            (",{}],["if",{"fg":6,"bold":true}],["  viper-mode (string= viper-current-state ",{}],["\"visual-state\"",{"fg":2}],[" ) t )               ",{}]],"12":[["            )                                                                               ",{}]],"13":[["      (",{}],["if",{"fg":6,"bold":true}],[" (string-match ",{}],["\"\\n\"",{"fg":2}],["                                                                ",{}]],"14":[["                        (buffer-substring-no-properties (region-beginning)(region-end)))    ",{}]],"15":[["          (",{}],["progn",{"fg":6,"bold":true}],["                                                                            ",{}]],"16":[["            (",{}],["if",{"fg":6,"bold":true}],[" (string= opt-type ",{}],["\"copy\"",{"fg":2}],[" ) (point-to-register 0))                           ",{}]],"17":[["            (setq tmp-mark-pos  (get-mark-pos-ex))                                          ",{}]],"18":[["            (funcall do-region-func (car tmp-mark-pos) (cadr tmp-mark-pos)  )               ",{}]],"19":[["            (",{}],["if",{"fg":6,"bold":true}],[" (string= opt-type ",{}],["\"copy\"",{"fg":2}],[" ) (jump-to-register 0))                            ",{}]],"20":[["            ) ",{}],[";-----------                                                                  ",{"fg":1}]],"21":[["        (funcall do-region-func (region-beginning) (region-end) ))                          ",{}]],"22":[["    (",{}],["progn",{"fg":6,"bold":true}],["                                                                                  ",{}]],"23":[["      (or arg (setq arg 1))                                                                 ",{}]],"24":[["      (message ",{}],["\"%s line :%d\"",{"fg":2}],["  opt-type arg)                                                 ",{}]],"25":[["      (funcall do-line-func arg))))                                                         ",{}]],"26":[["                                                                                            ",{}]],"27":[[";;;###autoload                                                                              ",{"fg":1}]]},"cursor":{"x":0}}],[5.5e-05,{"lines":{"1":[[";;                                                                                          ",{"fg":1}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   55% L249  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":1}}],[0.028686,{"lines":{"1":[["                                                                                            ",{}]],"2":[[";;                                                                                          ",{"fg":1}]],"3":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["opt-region-or-whole-line",{"fg":4,"bold":true}],["(opt-type   arg)                                             ",{}]],"4":[["  ",{}],["\"提供高级的复制 剪切功能                                                                  ",{"fg":2}]],"5":[["\"",{"fg":2}],["                                                                                           ",{}]],"6":[["  (",{}],["if",{"fg":6,"bold":true}],[" (string= opt-type ",{}],["\"copy\"",{"fg":2}],[")                                                             ",{}]],"7":[["      (setq do-region-func 'copy-region-as-kill do-line-func  'copy-whole-line  )           ",{}]],"8":[["    (setq do-region-func 'kill-region do-line-func  'kill-whole-line  )                     ",{}]],"9":[["    )                                                                                       ",{}]],"10":[["  (",{}],["if",{"fg":6,"bold":true}],[" (and  mark-active                                                                     ",{}]],"11":[["            (not  (= (region-beginning) (region-end) ))                                     ",{}]],"12":[["            (",{}],["if",{"fg":6,"bold":true}],["  viper-mode (string= viper-current-state ",{}],["\"visual-state\"",{"fg":2}],[" ) t )               ",{}]],"13":[["            )                                                                               ",{}]],"14":[["      (",{}],["if",{"fg":6,"bold":true}],[" (string-match ",{}],["\"\\n\"",{"fg":2}],["                                                                ",{}]],"15":[["                        (buffer-substring-no-properties (region-beginning)(region-end)))    ",{}]],"16":[["          (",{}],["progn",{"fg":6,"bold":true}],["                                                                            ",{}]],"17":[["            (",{}],["if",{"fg":6,"bold":true}],[" (string= opt-type ",{}],["\"copy\"",{"fg":2}],[" ) (point-to-register 0))                           ",{}]],"18":[["            (setq tmp-mark-pos  (get-mark-pos-ex))                                          ",{}]],"19":[["            (funcall do-region-func (car tmp-mark-pos) (cadr tmp-mark-pos)  )               ",{}]],"20":[["            (",{}],["if",{"fg":6,"bold":true}],[" (string= opt-type ",{}],["\"copy\"",{"fg":2}],[" ) (jump-to-register 0))                            ",{}]],"21":[["            ) ",{}],[";-----------                                                                  ",{"fg":1}]],"22":[["        (funcall do-region-func (region-beginning) (region-end) ))                          ",{}]],"23":[["    (",{}],["progn",{"fg":6,"bold":true}],["                                                                                  ",{}]],"24":[["      (or arg (setq arg 1))                                                                 ",{}]],"25":[["      (message ",{}],["\"%s line :%d\"",{"fg":2}],["  opt-type arg)                                                 ",{}]],"26":[["      (funcall do-line-func arg))))                                                         ",{}]]},"cursor":{"x":0}}],[5.3e-05,{"lines":{"1":[[";;功能                                                                                      ",{"fg":1}]],"27":[["                                                                                            ",{}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   55% L248  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":4}}],[0.029856,{"lines":{"1":[["                                                                                            ",{}]],"2":[[";;功能                                                                                      ",{"fg":1}]],"3":[[";;                                                                                          ",{"fg":1}]],"4":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["opt-region-or-whole-line",{"fg":4,"bold":true}],["(opt-type   arg)                                             ",{}]],"5":[["  ",{}],["\"提供高级的复制 剪切功能                                                                  ",{"fg":2}]],"6":[["\"",{"fg":2}],["                                                                                           ",{}]],"7":[["  (",{}],["if",{"fg":6,"bold":true}],[" (string= opt-type ",{}],["\"copy\"",{"fg":2}],[")                                                             ",{}]],"8":[["      (setq do-region-func 'copy-region-as-kill do-line-func  'copy-whole-line  )           ",{}]],"9":[["    (setq do-region-func 'kill-region do-line-func  'kill-whole-line  )                     ",{}]],"10":[["    )                                                                                       ",{}]],"11":[["  (",{}],["if",{"fg":6,"bold":true}],[" (and  mark-active                                                                     ",{}]],"12":[["            (not  (= (region-beginning) (region-end) ))                                     ",{}]],"13":[["            (",{}],["if",{"fg":6,"bold":true}],["  viper-mode (string= viper-current-state ",{}],["\"visual-state\"",{"fg":2}],[" ) t )               ",{}]],"14":[["            )                                                                               ",{}]],"15":[["      (",{}],["if",{"fg":6,"bold":true}],[" (string-match ",{}],["\"\\n\"",{"fg":2}],["                                                                ",{}]],"16":[["                        (buffer-substring-no-properties (region-beginning)(region-end)))    ",{}]],"17":[["          (",{}],["progn",{"fg":6,"bold":true}],["                                                                            ",{}]],"18":[["            (",{}],["if",{"fg":6,"bold":true}],[" (string= opt-type ",{}],["\"copy\"",{"fg":2}],[" ) (point-to-register 0))                           ",{}]],"19":[["            (setq tmp-mark-pos  (get-mark-pos-ex))                                          ",{}]],"20":[["            (funcall do-region-func (car tmp-mark-pos) (cadr tmp-mark-pos)  )               ",{}]],"21":[["            (",{}],["if",{"fg":6,"bold":true}],[" (string= opt-type ",{}],["\"copy\"",{"fg":2}],[" ) (jump-to-register 0))                            ",{}]],"22":[["            ) ",{}],[";-----------                                                                  ",{"fg":1}]],"23":[["        (funcall do-region-func (region-beginning) (region-end) ))                          ",{}]],"24":[["    (",{}],["progn",{"fg":6,"bold":true}],["                                                                                  ",{}]],"25":[["      (or arg (setq arg 1))                                                                 ",{}]],"26":[["      (message ",{}],["\"%s line :%d\"",{"fg":2}],["  opt-type arg)                                                 ",{}]],"27":[["      (funcall do-line-func arg))))                                                         ",{}]]},"cursor":{"x":0}}],[8.2e-05,{"lines":{"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   55% L247  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]}}],[0.03061,{"lines":{"1":[["  (push-mark (cadr tmp-mark-pos) nil t ))                                                   ",{}]],"2":[["                                                                                            ",{}]],"3":[[";;功能                                                                                      ",{"fg":1}]],"4":[[";;                                                                                          ",{"fg":1}]],"5":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["opt-region-or-whole-line",{"fg":4,"bold":true}],["(opt-type   arg)                                             ",{}]],"6":[["  ",{}],["\"提供高级的复制 剪切功能                                                                  ",{"fg":2}]],"7":[["\"",{"fg":2}],["                                                                                           ",{}]],"8":[["  (",{}],["if",{"fg":6,"bold":true}],[" (string= opt-type ",{}],["\"copy\"",{"fg":2}],[")                                                             ",{}]],"9":[["      (setq do-region-func 'copy-region-as-kill do-line-func  'copy-whole-line  )           ",{}]],"10":[["    (setq do-region-func 'kill-region do-line-func  'kill-whole-line  )                     ",{}]],"11":[["    )                                                                                       ",{}]],"12":[["  (",{}],["if",{"fg":6,"bold":true}],[" (and  mark-active                                                                     ",{}]],"13":[["            (not  (= (region-beginning) (region-end) ))                                     ",{}]],"14":[["            (",{}],["if",{"fg":6,"bold":true}],["  viper-mode (string= viper-current-state ",{}],["\"visual-state\"",{"fg":2}],[" ) t )               ",{}]],"15":[["            )                                                                               ",{}]],"16":[["      (",{}],["if",{"fg":6,"bold":true}],[" (string-match ",{}],["\"\\n\"",{"fg":2}],["                                                                ",{}]],"17":[["                        (buffer-substring-no-properties (region-beginning)(region-end)))    ",{}]],"18":[["          (",{}],["progn",{"fg":6,"bold":true}],["                                                                            ",{}]],"19":[["            (",{}],["if",{"fg":6,"bold":true}],[" (string= opt-type ",{}],["\"copy\"",{"fg":2}],[" ) (point-to-register 0))                           ",{}]],"20":[["            (setq tmp-mark-pos  (get-mark-pos-ex))                                          ",{}]],"21":[["            (funcall do-region-func (car tmp-mark-pos) (cadr tmp-mark-pos)  )               ",{}]],"22":[["            (",{}],["if",{"fg":6,"bold":true}],[" (string= opt-type ",{}],["\"copy\"",{"fg":2}],[" ) (jump-to-register 0))                            ",{}]],"23":[["            ) ",{}],[";-----------                                                                  ",{"fg":1}]],"24":[["        (funcall do-region-func (region-beginning) (region-end) ))                          ",{}]],"25":[["    (",{}],["progn",{"fg":6,"bold":true}],["                                                                                  ",{}]],"26":[["      (or arg (setq arg 1))                                                                 ",{}]],"27":[["      (message ",{}],["\"%s line :%d\"",{"fg":2}],["  opt-type arg)                                                 ",{}]]},"cursor":{"y":2,"visible":false}}],[8.4e-05,{"lines":{"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   55% L246  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":32,"y":1,"visible":true}}],[0.030316,{"lines":{"1":[["                                                                                            ",{}]],"2":[["  (push-mark (cadr tmp-mark-pos) nil t ))                                                   ",{}]],"3":[["                                                                                            ",{}]],"4":[[";;功能                                                                                      ",{"fg":1}]],"5":[[";;                                                                                          ",{"fg":1}]],"6":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["opt-region-or-whole-line",{"fg":4,"bold":true}],["(opt-type   arg)                                             ",{}]],"7":[["  ",{}],["\"提供高级的复制 剪切功能                                                                  ",{"fg":2}]],"8":[["\"",{"fg":2}],["                                                                                           ",{}]],"9":[["  (",{}],["if",{"fg":6,"bold":true}],[" (string= opt-type ",{}],["\"copy\"",{"fg":2}],[")                                                             ",{}]],"10":[["      (setq do-region-func 'copy-region-as-kill do-line-func  'copy-whole-line  )           ",{}]],"11":[["    (setq do-region-func 'kill-region do-line-func  'kill-whole-line  )                     ",{}]],"12":[["    )                                                                                       ",{}]],"13":[["  (",{}],["if",{"fg":6,"bold":true}],[" (and  mark-active                                                                     ",{}]],"14":[["            (not  (= (region-beginning) (region-end) ))                                     ",{}]],"15":[["            (",{}],["if",{"fg":6,"bold":true}],["  viper-mode (string= viper-current-state ",{}],["\"visual-state\"",{"fg":2}],[" ) t )               ",{}]],"16":[["            )                                                                               ",{}]],"17":[["      (",{}],["if",{"fg":6,"bold":true}],[" (string-match ",{}],["\"\\n\"",{"fg":2}],["                                                                ",{}]],"18":[["                        (buffer-substring-no-properties (region-beginning)(region-end)))    ",{}]],"19":[["          (",{}],["progn",{"fg":6,"bold":true}],["                                                                            ",{}]],"20":[["            (",{}],["if",{"fg":6,"bold":true}],[" (string= opt-type ",{}],["\"copy\"",{"fg":2}],[" ) (point-to-register 0))                           ",{}]],"21":[["            (setq tmp-mark-pos  (get-mark-pos-ex))                                          ",{}]],"22":[["            (funcall do-region-func (car tmp-mark-pos) (cadr tmp-mark-pos)  )               ",{}]],"23":[["            (",{}],["if",{"fg":6,"bold":true}],[" (string= opt-type ",{}],["\"copy\"",{"fg":2}],[" ) (jump-to-register 0))                            ",{}]],"24":[["            ) ",{}],[";-----------                                                                  ",{"fg":1}]],"25":[["        (funcall do-region-func (region-beginning) (region-end) ))                          ",{}]],"26":[["    (",{}],["progn",{"fg":6,"bold":true}],["                                                                                  ",{}]],"27":[["      (or arg (setq arg 1))                                                                 ",{}]]},"cursor":{"x":0}}],[0.000264,{"lines":{"1":[["  (forward-char (- (car tmp-mark-pos) (point) ))                                            ",{}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   55% L245  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":32}}],[0.029248,{"lines":{"1":[["  (setq tmp-mark-pos  (get-mark-pos-ex))                                                    ",{}]],"2":[["  (forward-char (- (car tmp-mark-pos) (point) ))                                            ",{}]],"3":[["  (push-mark (cadr tmp-mark-pos) nil t ))                                                   ",{}]],"4":[["                                                                                            ",{}]],"5":[[";;功能                                                                                      ",{"fg":1}]],"6":[[";;                                                                                          ",{"fg":1}]],"7":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["opt-region-or-whole-line",{"fg":4,"bold":true}],["(opt-type   arg)                                             ",{}]],"8":[["  ",{}],["\"提供高级的复制 剪切功能                                                                  ",{"fg":2}]],"9":[["\"",{"fg":2}],["                                                                                           ",{}]],"10":[["  (",{}],["if",{"fg":6,"bold":true}],[" (string= opt-type ",{}],["\"copy\"",{"fg":2}],[")                                                             ",{}]],"11":[["      (setq do-region-func 'copy-region-as-kill do-line-func  'copy-whole-line  )           ",{}]],"12":[["    (setq do-region-func 'kill-region do-line-func  'kill-whole-line  )                     ",{}]],"13":[["    )                                                                                       ",{}]],"14":[["  (",{}],["if",{"fg":6,"bold":true}],[" (and  mark-active                                                                     ",{}]],"15":[["            (not  (= (region-beginning) (region-end) ))                                     ",{}]],"16":[["            (",{}],["if",{"fg":6,"bold":true}],["  viper-mode (string= viper-current-state ",{}],["\"visual-state\"",{"fg":2}],[" ) t )               ",{}]],"17":[["            )                                                                               ",{}]],"18":[["      (",{}],["if",{"fg":6,"bold":true}],[" (string-match ",{}],["\"\\n\"",{"fg":2}],["                                                                ",{}]],"19":[["                        (buffer-substring-no-properties (region-beginning)(region-end)))    ",{}]],"20":[["          (",{}],["progn",{"fg":6,"bold":true}],["                                                                            ",{}]],"21":[["            (",{}],["if",{"fg":6,"bold":true}],[" (string= opt-type ",{}],["\"copy\"",{"fg":2}],[" ) (point-to-register 0))                           ",{}]],"22":[["            (setq tmp-mark-pos  (get-mark-pos-ex))                                          ",{}]],"23":[["            (funcall do-region-func (car tmp-mark-pos) (cadr tmp-mark-pos)  )               ",{}]],"24":[["            (",{}],["if",{"fg":6,"bold":true}],[" (string= opt-type ",{}],["\"copy\"",{"fg":2}],[" ) (jump-to-register 0))                            ",{}]],"25":[["            ) ",{}],[";-----------                                                                  ",{"fg":1}]],"26":[["        (funcall do-region-func (region-beginning) (region-end) ))                          ",{}]],"27":[["    (",{}],["progn",{"fg":6,"bold":true}],["                                                                                  ",{}]]},"cursor":{"x":40,"visible":false}}],[8.6e-05,{"lines":{"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   54% L244  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":32,"visible":true}}],[0.029856,{"lines":{"1":[["                                                                                            ",{}]],"2":[["  (setq tmp-mark-pos  (get-mark-pos-ex))                                                    ",{}]],"3":[["  (forward-char (- (car tmp-mark-pos) (point) ))                                            ",{}]],"4":[["  (push-mark (cadr tmp-mark-pos) nil t ))                                                   ",{}]],"5":[["                                                                                            ",{}]],"6":[[";;功能                                                                                      ",{"fg":1}]],"7":[[";;                                                                                          ",{"fg":1}]],"8":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["opt-region-or-whole-line",{"fg":4,"bold":true}],["(opt-type   arg)                                             ",{}]],"9":[["  ",{}],["\"提供高级的复制 剪切功能                                                                  ",{"fg":2}]],"10":[["\"",{"fg":2}],["                                                                                           ",{}]],"11":[["  (",{}],["if",{"fg":6,"bold":true}],[" (string= opt-type ",{}],["\"copy\"",{"fg":2}],[")                                                             ",{}]],"12":[["      (setq do-region-func 'copy-region-as-kill do-line-func  'copy-whole-line  )           ",{}]],"13":[["    (setq do-region-func 'kill-region do-line-func  'kill-whole-line  )                     ",{}]],"14":[["    )                                                                                       ",{}]],"15":[["  (",{}],["if",{"fg":6,"bold":true}],[" (and  mark-active                                                                     ",{}]],"16":[["            (not  (= (region-beginning) (region-end) ))                                     ",{}]],"17":[["            (",{}],["if",{"fg":6,"bold":true}],["  viper-mode (string= viper-current-state ",{}],["\"visual-state\"",{"fg":2}],[" ) t )               ",{}]],"18":[["            )                                                                               ",{}]],"19":[["      (",{}],["if",{"fg":6,"bold":true}],[" (string-match ",{}],["\"\\n\"",{"fg":2}],["                                                                ",{}]],"20":[["                        (buffer-substring-no-properties (region-beginning)(region-end)))    ",{}]],"21":[["          (",{}],["progn",{"fg":6,"bold":true}],["                                                                            ",{}]],"22":[["            (",{}],["if",{"fg":6,"bold":true}],[" (string= opt-type ",{}],["\"copy\"",{"fg":2}],[" ) (point-to-register 0))                           ",{}]],"23":[["            (setq tmp-mark-pos  (get-mark-pos-ex))                                          ",{}]],"24":[["            (funcall do-region-func (car tmp-mark-pos) (cadr tmp-mark-pos)  )               ",{}]],"25":[["            (",{}],["if",{"fg":6,"bold":true}],[" (string= opt-type ",{}],["\"copy\"",{"fg":2}],[" ) (jump-to-register 0))                            ",{}]],"26":[["            ) ",{}],[";-----------                                                                  ",{"fg":1}]],"27":[["        (funcall do-region-func (region-beginning) (region-end) ))                          ",{}]]},"cursor":{"x":0}}],[0.000706,{"lines":{"1":[["  ",{}],["(",{"bg":6}],["interactive ",{}],["\"P\"",{"fg":2}],[")",{"bg":6}],["                                                                         ",{}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   54% L243  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":18}}],[0.031042,{"lines":{"1":[["                                                                                            ",{}]],"2":[["  ",{}],["(",{"bg":6}],["interactive ",{}],["\"P\"",{"fg":2}],[")",{"bg":6}],["                                                                         ",{}]],"3":[["  (setq tmp-mark-pos  (get-mark-pos-ex))                                                    ",{}]],"4":[["  (forward-char (- (car tmp-mark-pos) (point) ))                                            ",{}]],"5":[["  (push-mark (cadr tmp-mark-pos) nil t ))                                                   ",{}]],"6":[["                                                                                            ",{}]],"7":[[";;功能                                                                                      ",{"fg":1}]],"8":[[";;                                                                                          ",{"fg":1}]],"9":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["opt-region-or-whole-line",{"fg":4,"bold":true}],["(opt-type   arg)                                             ",{}]],"10":[["  ",{}],["\"提供高级的复制 剪切功能                                                                  ",{"fg":2}]],"11":[["\"",{"fg":2}],["                                                                                           ",{}]],"12":[["  (",{}],["if",{"fg":6,"bold":true}],[" (string= opt-type ",{}],["\"copy\"",{"fg":2}],[")                                                             ",{}]],"13":[["      (setq do-region-func 'copy-region-as-kill do-line-func  'copy-whole-line  )           ",{}]],"14":[["    (setq do-region-func 'kill-region do-line-func  'kill-whole-line  )                     ",{}]],"15":[["    )                                                                                       ",{}]],"16":[["  (",{}],["if",{"fg":6,"bold":true}],[" (and  mark-active                                                                     ",{}]],"17":[["            (not  (= (region-beginning) (region-end) ))                                     ",{}]],"18":[["            (",{}],["if",{"fg":6,"bold":true}],["  viper-mode (string= viper-current-state ",{}],["\"visual-state\"",{"fg":2}],[" ) t )               ",{}]],"19":[["            )                                                                               ",{}]],"20":[["      (",{}],["if",{"fg":6,"bold":true}],[" (string-match ",{}],["\"\\n\"",{"fg":2}],["                                                                ",{}]],"21":[["                        (buffer-substring-no-properties (region-beginning)(region-end)))    ",{}]],"22":[["          (",{}],["progn",{"fg":6,"bold":true}],["                                                                            ",{}]],"23":[["            (",{}],["if",{"fg":6,"bold":true}],[" (string= opt-type ",{}],["\"copy\"",{"fg":2}],[" ) (point-to-register 0))                           ",{}]],"24":[["            (setq tmp-mark-pos  (get-mark-pos-ex))                                          ",{}]],"25":[["            (funcall do-region-func (car tmp-mark-pos) (cadr tmp-mark-pos)  )               ",{}]],"26":[["            (",{}],["if",{"fg":6,"bold":true}],[" (string= opt-type ",{}],["\"copy\"",{"fg":2}],[" ) (jump-to-register 0))                            ",{}]],"27":[["            ) ",{}],[";-----------                                                                  ",{"fg":1}]]},"cursor":{"x":0}}],[0.000817,{"lines":{"1":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["mark-region-ex",{"fg":4,"bold":true}],["(",{}],["&optional",{"fg":2}],[" arg)                                                        ",{}]],"2":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   54% L242  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":32}}],[0.030356,{"lines":{"1":[[";;;###autoload                                                                              ",{"fg":1}]],"2":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["mark-region-ex",{"fg":4,"bold":true}],["(",{}],["&optional",{"fg":2}],[" arg)                                                        ",{}]],"3":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"4":[["  (setq tmp-mark-pos  (get-mark-pos-ex))                                                    ",{}]],"5":[["  (forward-char (- (car tmp-mark-pos) (point) ))                                            ",{}]],"6":[["  (push-mark (cadr tmp-mark-pos) nil t ))                                                   ",{}]],"7":[["                                                                                            ",{}]],"8":[[";;功能                                                                                      ",{"fg":1}]],"9":[[";;                                                                                          ",{"fg":1}]],"10":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["opt-region-or-whole-line",{"fg":4,"bold":true}],["(opt-type   arg)                                             ",{}]],"11":[["  ",{}],["\"提供高级的复制 剪切功能                                                                  ",{"fg":2}]],"12":[["\"",{"fg":2}],["                                                                                           ",{}]],"13":[["  (",{}],["if",{"fg":6,"bold":true}],[" (string= opt-type ",{}],["\"copy\"",{"fg":2}],[")                                                             ",{}]],"14":[["      (setq do-region-func 'copy-region-as-kill do-line-func  'copy-whole-line  )           ",{}]],"15":[["    (setq do-region-func 'kill-region do-line-func  'kill-whole-line  )                     ",{}]],"16":[["    )                                                                                       ",{}]],"17":[["  (",{}],["if",{"fg":6,"bold":true}],[" (and  mark-active                                                                     ",{}]],"18":[["            (not  (= (region-beginning) (region-end) ))                                     ",{}]],"19":[["            (",{}],["if",{"fg":6,"bold":true}],["  viper-mode (string= viper-current-state ",{}],["\"visual-state\"",{"fg":2}],[" ) t )               ",{}]],"20":[["            )                                                                               ",{}]],"21":[["      (",{}],["if",{"fg":6,"bold":true}],[" (string-match ",{}],["\"\\n\"",{"fg":2}],["                                                                ",{}]],"22":[["                        (buffer-substring-no-properties (region-beginning)(region-end)))    ",{}]],"23":[["          (",{}],["progn",{"fg":6,"bold":true}],["                                                                            ",{}]],"24":[["            (",{}],["if",{"fg":6,"bold":true}],[" (string= opt-type ",{}],["\"copy\"",{"fg":2}],[" ) (point-to-register 0))                           ",{}]],"25":[["            (setq tmp-mark-pos  (get-mark-pos-ex))                                          ",{}]],"26":[["            (funcall do-region-func (car tmp-mark-pos) (cadr tmp-mark-pos)  )               ",{}]],"27":[["            (",{}],["if",{"fg":6,"bold":true}],[" (string= opt-type ",{}],["\"copy\"",{"fg":2}],[" ) (jump-to-register 0))                            ",{}]]},"cursor":{"x":0,"visible":false}}],[8.6e-05,{"lines":{"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   54% L241  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":13,"visible":true}}],[0.029574,{"lines":{"1":[["                                                                                            ",{}]],"2":[[";;;###autoload                                                                              ",{"fg":1}]],"3":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["mark-region-ex",{"fg":4,"bold":true}],["(",{}],["&optional",{"fg":2}],[" arg)                                                        ",{}]],"4":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"5":[["  (setq tmp-mark-pos  (get-mark-pos-ex))                                                    ",{}]],"6":[["  (forward-char (- (car tmp-mark-pos) (point) ))                                            ",{}]],"7":[["  (push-mark (cadr tmp-mark-pos) nil t ))                                                   ",{}]],"8":[["                                                                                            ",{}]],"9":[[";;功能                                                                                      ",{"fg":1}]],"10":[[";;                                                                                          ",{"fg":1}]],"11":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["opt-region-or-whole-line",{"fg":4,"bold":true}],["(opt-type   arg)                                             ",{}]],"12":[["  ",{}],["\"提供高级的复制 剪切功能                                                                  ",{"fg":2}]],"13":[["\"",{"fg":2}],["                                                                                           ",{}]],"14":[["  (",{}],["if",{"fg":6,"bold":true}],[" (string= opt-type ",{}],["\"copy\"",{"fg":2}],[")                                                             ",{}]],"15":[["      (setq do-region-func 'copy-region-as-kill do-line-func  'copy-whole-line  )           ",{}]],"16":[["    (setq do-region-func 'kill-region do-line-func  'kill-whole-line  )                     ",{}]],"17":[["    )                                                                                       ",{}]],"18":[["  (",{}],["if",{"fg":6,"bold":true}],[" (and  mark-active                                                                     ",{}]],"19":[["            (not  (= (region-beginning) (region-end) ))                                     ",{}]],"20":[["            (",{}],["if",{"fg":6,"bold":true}],["  viper-mode (string= viper-current-state ",{}],["\"visual-state\"",{"fg":2}],[" ) t )               ",{}]],"21":[["            )                                                                               ",{}]],"22":[["      (",{}],["if",{"fg":6,"bold":true}],[" (string-match ",{}],["\"\\n\"",{"fg":2}],["                                                                ",{}]],"23":[["                        (buffer-substring-no-properties (region-beginning)(region-end)))    ",{}]],"24":[["          (",{}],["progn",{"fg":6,"bold":true}],["                                                                            ",{}]],"25":[["            (",{}],["if",{"fg":6,"bold":true}],[" (string= opt-type ",{}],["\"copy\"",{"fg":2}],[" ) (point-to-register 0))                           ",{}]],"26":[["            (setq tmp-mark-pos  (get-mark-pos-ex))                                          ",{}]],"27":[["            (funcall do-region-func (car tmp-mark-pos) (cadr tmp-mark-pos)  )               ",{}]]},"cursor":{"x":0}}],[8.3e-05,{"lines":{"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   54% L240  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]}}],[0.03211,{"lines":{"1":[["  (list start-pos end-pos ))                                                                ",{}]],"2":[["                                                                                            ",{}]],"3":[[";;;###autoload                                                                              ",{"fg":1}]],"4":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["mark-region-ex",{"fg":4,"bold":true}],["(",{}],["&optional",{"fg":2}],[" arg)                                                        ",{}]],"5":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"6":[["  (setq tmp-mark-pos  (get-mark-pos-ex))                                                    ",{}]],"7":[["  (forward-char (- (car tmp-mark-pos) (point) ))                                            ",{}]],"8":[["  (push-mark (cadr tmp-mark-pos) nil t ))                                                   ",{}]],"9":[["                                                                                            ",{}]],"10":[[";;功能                                                                                      ",{"fg":1}]],"11":[[";;                                                                                          ",{"fg":1}]],"12":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["opt-region-or-whole-line",{"fg":4,"bold":true}],["(opt-type   arg)                                             ",{}]],"13":[["  ",{}],["\"提供高级的复制 剪切功能                                                                  ",{"fg":2}]],"14":[["\"",{"fg":2}],["                                                                                           ",{}]],"15":[["  (",{}],["if",{"fg":6,"bold":true}],[" (string= opt-type ",{}],["\"copy\"",{"fg":2}],[")                                                             ",{}]],"16":[["      (setq do-region-func 'copy-region-as-kill do-line-func  'copy-whole-line  )           ",{}]],"17":[["    (setq do-region-func 'kill-region do-line-func  'kill-whole-line  )                     ",{}]],"18":[["    )                                                                                       ",{}]],"19":[["  (",{}],["if",{"fg":6,"bold":true}],[" (and  mark-active                                                                     ",{}]],"20":[["            (not  (= (region-beginning) (region-end) ))                                     ",{}]],"21":[["            (",{}],["if",{"fg":6,"bold":true}],["  viper-mode (string= viper-current-state ",{}],["\"visual-state\"",{"fg":2}],[" ) t )               ",{}]],"22":[["            )                                                                               ",{}]],"23":[["      (",{}],["if",{"fg":6,"bold":true}],[" (string-match ",{}],["\"\\n\"",{"fg":2}],["                                                                ",{}]],"24":[["                        (buffer-substring-no-properties (region-beginning)(region-end)))    ",{}]],"25":[["          (",{}],["progn",{"fg":6,"bold":true}],["                                                                            ",{}]],"26":[["            (",{}],["if",{"fg":6,"bold":true}],[" (string= opt-type ",{}],["\"copy\"",{"fg":2}],[" ) (point-to-register 0))                           ",{}]],"27":[["            (setq tmp-mark-pos  (get-mark-pos-ex))                                          ",{}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   54% L239  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":27}}],[0.001554,{"lines":{"1":[["  (list start-pos end-pos )",{}],[")",{"bg":6}],["                                                                ",{}]]}}],[0.027267,{"lines":{"1":[["                                                                                            ",{}]],"2":[["  (list start-pos end-pos )",{}],[")",{"bg":6}],["                                                                ",{}]],"3":[["                                                                                            ",{}]],"4":[[";;;###autoload                                                                              ",{"fg":1}]],"5":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["mark-region-ex",{"fg":4,"bold":true}],["(",{}],["&optional",{"fg":2}],[" arg)                                                        ",{}]],"6":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"7":[["  (setq tmp-mark-pos  (get-mark-pos-ex))                                                    ",{}]],"8":[["  (forward-char (- (car tmp-mark-pos) (point) ))                                            ",{}]],"9":[["  (push-mark (cadr tmp-mark-pos) nil t ))                                                   ",{}]],"10":[["                                                                                            ",{}]],"11":[[";;功能                                                                                      ",{"fg":1}]],"12":[[";;                                                                                          ",{"fg":1}]],"13":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["opt-region-or-whole-line",{"fg":4,"bold":true}],["(opt-type   arg)                                             ",{}]],"14":[["  ",{}],["\"提供高级的复制 剪切功能                                                                  ",{"fg":2}]],"15":[["\"",{"fg":2}],["                                                                                           ",{}]],"16":[["  (",{}],["if",{"fg":6,"bold":true}],[" (string= opt-type ",{}],["\"copy\"",{"fg":2}],[")                                                             ",{}]],"17":[["      (setq do-region-func 'copy-region-as-kill do-line-func  'copy-whole-line  )           ",{}]],"18":[["    (setq do-region-func 'kill-region do-line-func  'kill-whole-line  )                     ",{}]],"19":[["    )                                                                                       ",{}]],"20":[["  (",{}],["if",{"fg":6,"bold":true}],[" (and  mark-active                                                                     ",{}]],"21":[["            (not  (= (region-beginning) (region-end) ))                                     ",{}]],"22":[["            (",{}],["if",{"fg":6,"bold":true}],["  viper-mode (string= viper-current-state ",{}],["\"visual-state\"",{"fg":2}],[" ) t )               ",{}]],"23":[["            )                                                                               ",{}]],"24":[["      (",{}],["if",{"fg":6,"bold":true}],[" (string-match ",{}],["\"\\n\"",{"fg":2}],["                                                                ",{}]],"25":[["                        (buffer-substring-no-properties (region-beginning)(region-end)))    ",{}]],"26":[["          (",{}],["progn",{"fg":6,"bold":true}],["                                                                            ",{}]],"27":[["            (",{}],["if",{"fg":6,"bold":true}],[" (string= opt-type ",{}],["\"copy\"",{"fg":2}],[" ) (point-to-register 0))                           ",{}]]},"cursor":{"x":0}}],[0.001805,{"lines":{"1":[["  (setq  end-pos  (",{}],["if",{"fg":6,"bold":true}],[" (= (point) (point-max) ) (point-max) (+ (point) 1 ) ))                ",{}]],"2":[["  (list start-pos end-pos ))                                                                ",{}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   53% L238  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":32}}],[0.028161,{"lines":{"1":[["  (end-of-line)                                                                             ",{}]],"2":[["  (setq  end-pos  (",{}],["if",{"fg":6,"bold":true}],[" (= (point) (point-max) ) (point-max) (+ (point) 1 ) ))                ",{}]],"3":[["  (list start-pos end-pos ))                                                                ",{}]],"4":[["                                                                                            ",{}]],"5":[[";;;###autoload                                                                              ",{"fg":1}]],"6":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["mark-region-ex",{"fg":4,"bold":true}],["(",{}],["&optional",{"fg":2}],[" arg)                                                        ",{}]],"7":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"8":[["  (setq tmp-mark-pos  (get-mark-pos-ex))                                                    ",{}]],"9":[["  (forward-char (- (car tmp-mark-pos) (point) ))                                            ",{}]],"10":[["  (push-mark (cadr tmp-mark-pos) nil t ))                                                   ",{}]],"11":[["                                                                                            ",{}]],"12":[[";;功能                                                                                      ",{"fg":1}]],"13":[[";;                                                                                          ",{"fg":1}]],"14":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["opt-region-or-whole-line",{"fg":4,"bold":true}],["(opt-type   arg)                                             ",{}]],"15":[["  ",{}],["\"提供高级的复制 剪切功能                                                                  ",{"fg":2}]],"16":[["\"",{"fg":2}],["                                                                                           ",{}]],"17":[["  (",{}],["if",{"fg":6,"bold":true}],[" (string= opt-type ",{}],["\"copy\"",{"fg":2}],[")                                                             ",{}]],"18":[["      (setq do-region-func 'copy-region-as-kill do-line-func  'copy-whole-line  )           ",{}]],"19":[["    (setq do-region-func 'kill-region do-line-func  'kill-whole-line  )                     ",{}]],"20":[["    )                                                                                       ",{}]],"21":[["  (",{}],["if",{"fg":6,"bold":true}],[" (and  mark-active                                                                     ",{}]],"22":[["            (not  (= (region-beginning) (region-end) ))                                     ",{}]],"23":[["            (",{}],["if",{"fg":6,"bold":true}],["  viper-mode (string= viper-current-state ",{}],["\"visual-state\"",{"fg":2}],[" ) t )               ",{}]],"24":[["            )                                                                               ",{}]],"25":[["      (",{}],["if",{"fg":6,"bold":true}],[" (string-match ",{}],["\"\\n\"",{"fg":2}],["                                                                ",{}]],"26":[["                        (buffer-substring-no-properties (region-beginning)(region-end)))    ",{}]],"27":[["          (",{}],["progn",{"fg":6,"bold":true}],["                                                                            ",{}]]},"cursor":{"x":15,"visible":false}}],[0.000761,{"lines":{"1":[["  ",{}],["(",{"bg":6}],["end-of-line",{}],[")",{"bg":6}],["                                                                             ",{}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   53% L237  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":14,"visible":true}}],[0.029846,{"lines":{"1":[["  (forward-char (- reg-end-pos (point) ))  ",{}],[";;------                                         ",{"fg":1}]],"2":[["  ",{}],["(",{"bg":6}],["end-of-line",{}],[")",{"bg":6}],["                                                                             ",{}]],"3":[["  (setq  end-pos  (",{}],["if",{"fg":6,"bold":true}],[" (= (point) (point-max) ) (point-max) (+ (point) 1 ) ))                ",{}]],"4":[["  (list start-pos end-pos ))                                                                ",{}]],"5":[["                                                                                            ",{}]],"6":[[";;;###autoload                                                                              ",{"fg":1}]],"7":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["mark-region-ex",{"fg":4,"bold":true}],["(",{}],["&optional",{"fg":2}],[" arg)                                                        ",{}]],"8":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"9":[["  (setq tmp-mark-pos  (get-mark-pos-ex))                                                    ",{}]],"10":[["  (forward-char (- (car tmp-mark-pos) (point) ))                                            ",{}]],"11":[["  (push-mark (cadr tmp-mark-pos) nil t ))                                                   ",{}]],"12":[["                                                                                            ",{}]],"13":[[";;功能                                                                                      ",{"fg":1}]],"14":[[";;                                                                                          ",{"fg":1}]],"15":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["opt-region-or-whole-line",{"fg":4,"bold":true}],["(opt-type   arg)                                             ",{}]],"16":[["  ",{}],["\"提供高级的复制 剪切功能                                                                  ",{"fg":2}]],"17":[["\"",{"fg":2}],["                                                                                           ",{}]],"18":[["  (",{}],["if",{"fg":6,"bold":true}],[" (string= opt-type ",{}],["\"copy\"",{"fg":2}],[")                                                             ",{}]],"19":[["      (setq do-region-func 'copy-region-as-kill do-line-func  'copy-whole-line  )           ",{}]],"20":[["    (setq do-region-func 'kill-region do-line-func  'kill-whole-line  )                     ",{}]],"21":[["    )                                                                                       ",{}]],"22":[["  (",{}],["if",{"fg":6,"bold":true}],[" (and  mark-active                                                                     ",{}]],"23":[["            (not  (= (region-beginning) (region-end) ))                                     ",{}]],"24":[["            (",{}],["if",{"fg":6,"bold":true}],["  viper-mode (string= viper-current-state ",{}],["\"visual-state\"",{"fg":2}],[" ) t )               ",{}]],"25":[["            )                                                                               ",{}]],"26":[["      (",{}],["if",{"fg":6,"bold":true}],[" (string-match ",{}],["\"\\n\"",{"fg":2}],["                                                                ",{}]],"27":[["                        (buffer-substring-no-properties (region-beginning)(region-end)))    ",{}]]},"cursor":{"x":0,"visible":false}}],[0.000833,{"lines":{"2":[["  (end-of-line)                                                                             ",{}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   53% L236  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":32,"visible":true}}],[0.028931,{"lines":{"1":[["                                                                                            ",{}]],"2":[["  (forward-char (- reg-end-pos (point) ))  ",{}],[";;------                                         ",{"fg":1}]],"3":[["  (end-of-line)                                                                             ",{}]],"4":[["  (setq  end-pos  (",{}],["if",{"fg":6,"bold":true}],[" (= (point) (point-max) ) (point-max) (+ (point) 1 ) ))                ",{}]],"5":[["  (list start-pos end-pos ))                                                                ",{}]],"6":[["                                                                                            ",{}]],"7":[[";;;###autoload                                                                              ",{"fg":1}]],"8":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["mark-region-ex",{"fg":4,"bold":true}],["(",{}],["&optional",{"fg":2}],[" arg)                                                        ",{}]],"9":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"10":[["  (setq tmp-mark-pos  (get-mark-pos-ex))                                                    ",{}]],"11":[["  (forward-char (- (car tmp-mark-pos) (point) ))                                            ",{}]],"12":[["  (push-mark (cadr tmp-mark-pos) nil t ))                                                   ",{}]],"13":[["                                                                                            ",{}]],"14":[[";;功能                                                                                      ",{"fg":1}]],"15":[[";;                                                                                          ",{"fg":1}]],"16":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["opt-region-or-whole-line",{"fg":4,"bold":true}],["(opt-type   arg)                                             ",{}]],"17":[["  ",{}],["\"提供高级的复制 剪切功能                                                                  ",{"fg":2}]],"18":[["\"",{"fg":2}],["                                                                                           ",{}]],"19":[["  (",{}],["if",{"fg":6,"bold":true}],[" (string= opt-type ",{}],["\"copy\"",{"fg":2}],[")                                                             ",{}]],"20":[["      (setq do-region-func 'copy-region-as-kill do-line-func  'copy-whole-line  )           ",{}]],"21":[["    (setq do-region-func 'kill-region do-line-func  'kill-whole-line  )                     ",{}]],"22":[["    )                                                                                       ",{}]],"23":[["  (",{}],["if",{"fg":6,"bold":true}],[" (and  mark-active                                                                     ",{}]],"24":[["            (not  (= (region-beginning) (region-end) ))                                     ",{}]],"25":[["            (",{}],["if",{"fg":6,"bold":true}],["  viper-mode (string= viper-current-state ",{}],["\"visual-state\"",{"fg":2}],[" ) t )               ",{}]],"26":[["            )                                                                               ",{}]],"27":[["      (",{}],["if",{"fg":6,"bold":true}],[" (string-match ",{}],["\"\\n\"",{"fg":2}],["                                                                ",{}]]},"cursor":{"x":0}}],[0.001572,{"lines":{"1":[["  ",{}],["(",{"bg":6}],["setq  start-pos  (point)",{}],[")",{"bg":6}],["                                                                ",{}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   53% L235  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":27}}],[0.030211,{"lines":{"1":[["  (beginning-of-line)                                                                       ",{}]],"2":[["  ",{}],["(",{"bg":6}],["setq  start-pos  (point)",{}],[")",{"bg":6}],["                                                                ",{}]],"3":[["  (forward-char (- reg-end-pos (point) ))  ",{}],[";;------                                         ",{"fg":1}]],"4":[["  (end-of-line)                                                                             ",{}]],"5":[["  (setq  end-pos  (",{}],["if",{"fg":6,"bold":true}],[" (= (point) (point-max) ) (point-max) (+ (point) 1 ) ))                ",{}]],"6":[["  (list start-pos end-pos ))                                                                ",{}]],"7":[["                                                                                            ",{}]],"8":[[";;;###autoload                                                                              ",{"fg":1}]],"9":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["mark-region-ex",{"fg":4,"bold":true}],["(",{}],["&optional",{"fg":2}],[" arg)                                                        ",{}]],"10":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"11":[["  (setq tmp-mark-pos  (get-mark-pos-ex))                                                    ",{}]],"12":[["  (forward-char (- (car tmp-mark-pos) (point) ))                                            ",{}]],"13":[["  (push-mark (cadr tmp-mark-pos) nil t ))                                                   ",{}]],"14":[["                                                                                            ",{}]],"15":[[";;功能                                                                                      ",{"fg":1}]],"16":[[";;                                                                                          ",{"fg":1}]],"17":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["opt-region-or-whole-line",{"fg":4,"bold":true}],["(opt-type   arg)                                             ",{}]],"18":[["  ",{}],["\"提供高级的复制 剪切功能                                                                  ",{"fg":2}]],"19":[["\"",{"fg":2}],["                                                                                           ",{}]],"20":[["  (",{}],["if",{"fg":6,"bold":true}],[" (string= opt-type ",{}],["\"copy\"",{"fg":2}],[")                                                             ",{}]],"21":[["      (setq do-region-func 'copy-region-as-kill do-line-func  'copy-whole-line  )           ",{}]],"22":[["    (setq do-region-func 'kill-region do-line-func  'kill-whole-line  )                     ",{}]],"23":[["    )                                                                                       ",{}]],"24":[["  (",{}],["if",{"fg":6,"bold":true}],[" (and  mark-active                                                                     ",{}]],"25":[["            (not  (= (region-beginning) (region-end) ))                                     ",{}]],"26":[["            (",{}],["if",{"fg":6,"bold":true}],["  viper-mode (string= viper-current-state ",{}],["\"visual-state\"",{"fg":2}],[" ) t )               ",{}]],"27":[["            )                                                                               ",{}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   52% L234  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":20}}],[9.399999999999999e-05,{"lines":{"1":[["  ",{}],["(",{"bg":6}],["beginning-of-line",{}],[")",{"bg":6}],["                                                                       ",{}]],"2":[["  (setq  start-pos  (point))                                                                ",{}]]}}],[0.027823,{"lines":{"1":[["                                                                                            ",{}]],"2":[["  ",{}],["(",{"bg":6}],["beginning-of-line",{}],[")",{"bg":6}],["                                                                       ",{}]],"3":[["  (setq  start-pos  (point))                                                                ",{}]],"4":[["  (forward-char (- reg-end-pos (point) ))  ",{}],[";;------                                         ",{"fg":1}]],"5":[["  (end-of-line)                                                                             ",{}]],"6":[["  (setq  end-pos  (",{}],["if",{"fg":6,"bold":true}],[" (= (point) (point-max) ) (point-max) (+ (point) 1 ) ))                ",{}]],"7":[["  (list start-pos end-pos ))                                                                ",{}]],"8":[["                                                                                            ",{}]],"9":[[";;;###autoload                                                                              ",{"fg":1}]],"10":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["mark-region-ex",{"fg":4,"bold":true}],["(",{}],["&optional",{"fg":2}],[" arg)                                                        ",{}]],"11":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"12":[["  (setq tmp-mark-pos  (get-mark-pos-ex))                                                    ",{}]],"13":[["  (forward-char (- (car tmp-mark-pos) (point) ))                                            ",{}]],"14":[["  (push-mark (cadr tmp-mark-pos) nil t ))                                                   ",{}]],"15":[["                                                                                            ",{}]],"16":[[";;功能                                                                                      ",{"fg":1}]],"17":[[";;                                                                                          ",{"fg":1}]],"18":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["opt-region-or-whole-line",{"fg":4,"bold":true}],["(opt-type   arg)                                             ",{}]],"19":[["  ",{}],["\"提供高级的复制 剪切功能                                                                  ",{"fg":2}]],"20":[["\"",{"fg":2}],["                                                                                           ",{}]],"21":[["  (",{}],["if",{"fg":6,"bold":true}],[" (string= opt-type ",{}],["\"copy\"",{"fg":2}],[")                                                             ",{}]],"22":[["      (setq do-region-func 'copy-region-as-kill do-line-func  'copy-whole-line  )           ",{}]],"23":[["    (setq do-region-func 'kill-region do-line-func  'kill-whole-line  )                     ",{}]],"24":[["    )                                                                                       ",{}]],"25":[["  (",{}],["if",{"fg":6,"bold":true}],[" (and  mark-active                                                                     ",{}]],"26":[["            (not  (= (region-beginning) (region-end) ))                                     ",{}]],"27":[["            (",{}],["if",{"fg":6,"bold":true}],["  viper-mode (string= viper-current-state ",{}],["\"visual-state\"",{"fg":2}],[" ) t )               ",{}]]},"cursor":{"x":0}}],[0.00058,{"lines":{"1":[["  (forward-char (- reg-begin-pos (point) ))                                                 ",{}]],"2":[["  (beginning-of-line)                                                                       ",{}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   52% L233  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":32}}],[0.031355,{"lines":{"1":[["  (setq reg-end-pos (region-end))                                                           ",{}]],"2":[["  (forward-char (- reg-begin-pos (point) ))                                                 ",{}]],"3":[["  (beginning-of-line)                                                                       ",{}]],"4":[["  (setq  start-pos  (point))                                                                ",{}]],"5":[["  (forward-char (- reg-end-pos (point) ))  ",{}],[";;------                                         ",{"fg":1}]],"6":[["  (end-of-line)                                                                             ",{}]],"7":[["  (setq  end-pos  (",{}],["if",{"fg":6,"bold":true}],[" (= (point) (point-max) ) (point-max) (+ (point) 1 ) ))                ",{}]],"8":[["  (list start-pos end-pos ))                                                                ",{}]],"9":[["                                                                                            ",{}]],"10":[[";;;###autoload                                                                              ",{"fg":1}]],"11":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["mark-region-ex",{"fg":4,"bold":true}],["(",{}],["&optional",{"fg":2}],[" arg)                                                        ",{}]],"12":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"13":[["  (setq tmp-mark-pos  (get-mark-pos-ex))                                                    ",{}]],"14":[["  (forward-char (- (car tmp-mark-pos) (point) ))                                            ",{}]],"15":[["  (push-mark (cadr tmp-mark-pos) nil t ))                                                   ",{}]],"16":[["                                                                                            ",{}]],"17":[[";;功能                                                                                      ",{"fg":1}]],"18":[[";;                                                                                          ",{"fg":1}]],"19":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["opt-region-or-whole-line",{"fg":4,"bold":true}],["(opt-type   arg)                                             ",{}]],"20":[["  ",{}],["\"提供高级的复制 剪切功能                                                                  ",{"fg":2}]],"21":[["\"",{"fg":2}],["                                                                                           ",{}]],"22":[["  (",{}],["if",{"fg":6,"bold":true}],[" (string= opt-type ",{}],["\"copy\"",{"fg":2}],[")                                                             ",{}]],"23":[["      (setq do-region-func 'copy-region-as-kill do-line-func  'copy-whole-line  )           ",{}]],"24":[["    (setq do-region-func 'kill-region do-line-func  'kill-whole-line  )                     ",{}]],"25":[["    )                                                                                       ",{}]],"26":[["  (",{}],["if",{"fg":6,"bold":true}],[" (and  mark-active                                                                     ",{}]],"27":[["            (not  (= (region-beginning) (region-end) ))                                     ",{}]]},"cursor":{"x":33,"visible":false}}],[0.000799,{"lines":{"1":[["  ",{}],["(",{"bg":6}],["setq reg-end-pos (region-end)",{}],[")",{"bg":6}],["                                                           ",{}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   52% L232  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":32,"visible":true}}],[0.030097,{"lines":{"1":[["                                                                                            ",{}]],"2":[["  ",{}],["(",{"bg":6}],["setq reg-end-pos (region-end)",{}],[")",{"bg":6}],["                                                           ",{}]],"3":[["  (forward-char (- reg-begin-pos (point) ))                                                 ",{}]],"4":[["  (beginning-of-line)                                                                       ",{}]],"5":[["  (setq  start-pos  (point))                                                                ",{}]],"6":[["  (forward-char (- reg-end-pos (point) ))  ",{}],[";;------                                         ",{"fg":1}]],"7":[["  (end-of-line)                                                                             ",{}]],"8":[["  (setq  end-pos  (",{}],["if",{"fg":6,"bold":true}],[" (= (point) (point-max) ) (point-max) (+ (point) 1 ) ))                ",{}]],"9":[["  (list start-pos end-pos ))                                                                ",{}]],"10":[["                                                                                            ",{}]],"11":[[";;;###autoload                                                                              ",{"fg":1}]],"12":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["mark-region-ex",{"fg":4,"bold":true}],["(",{}],["&optional",{"fg":2}],[" arg)                                                        ",{}]],"13":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"14":[["  (setq tmp-mark-pos  (get-mark-pos-ex))                                                    ",{}]],"15":[["  (forward-char (- (car tmp-mark-pos) (point) ))                                            ",{}]],"16":[["  (push-mark (cadr tmp-mark-pos) nil t ))                                                   ",{}]],"17":[["                                                                                            ",{}]],"18":[[";;功能                                                                                      ",{"fg":1}]],"19":[[";;                                                                                          ",{"fg":1}]],"20":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["opt-region-or-whole-line",{"fg":4,"bold":true}],["(opt-type   arg)                                             ",{}]],"21":[["  ",{}],["\"提供高级的复制 剪切功能                                                                  ",{"fg":2}]],"22":[["\"",{"fg":2}],["                                                                                           ",{}]],"23":[["  (",{}],["if",{"fg":6,"bold":true}],[" (string= opt-type ",{}],["\"copy\"",{"fg":2}],[")                                                             ",{}]],"24":[["      (setq do-region-func 'copy-region-as-kill do-line-func  'copy-whole-line  )           ",{}]],"25":[["    (setq do-region-func 'kill-region do-line-func  'kill-whole-line  )                     ",{}]],"26":[["    )                                                                                       ",{}]],"27":[["  (",{}],["if",{"fg":6,"bold":true}],[" (and  mark-active                                                                     ",{}]]},"cursor":{"x":0}}],[0.000508,{"lines":{"1":[["  (setq reg-begin-pos (region-beginning))                                                   ",{}]],"2":[["  (setq reg-end-pos (region-end))                                                           ",{}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   52% L231  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":32}}],[0.030298,{"lines":{"1":[["                                                                                            ",{}]],"2":[["  (setq reg-begin-pos (region-beginning))                                                   ",{}]],"3":[["  (setq reg-end-pos (region-end))                                                           ",{}]],"4":[["  (forward-char (- reg-begin-pos (point) ))                                                 ",{}]],"5":[["  (beginning-of-line)                                                                       ",{}]],"6":[["  (setq  start-pos  (point))                                                                ",{}]],"7":[["  (forward-char (- reg-end-pos (point) ))  ",{}],[";;------                                         ",{"fg":1}]],"8":[["  (end-of-line)                                                                             ",{}]],"9":[["  (setq  end-pos  (",{}],["if",{"fg":6,"bold":true}],[" (= (point) (point-max) ) (point-max) (+ (point) 1 ) ))                ",{}]],"10":[["  (list start-pos end-pos ))                                                                ",{}]],"11":[["                                                                                            ",{}]],"12":[[";;;###autoload                                                                              ",{"fg":1}]],"13":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["mark-region-ex",{"fg":4,"bold":true}],["(",{}],["&optional",{"fg":2}],[" arg)                                                        ",{}]],"14":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"15":[["  (setq tmp-mark-pos  (get-mark-pos-ex))                                                    ",{}]],"16":[["  (forward-char (- (car tmp-mark-pos) (point) ))                                            ",{}]],"17":[["  (push-mark (cadr tmp-mark-pos) nil t ))                                                   ",{}]],"18":[["                                                                                            ",{}]],"19":[[";;功能                                                                                      ",{"fg":1}]],"20":[[";;                                                                                          ",{"fg":1}]],"21":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["opt-region-or-whole-line",{"fg":4,"bold":true}],["(opt-type   arg)                                             ",{}]],"22":[["  ",{}],["\"提供高级的复制 剪切功能                                                                  ",{"fg":2}]],"23":[["\"",{"fg":2}],["                                                                                           ",{}]],"24":[["  (",{}],["if",{"fg":6,"bold":true}],[" (string= opt-type ",{}],["\"copy\"",{"fg":2}],[")                                                             ",{}]],"25":[["      (setq do-region-func 'copy-region-as-kill do-line-func  'copy-whole-line  )           ",{}]],"26":[["    (setq do-region-func 'kill-region do-line-func  'kill-whole-line  )                     ",{}]],"27":[["    )                                                                                       ",{}]]},"cursor":{"x":0}}],[7.4e-05,{"lines":{"1":[["  ",{}],["\"跨行，则得到所有行的开始和结束\"",{"fg":2}],["                                                          ",{}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   51% L230  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":33}}],[0.032934,{"lines":{"1":[["                                                                                            ",{}]],"2":[["  ",{}],["\"跨行，则得到所有行的开始和结束\"",{"fg":2}],["                                                          ",{}]],"3":[["  (setq reg-begin-pos (region-beginning))                                                   ",{}]],"4":[["  (setq reg-end-pos (region-end))                                                           ",{}]],"5":[["  (forward-char (- reg-begin-pos (point) ))                                                 ",{}]],"6":[["  (beginning-of-line)                                                                       ",{}]],"7":[["  (setq  start-pos  (point))                                                                ",{}]],"8":[["  (forward-char (- reg-end-pos (point) ))  ",{}],[";;------                                         ",{"fg":1}]],"9":[["  (end-of-line)                                                                             ",{}]],"10":[["  (setq  end-pos  (",{}],["if",{"fg":6,"bold":true}],[" (= (point) (point-max) ) (point-max) (+ (point) 1 ) ))                ",{}]],"11":[["  (list start-pos end-pos ))                                                                ",{}]],"12":[["                                                                                            ",{}]],"13":[[";;;###autoload                                                                              ",{"fg":1}]],"14":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["mark-region-ex",{"fg":4,"bold":true}],["(",{}],["&optional",{"fg":2}],[" arg)                                                        ",{}]],"15":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"16":[["  (setq tmp-mark-pos  (get-mark-pos-ex))                                                    ",{}]],"17":[["  (forward-char (- (car tmp-mark-pos) (point) ))                                            ",{}]],"18":[["  (push-mark (cadr tmp-mark-pos) nil t ))                                                   ",{}]],"19":[["                                                                                            ",{}]],"20":[[";;功能                                                                                      ",{"fg":1}]],"21":[[";;                                                                                          ",{"fg":1}]],"22":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["opt-region-or-whole-line",{"fg":4,"bold":true}],["(opt-type   arg)                                             ",{}]],"23":[["  ",{}],["\"提供高级的复制 剪切功能                                                                  ",{"fg":2}]],"24":[["\"",{"fg":2}],["                                                                                           ",{}]],"25":[["  (",{}],["if",{"fg":6,"bold":true}],[" (string= opt-type ",{}],["\"copy\"",{"fg":2}],[")                                                             ",{}]],"26":[["      (setq do-region-func 'copy-region-as-kill do-line-func  'copy-whole-line  )           ",{}]],"27":[["    (setq do-region-func 'kill-region do-line-func  'kill-whole-line  )                     ",{}]]},"cursor":{"x":0}}],[0.000544,{"lines":{"1":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["get-mark-pos-ex",{"fg":4,"bold":true}],[" ",{}],["()",{"bg":6}],["                                                                   ",{}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   51% L229  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":24}}],[0.027478,{"lines":{"1":[["                                                                                            ",{}]],"2":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["get-mark-pos-ex",{"fg":4,"bold":true}],[" ",{}],["()",{"bg":6}],["                                                                   ",{}]],"3":[["  ",{}],["\"跨行，则得到所有行的开始和结束\"",{"fg":2}],["                                                          ",{}]],"4":[["  (setq reg-begin-pos (region-beginning))                                                   ",{}]],"5":[["  (setq reg-end-pos (region-end))                                                           ",{}]],"6":[["  (forward-char (- reg-begin-pos (point) ))                                                 ",{}]],"7":[["  (beginning-of-line)                                                                       ",{}]],"8":[["  (setq  start-pos  (point))                                                                ",{}]],"9":[["  (forward-char (- reg-end-pos (point) ))  ",{}],[";;------                                         ",{"fg":1}]],"10":[["  (end-of-line)                                                                             ",{}]],"11":[["  (setq  end-pos  (",{}],["if",{"fg":6,"bold":true}],[" (= (point) (point-max) ) (point-max) (+ (point) 1 ) ))                ",{}]],"12":[["  (list start-pos end-pos ))                                                                ",{}]],"13":[["                                                                                            ",{}]],"14":[[";;;###autoload                                                                              ",{"fg":1}]],"15":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["mark-region-ex",{"fg":4,"bold":true}],["(",{}],["&optional",{"fg":2}],[" arg)                                                        ",{}]],"16":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"17":[["  (setq tmp-mark-pos  (get-mark-pos-ex))                                                    ",{}]],"18":[["  (forward-char (- (car tmp-mark-pos) (point) ))                                            ",{}]],"19":[["  (push-mark (cadr tmp-mark-pos) nil t ))                                                   ",{}]],"20":[["                                                                                            ",{}]],"21":[[";;功能                                                                                      ",{"fg":1}]],"22":[[";;                                                                                          ",{"fg":1}]],"23":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["opt-region-or-whole-line",{"fg":4,"bold":true}],["(opt-type   arg)                                             ",{}]],"24":[["  ",{}],["\"提供高级的复制 剪切功能                                                                  ",{"fg":2}]],"25":[["\"",{"fg":2}],["                                                                                           ",{}]],"26":[["  (",{}],["if",{"fg":6,"bold":true}],[" (string= opt-type ",{}],["\"copy\"",{"fg":2}],[")                                                             ",{}]],"27":[["      (setq do-region-func 'copy-region-as-kill do-line-func  'copy-whole-line  )           ",{}]]},"cursor":{"x":0}}],[0.001919,{"lines":{"1":[["  (jump-to-register 0) ",{}],[")",{"bg":6}],["                                                                    ",{}]],"2":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["get-mark-pos-ex",{"fg":4,"bold":true}],[" ()                                                                   ",{}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   51% L228  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":23}}],[0.028439,{"lines":{"1":[["    (copy-region-as-kill begin-point (point)))                                              ",{}]],"2":[["  (jump-to-register 0) ",{}],[")",{"bg":6}],["                                                                    ",{}]],"3":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["get-mark-pos-ex",{"fg":4,"bold":true}],[" ()                                                                   ",{}]],"4":[["  ",{}],["\"跨行，则得到所有行的开始和结束\"",{"fg":2}],["                                                          ",{}]],"5":[["  (setq reg-begin-pos (region-beginning))                                                   ",{}]],"6":[["  (setq reg-end-pos (region-end))                                                           ",{}]],"7":[["  (forward-char (- reg-begin-pos (point) ))                                                 ",{}]],"8":[["  (beginning-of-line)                                                                       ",{}]],"9":[["  (setq  start-pos  (point))                                                                ",{}]],"10":[["  (forward-char (- reg-end-pos (point) ))  ",{}],[";;------                                         ",{"fg":1}]],"11":[["  (end-of-line)                                                                             ",{}]],"12":[["  (setq  end-pos  (",{}],["if",{"fg":6,"bold":true}],[" (= (point) (point-max) ) (point-max) (+ (point) 1 ) ))                ",{}]],"13":[["  (list start-pos end-pos ))                                                                ",{}]],"14":[["                                                                                            ",{}]],"15":[[";;;###autoload                                                                              ",{"fg":1}]],"16":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["mark-region-ex",{"fg":4,"bold":true}],["(",{}],["&optional",{"fg":2}],[" arg)                                                        ",{}]],"17":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"18":[["  (setq tmp-mark-pos  (get-mark-pos-ex))                                                    ",{}]],"19":[["  (forward-char (- (car tmp-mark-pos) (point) ))                                            ",{}]],"20":[["  (push-mark (cadr tmp-mark-pos) nil t ))                                                   ",{}]],"21":[["                                                                                            ",{}]],"22":[[";;功能                                                                                      ",{"fg":1}]],"23":[[";;                                                                                          ",{"fg":1}]],"24":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["opt-region-or-whole-line",{"fg":4,"bold":true}],["(opt-type   arg)                                             ",{}]],"25":[["  ",{}],["\"提供高级的复制 剪切功能                                                                  ",{"fg":2}]],"26":[["\"",{"fg":2}],["                                                                                           ",{}]],"27":[["  (",{}],["if",{"fg":6,"bold":true}],[" (string= opt-type ",{}],["\"copy\"",{"fg":2}],[")                                                             ",{}]]},"cursor":{"x":46,"visible":false}}],[0.001329,{"lines":{"2":[["  (jump-to-register 0) )                                                                    ",{}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   51% L227  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":32,"visible":true}}],[0.029843,{"lines":{"1":[["                                                                                            ",{}]],"2":[["    (copy-region-as-kill begin-point (point)))                                              ",{}]],"3":[["  (jump-to-register 0) )                                                                    ",{}]],"4":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["get-mark-pos-ex",{"fg":4,"bold":true}],[" ()                                                                   ",{}]],"5":[["  ",{}],["\"跨行，则得到所有行的开始和结束\"",{"fg":2}],["                                                          ",{}]],"6":[["  (setq reg-begin-pos (region-beginning))                                                   ",{}]],"7":[["  (setq reg-end-pos (region-end))                                                           ",{}]],"8":[["  (forward-char (- reg-begin-pos (point) ))                                                 ",{}]],"9":[["  (beginning-of-line)                                                                       ",{}]],"10":[["  (setq  start-pos  (point))                                                                ",{}]],"11":[["  (forward-char (- reg-end-pos (point) ))  ",{}],[";;------                                         ",{"fg":1}]],"12":[["  (end-of-line)                                                                             ",{}]],"13":[["  (setq  end-pos  (",{}],["if",{"fg":6,"bold":true}],[" (= (point) (point-max) ) (point-max) (+ (point) 1 ) ))                ",{}]],"14":[["  (list start-pos end-pos ))                                                                ",{}]],"15":[["                                                                                            ",{}]],"16":[[";;;###autoload                                                                              ",{"fg":1}]],"17":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["mark-region-ex",{"fg":4,"bold":true}],["(",{}],["&optional",{"fg":2}],[" arg)                                                        ",{}]],"18":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"19":[["  (setq tmp-mark-pos  (get-mark-pos-ex))                                                    ",{}]],"20":[["  (forward-char (- (car tmp-mark-pos) (point) ))                                            ",{}]],"21":[["  (push-mark (cadr tmp-mark-pos) nil t ))                                                   ",{}]],"22":[["                                                                                            ",{}]],"23":[[";;功能                                                                                      ",{"fg":1}]],"24":[[";;                                                                                          ",{"fg":1}]],"25":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["opt-region-or-whole-line",{"fg":4,"bold":true}],["(opt-type   arg)                                             ",{}]],"26":[["  ",{}],["\"提供高级的复制 剪切功能                                                                  ",{"fg":2}]],"27":[["\"",{"fg":2}],["                                                                                           ",{}]]},"cursor":{"x":0}}],[0.000647,{"lines":{"1":[["    ",{}],["(",{"bg":6}],["forward-line num",{}],[")",{"bg":6}],["                                                                      ",{}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   51% L226  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":21}}],[0.029573,{"lines":{"1":[["                                                                                            ",{}]],"2":[["    ",{}],["(",{"bg":6}],["forward-line num",{}],[")",{"bg":6}],["                                                                      ",{}]],"3":[["    (copy-region-as-kill begin-point (point)))                                              ",{}]],"4":[["  (jump-to-register 0) )                                                                    ",{}]],"5":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["get-mark-pos-ex",{"fg":4,"bold":true}],[" ()                                                                   ",{}]],"6":[["  ",{}],["\"跨行，则得到所有行的开始和结束\"",{"fg":2}],["                                                          ",{}]],"7":[["  (setq reg-begin-pos (region-beginning))                                                   ",{}]],"8":[["  (setq reg-end-pos (region-end))                                                           ",{}]],"9":[["  (forward-char (- reg-begin-pos (point) ))                                                 ",{}]],"10":[["  (beginning-of-line)                                                                       ",{}]],"11":[["  (setq  start-pos  (point))                                                                ",{}]],"12":[["  (forward-char (- reg-end-pos (point) ))  ",{}],[";;------                                         ",{"fg":1}]],"13":[["  (end-of-line)                                                                             ",{}]],"14":[["  (setq  end-pos  (",{}],["if",{"fg":6,"bold":true}],[" (= (point) (point-max) ) (point-max) (+ (point) 1 ) ))                ",{}]],"15":[["  (list start-pos end-pos ))                                                                ",{}]],"16":[["                                                                                            ",{}]],"17":[[";;;###autoload                                                                              ",{"fg":1}]],"18":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["mark-region-ex",{"fg":4,"bold":true}],["(",{}],["&optional",{"fg":2}],[" arg)                                                        ",{}]],"19":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"20":[["  (setq tmp-mark-pos  (get-mark-pos-ex))                                                    ",{}]],"21":[["  (forward-char (- (car tmp-mark-pos) (point) ))                                            ",{}]],"22":[["  (push-mark (cadr tmp-mark-pos) nil t ))                                                   ",{}]],"23":[["                                                                                            ",{}]],"24":[[";;功能                                                                                      ",{"fg":1}]],"25":[[";;                                                                                          ",{"fg":1}]],"26":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["opt-region-or-whole-line",{"fg":4,"bold":true}],["(opt-type   arg)                                             ",{}]],"27":[["  ",{}],["\"提供高级的复制 剪切功能                                                                  ",{"fg":2}]]},"cursor":{"x":0}}],[0.0006090000000000001,{"lines":{"1":[["  (",{}],["let",{"fg":6,"bold":true}],[" ",{}],["(",{"bg":6}],["(begin-point (point))",{}],[")",{"bg":6}],["                                                              ",{}]],"2":[["    (forward-line num)                                                                      ",{}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   50% L225  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":29}}],[0.031196,{"lines":{"1":[["  (beginning-of-line)                                                                       ",{}]],"2":[["  (",{}],["let",{"fg":6,"bold":true}],[" ",{}],["(",{"bg":6}],["(begin-point (point))",{}],[")",{"bg":6}],["                                                              ",{}]],"3":[["    (forward-line num)                                                                      ",{}]],"4":[["    (copy-region-as-kill begin-point (point)))                                              ",{}]],"5":[["  (jump-to-register 0) )                                                                    ",{}]],"6":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["get-mark-pos-ex",{"fg":4,"bold":true}],[" ()                                                                   ",{}]],"7":[["  ",{}],["\"跨行，则得到所有行的开始和结束\"",{"fg":2}],["                                                          ",{}]],"8":[["  (setq reg-begin-pos (region-beginning))                                                   ",{}]],"9":[["  (setq reg-end-pos (region-end))                                                           ",{}]],"10":[["  (forward-char (- reg-begin-pos (point) ))                                                 ",{}]],"11":[["  (beginning-of-line)                                                                       ",{}]],"12":[["  (setq  start-pos  (point))                                                                ",{}]],"13":[["  (forward-char (- reg-end-pos (point) ))  ",{}],[";;------                                         ",{"fg":1}]],"14":[["  (end-of-line)                                                                             ",{}]],"15":[["  (setq  end-pos  (",{}],["if",{"fg":6,"bold":true}],[" (= (point) (point-max) ) (point-max) (+ (point) 1 ) ))                ",{}]],"16":[["  (list start-pos end-pos ))                                                                ",{}]],"17":[["                                                                                            ",{}]],"18":[[";;;###autoload                                                                              ",{"fg":1}]],"19":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["mark-region-ex",{"fg":4,"bold":true}],["(",{}],["&optional",{"fg":2}],[" arg)                                                        ",{}]],"20":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"21":[["  (setq tmp-mark-pos  (get-mark-pos-ex))                                                    ",{}]],"22":[["  (forward-char (- (car tmp-mark-pos) (point) ))                                            ",{}]],"23":[["  (push-mark (cadr tmp-mark-pos) nil t ))                                                   ",{}]],"24":[["                                                                                            ",{}]],"25":[[";;功能                                                                                      ",{"fg":1}]],"26":[[";;                                                                                          ",{"fg":1}]],"27":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["opt-region-or-whole-line",{"fg":4,"bold":true}],["(opt-type   arg)                                             ",{}]]},"cursor":{"x":21,"visible":false}}],[0.000791,{"lines":{"1":[["  ",{}],["(",{"bg":6}],["beginning-of-line",{}],[")",{"bg":6}],["                                                                       ",{}]],"2":[["  (",{}],["let",{"fg":6,"bold":true}],[" ((begin-point (point)))                                                              ",{}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   50% L224  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":20,"visible":true}}],[0.026655,{"lines":{"1":[["  ",{}],["(",{"bg":6}],["point-to-register 0",{}],[")",{"bg":6}],["                                                                     ",{}]],"2":[["  (beginning-of-line)                                                                       ",{}]],"3":[["  (",{}],["let",{"fg":6,"bold":true}],[" ((begin-point (point)))                                                              ",{}]],"4":[["    (forward-line num)                                                                      ",{}]],"5":[["    (copy-region-as-kill begin-point (point)))                                              ",{}]],"6":[["  (jump-to-register 0) )                                                                    ",{}]],"7":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["get-mark-pos-ex",{"fg":4,"bold":true}],[" ()                                                                   ",{}]],"8":[["  ",{}],["\"跨行，则得到所有行的开始和结束\"",{"fg":2}],["                                                          ",{}]],"9":[["  (setq reg-begin-pos (region-beginning))                                                   ",{}]],"10":[["  (setq reg-end-pos (region-end))                                                           ",{}]],"11":[["  (forward-char (- reg-begin-pos (point) ))                                                 ",{}]],"12":[["  (beginning-of-line)                                                                       ",{}]],"13":[["  (setq  start-pos  (point))                                                                ",{}]],"14":[["  (forward-char (- reg-end-pos (point) ))  ",{}],[";;------                                         ",{"fg":1}]],"15":[["  (end-of-line)                                                                             ",{}]],"16":[["  (setq  end-pos  (",{}],["if",{"fg":6,"bold":true}],[" (= (point) (point-max) ) (point-max) (+ (point) 1 ) ))                ",{}]],"17":[["  (list start-pos end-pos ))                                                                ",{}]],"18":[["                                                                                            ",{}]],"19":[[";;;###autoload                                                                              ",{"fg":1}]],"20":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["mark-region-ex",{"fg":4,"bold":true}],["(",{}],["&optional",{"fg":2}],[" arg)                                                        ",{}]],"21":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"22":[["  (setq tmp-mark-pos  (get-mark-pos-ex))                                                    ",{}]],"23":[["  (forward-char (- (car tmp-mark-pos) (point) ))                                            ",{}]],"24":[["  (push-mark (cadr tmp-mark-pos) nil t ))                                                   ",{}]],"25":[["                                                                                            ",{}]],"26":[[";;功能                                                                                      ",{"fg":1}]],"27":[[";;                                                                                          ",{"fg":1}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   50% L223  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":22}}],[0.030165,{"lines":{"1":[["                                                                                            ",{}]],"2":[["  ",{}],["(",{"bg":6}],["point-to-register 0",{}],[")",{"bg":6}],["                                                                     ",{}]],"3":[["  (beginning-of-line)                                                                       ",{}]],"4":[["  (",{}],["let",{"fg":6,"bold":true}],[" ((begin-point (point)))                                                              ",{}]],"5":[["    (forward-line num)                                                                      ",{}]],"6":[["    (copy-region-as-kill begin-point (point)))                                              ",{}]],"7":[["  (jump-to-register 0) )                                                                    ",{}]],"8":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["get-mark-pos-ex",{"fg":4,"bold":true}],[" ()                                                                   ",{}]],"9":[["  ",{}],["\"跨行，则得到所有行的开始和结束\"",{"fg":2}],["                                                          ",{}]],"10":[["  (setq reg-begin-pos (region-beginning))                                                   ",{}]],"11":[["  (setq reg-end-pos (region-end))                                                           ",{}]],"12":[["  (forward-char (- reg-begin-pos (point) ))                                                 ",{}]],"13":[["  (beginning-of-line)                                                                       ",{}]],"14":[["  (setq  start-pos  (point))                                                                ",{}]],"15":[["  (forward-char (- reg-end-pos (point) ))  ",{}],[";;------                                         ",{"fg":1}]],"16":[["  (end-of-line)                                                                             ",{}]],"17":[["  (setq  end-pos  (",{}],["if",{"fg":6,"bold":true}],[" (= (point) (point-max) ) (point-max) (+ (point) 1 ) ))                ",{}]],"18":[["  (list start-pos end-pos ))                                                                ",{}]],"19":[["                                                                                            ",{}]],"20":[[";;;###autoload                                                                              ",{"fg":1}]],"21":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["mark-region-ex",{"fg":4,"bold":true}],["(",{}],["&optional",{"fg":2}],[" arg)                                                        ",{}]],"22":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"23":[["  (setq tmp-mark-pos  (get-mark-pos-ex))                                                    ",{}]],"24":[["  (forward-char (- (car tmp-mark-pos) (point) ))                                            ",{}]],"25":[["  (push-mark (cadr tmp-mark-pos) nil t ))                                                   ",{}]],"26":[["                                                                                            ",{}]],"27":[[";;功能                                                                                      ",{"fg":1}]]},"cursor":{"x":0}}],[0.000917,{"lines":{"1":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["copy-whole-line",{"fg":4,"bold":true}],["(",{"bg":6}],["num",{}],[")",{"bg":6}],["                                                                 ",{}]],"2":[["  (point-to-register 0)                                                                     ",{}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   50% L222  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":26}}],[0.030069,{"lines":{"1":[["                                                                                            ",{}]],"2":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["copy-whole-line",{"fg":4,"bold":true}],["(",{"bg":6}],["num",{}],[")",{"bg":6}],["                                                                 ",{}]],"3":[["  (point-to-register 0)                                                                     ",{}]],"4":[["  (beginning-of-line)                                                                       ",{}]],"5":[["  (",{}],["let",{"fg":6,"bold":true}],[" ((begin-point (point)))                                                              ",{}]],"6":[["    (forward-line num)                                                                      ",{}]],"7":[["    (copy-region-as-kill begin-point (point)))                                              ",{}]],"8":[["  (jump-to-register 0) )                                                                    ",{}]],"9":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["get-mark-pos-ex",{"fg":4,"bold":true}],[" ()                                                                   ",{}]],"10":[["  ",{}],["\"跨行，则得到所有行的开始和结束\"",{"fg":2}],["                                                          ",{}]],"11":[["  (setq reg-begin-pos (region-beginning))                                                   ",{}]],"12":[["  (setq reg-end-pos (region-end))                                                           ",{}]],"13":[["  (forward-char (- reg-begin-pos (point) ))                                                 ",{}]],"14":[["  (beginning-of-line)                                                                       ",{}]],"15":[["  (setq  start-pos  (point))                                                                ",{}]],"16":[["  (forward-char (- reg-end-pos (point) ))  ",{}],[";;------                                         ",{"fg":1}]],"17":[["  (end-of-line)                                                                             ",{}]],"18":[["  (setq  end-pos  (",{}],["if",{"fg":6,"bold":true}],[" (= (point) (point-max) ) (point-max) (+ (point) 1 ) ))                ",{}]],"19":[["  (list start-pos end-pos ))                                                                ",{}]],"20":[["                                                                                            ",{}]],"21":[[";;;###autoload                                                                              ",{"fg":1}]],"22":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["mark-region-ex",{"fg":4,"bold":true}],["(",{}],["&optional",{"fg":2}],[" arg)                                                        ",{}]],"23":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"24":[["  (setq tmp-mark-pos  (get-mark-pos-ex))                                                    ",{}]],"25":[["  (forward-char (- (car tmp-mark-pos) (point) ))                                            ",{}]],"26":[["  (push-mark (cadr tmp-mark-pos) nil t ))                                                   ",{}]]},"cursor":{"x":0}}],[0.000733,{"lines":{"2":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["copy-whole-line",{"fg":4,"bold":true}],["(num)                                                                 ",{}]],"27":[["                                                                                            ",{}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   50% L221  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]}}],[0.033597,{"lines":{"2":[["                                                                                            ",{}]],"3":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["copy-whole-line",{"fg":4,"bold":true}],["(num)                                                                 ",{}]],"4":[["  (point-to-register 0)                                                                     ",{}]],"5":[["  (beginning-of-line)                                                                       ",{}]],"6":[["  (",{}],["let",{"fg":6,"bold":true}],[" ((begin-point (point)))                                                              ",{}]],"7":[["    (forward-line num)                                                                      ",{}]],"8":[["    (copy-region-as-kill begin-point (point)))                                              ",{}]],"9":[["  (jump-to-register 0) )                                                                    ",{}]],"10":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["get-mark-pos-ex",{"fg":4,"bold":true}],[" ()                                                                   ",{}]],"11":[["  ",{}],["\"跨行，则得到所有行的开始和结束\"",{"fg":2}],["                                                          ",{}]],"12":[["  (setq reg-begin-pos (region-beginning))                                                   ",{}]],"13":[["  (setq reg-end-pos (region-end))                                                           ",{}]],"14":[["  (forward-char (- reg-begin-pos (point) ))                                                 ",{}]],"15":[["  (beginning-of-line)                                                                       ",{}]],"16":[["  (setq  start-pos  (point))                                                                ",{}]],"17":[["  (forward-char (- reg-end-pos (point) ))  ",{}],[";;------                                         ",{"fg":1}]],"18":[["  (end-of-line)                                                                             ",{}]],"19":[["  (setq  end-pos  (",{}],["if",{"fg":6,"bold":true}],[" (= (point) (point-max) ) (point-max) (+ (point) 1 ) ))                ",{}]],"20":[["  (list start-pos end-pos ))                                                                ",{}]],"21":[["                                                                                            ",{}]],"22":[[";;;###autoload                                                                              ",{"fg":1}]],"23":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["mark-region-ex",{"fg":4,"bold":true}],["(",{}],["&optional",{"fg":2}],[" arg)                                                        ",{}]],"24":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"25":[["  (setq tmp-mark-pos  (get-mark-pos-ex))                                                    ",{}]],"26":[["  (forward-char (- (car tmp-mark-pos) (point) ))                                            ",{}]],"27":[["  (push-mark (cadr tmp-mark-pos) nil t ))                                                   ",{}]]},"cursor":{"y":2}}],[0.001758,{"lines":{"1":[["  (join-line 0)",{}],[")",{"bg":6}],["                                                                            ",{}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   50% L220  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":15,"y":1}}],[0.029174,{"lines":{"1":[["  (interactive ",{}],["\"p\"",{"fg":2}],[")                                                                         ",{}]],"2":[["  (join-line 0)",{}],[")",{"bg":6}],["                                                                            ",{}]],"3":[["                                                                                            ",{}]],"4":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["copy-whole-line",{"fg":4,"bold":true}],["(num)                                                                 ",{}]],"5":[["  (point-to-register 0)                                                                     ",{}]],"6":[["  (beginning-of-line)                                                                       ",{}]],"7":[["  (",{}],["let",{"fg":6,"bold":true}],[" ((begin-point (point)))                                                              ",{}]],"8":[["    (forward-line num)                                                                      ",{}]],"9":[["    (copy-region-as-kill begin-point (point)))                                              ",{}]],"10":[["  (jump-to-register 0) )                                                                    ",{}]],"11":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["get-mark-pos-ex",{"fg":4,"bold":true}],[" ()                                                                   ",{}]],"12":[["  ",{}],["\"跨行，则得到所有行的开始和结束\"",{"fg":2}],["                                                          ",{}]],"13":[["  (setq reg-begin-pos (region-beginning))                                                   ",{}]],"14":[["  (setq reg-end-pos (region-end))                                                           ",{}]],"15":[["  (forward-char (- reg-begin-pos (point) ))                                                 ",{}]],"16":[["  (beginning-of-line)                                                                       ",{}]],"17":[["  (setq  start-pos  (point))                                                                ",{}]],"18":[["  (forward-char (- reg-end-pos (point) ))  ",{}],[";;------                                         ",{"fg":1}]],"19":[["  (end-of-line)                                                                             ",{}]],"20":[["  (setq  end-pos  (",{}],["if",{"fg":6,"bold":true}],[" (= (point) (point-max) ) (point-max) (+ (point) 1 ) ))                ",{}]],"21":[["  (list start-pos end-pos ))                                                                ",{}]],"22":[["                                                                                            ",{}]],"23":[[";;;###autoload                                                                              ",{"fg":1}]],"24":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["mark-region-ex",{"fg":4,"bold":true}],["(",{}],["&optional",{"fg":2}],[" arg)                                                        ",{}]],"25":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"26":[["  (setq tmp-mark-pos  (get-mark-pos-ex))                                                    ",{}]],"27":[["  (forward-char (- (car tmp-mark-pos) (point) ))                                            ",{}]]},"cursor":{"x":19,"visible":false}}],[0.001731,{"lines":{"1":[["  ",{}],["(",{"bg":6}],["interactive ",{}],["\"p\"",{"fg":2}],[")",{"bg":6}],["                                                                         ",{}]],"2":[["  (join-line 0))                                                                            ",{}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   50% L219  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":18,"visible":true}}],[0.031259,{"lines":{"1":[["  ",{}],["\"\"",{"fg":2}],["                                                                                        ",{}]],"2":[["  ",{}],["(",{"bg":6}],["interactive ",{}],["\"p\"",{"fg":2}],[")",{"bg":6}],["                                                                         ",{}]],"3":[["  (join-line 0))                                                                            ",{}]],"4":[["                                                                                            ",{}]],"5":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["copy-whole-line",{"fg":4,"bold":true}],["(num)                                                                 ",{}]],"6":[["  (point-to-register 0)                                                                     ",{}]],"7":[["  (beginning-of-line)                                                                       ",{}]],"8":[["  (",{}],["let",{"fg":6,"bold":true}],[" ((begin-point (point)))                                                              ",{}]],"9":[["    (forward-line num)                                                                      ",{}]],"10":[["    (copy-region-as-kill begin-point (point)))                                              ",{}]],"11":[["  (jump-to-register 0) )                                                                    ",{}]],"12":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["get-mark-pos-ex",{"fg":4,"bold":true}],[" ()                                                                   ",{}]],"13":[["  ",{}],["\"跨行，则得到所有行的开始和结束\"",{"fg":2}],["                                                          ",{}]],"14":[["  (setq reg-begin-pos (region-beginning))                                                   ",{}]],"15":[["  (setq reg-end-pos (region-end))                                                           ",{}]],"16":[["  (forward-char (- reg-begin-pos (point) ))                                                 ",{}]],"17":[["  (beginning-of-line)                                                                       ",{}]],"18":[["  (setq  start-pos  (point))                                                                ",{}]],"19":[["  (forward-char (- reg-end-pos (point) ))  ",{}],[";;------                                         ",{"fg":1}]],"20":[["  (end-of-line)                                                                             ",{}]],"21":[["  (setq  end-pos  (",{}],["if",{"fg":6,"bold":true}],[" (= (point) (point-max) ) (point-max) (+ (point) 1 ) ))                ",{}]],"22":[["  (list start-pos end-pos ))                                                                ",{}]],"23":[["                                                                                            ",{}]],"24":[[";;;###autoload                                                                              ",{"fg":1}]],"25":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["mark-region-ex",{"fg":4,"bold":true}],["(",{}],["&optional",{"fg":2}],[" arg)                                                        ",{}]],"26":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]],"27":[["  (setq tmp-mark-pos  (get-mark-pos-ex))                                                    ",{}]]},"cursor":{"x":4,"visible":false}}],[0.000559,{"lines":{"2":[["  (interactive ",{}],["\"p\"",{"fg":2}],[")                                                                         ",{}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   50% L218  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":3,"visible":true}}],[0.023901,{"lines":{"1":[["                                                                                            ",{}]],"2":[["  ",{}],["\"\"",{"fg":2}],["                                                                                        ",{}]],"3":[["  (interactive ",{}],["\"p\"",{"fg":2}],[")                                                                         ",{}]],"4":[["  (join-line 0))                                                                            ",{}]],"5":[["                                                                                            ",{}]],"6":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["copy-whole-line",{"fg":4,"bold":true}],["(num)                                                                 ",{}]],"7":[["  (point-to-register 0)                                                                     ",{}]],"8":[["  (beginning-of-line)                                                                       ",{}]],"9":[["  (",{}],["let",{"fg":6,"bold":true}],[" ((begin-point (point)))                                                              ",{}]],"10":[["    (forward-line num)                                                                      ",{}]],"11":[["    (copy-region-as-kill begin-point (point)))                                              ",{}]],"12":[["  (jump-to-register 0) )                                                                    ",{}]],"13":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["get-mark-pos-ex",{"fg":4,"bold":true}],[" ()                                                                   ",{}]],"14":[["  ",{}],["\"跨行，则得到所有行的开始和结束\"",{"fg":2}],["                                                          ",{}]],"15":[["  (setq reg-begin-pos (region-beginning))                                                   ",{}]],"16":[["  (setq reg-end-pos (region-end))                                                           ",{}]],"17":[["  (forward-char (- reg-begin-pos (point) ))                                                 ",{}]],"18":[["  (beginning-of-line)                                                                       ",{}]],"19":[["  (setq  start-pos  (point))                                                                ",{}]],"20":[["  (forward-char (- reg-end-pos (point) ))  ",{}],[";;------                                         ",{"fg":1}]],"21":[["  (end-of-line)                                                                             ",{}]],"22":[["  (setq  end-pos  (",{}],["if",{"fg":6,"bold":true}],[" (= (point) (point-max) ) (point-max) (+ (point) 1 ) ))                ",{}]],"23":[["  (list start-pos end-pos ))                                                                ",{}]],"24":[["                                                                                            ",{}]],"25":[[";;;###autoload                                                                              ",{"fg":1}]],"26":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["mark-region-ex",{"fg":4,"bold":true}],["(",{}],["&optional",{"fg":2}],[" arg)                                                        ",{}]],"27":[["  (interactive ",{}],["\"P\"",{"fg":2}],[")                                                                         ",{}]]},"cursor":{"x":0}}],[0.0009159999999999999,{"lines":{"1":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["join-line-0",{"fg":4,"bold":true}],[" ",{}],["(",{"bg":6}],["arg",{}],[")",{"bg":6}],["                                                                    ",{}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   50% L217  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":23}}],[0.031012,{"lines":{"1":[["                                                                                            ",{}]],"2":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["join-line-0",{"fg":4,"bold":true}],[" ",{}],["(",{"bg":6}],["arg",{}],[")",{"bg":6}],["                                                                    ",{}]],"3":[["  ",{}],["\"\"",{"fg":2}],["                                                                                        ",{}]],"4":[["  (interactive ",{}],["\"p\"",{"fg":2}],[")                                                                         ",{}]],"5":[["  (join-line 0))                                                                            ",{}]],"6":[["                                                                                            ",{}]],"7":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["copy-whole-line",{"fg":4,"bold":true}],["(num)                                                                 ",{}]],"8":[["  (point-to-register 0)                                                                     ",{}]],"9":[["  (beginning-of-line)                                                                       ",{}]],"10":[["  (",{}],["let",{"fg":6,"bold":true}],[" ((begin-point (point)))                                                              ",{}]],"11":[["    (forward-line num)                                                                      ",{}]],"12":[["    (copy-region-as-kill begin-point (point)))                                              ",{}]],"13":[["  (jump-to-register 0) )                                                                    ",{}]],"14":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["get-mark-pos-ex",{"fg":4,"bold":true}],[" ()                                                                   ",{}]],"15":[["  ",{}],["\"跨行，则得到所有行的开始和结束\"",{"fg":2}],["                                                          ",{}]],"16":[["  (setq reg-begin-pos (region-beginning))                                                   ",{}]],"17":[["  (setq reg-end-pos (region-end))                                                           ",{}]],"18":[["  (forward-char (- reg-begin-pos (point) ))                                                 ",{}]],"19":[["  (beginning-of-line)                                                                       ",{}]],"20":[["  (setq  start-pos  (point))                                                                ",{}]],"21":[["  (forward-char (- reg-end-pos (point) ))  ",{}],[";;------                                         ",{"fg":1}]],"22":[["  (end-of-line)                                                                             ",{}]],"23":[["  (setq  end-pos  (",{}],["if",{"fg":6,"bold":true}],[" (= (point) (point-max) ) (point-max) (+ (point) 1 ) ))                ",{}]],"24":[["  (list start-pos end-pos ))                                                                ",{}]],"25":[["                                                                                            ",{}]],"26":[[";;;###autoload                                                                              ",{"fg":1}]],"27":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["mark-region-ex",{"fg":4,"bold":true}],["(",{}],["&optional",{"fg":2}],[" arg)                                                        ",{}]]},"cursor":{"x":0}}],[0.0005769999999999999,{"lines":{"2":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["join-line-0",{"fg":4,"bold":true}],[" (arg)                                                                    ",{}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   50% L216  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]}}],[0.031743,{"lines":{"1":[[";;---------------------------------------------------------------------------               ",{"fg":1}]],"2":[["                                                                                            ",{}]],"3":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["join-line-0",{"fg":4,"bold":true}],[" (arg)                                                                    ",{}]],"4":[["  ",{}],["\"\"",{"fg":2}],["                                                                                        ",{}]],"5":[["  (interactive ",{}],["\"p\"",{"fg":2}],[")                                                                         ",{}]],"6":[["  (join-line 0))                                                                            ",{}]],"7":[["                                                                                            ",{}]],"8":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["copy-whole-line",{"fg":4,"bold":true}],["(num)                                                                 ",{}]],"9":[["  (point-to-register 0)                                                                     ",{}]],"10":[["  (beginning-of-line)                                                                       ",{}]],"11":[["  (",{}],["let",{"fg":6,"bold":true}],[" ((begin-point (point)))                                                              ",{}]],"12":[["    (forward-line num)                                                                      ",{}]],"13":[["    (copy-region-as-kill begin-point (point)))                                              ",{}]],"14":[["  (jump-to-register 0) )                                                                    ",{}]],"15":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["get-mark-pos-ex",{"fg":4,"bold":true}],[" ()                                                                   ",{}]],"16":[["  ",{}],["\"跨行，则得到所有行的开始和结束\"",{"fg":2}],["                                                          ",{}]],"17":[["  (setq reg-begin-pos (region-beginning))                                                   ",{}]],"18":[["  (setq reg-end-pos (region-end))                                                           ",{}]],"19":[["  (forward-char (- reg-begin-pos (point) ))                                                 ",{}]],"20":[["  (beginning-of-line)                                                                       ",{}]],"21":[["  (setq  start-pos  (point))                                                                ",{}]],"22":[["  (forward-char (- reg-end-pos (point) ))  ",{}],[";;------                                         ",{"fg":1}]],"23":[["  (end-of-line)                                                                             ",{}]],"24":[["  (setq  end-pos  (",{}],["if",{"fg":6,"bold":true}],[" (= (point) (point-max) ) (point-max) (+ (point) 1 ) ))                ",{}]],"25":[["  (list start-pos end-pos ))                                                                ",{}]],"26":[["                                                                                            ",{}]],"27":[[";;;###autoload                                                                              ",{"fg":1}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   49% L215  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":32}}],[0.02831,{"lines":{"1":[["        (t (self-insert-command ",{}],["(",{"bg":6}],["or arg 1",{}],[")",{"bg":6}],["))))                                              ",{}]],"2":[[";;---------------------------------------------------------------------------               ",{"fg":1}]],"3":[["                                                                                            ",{}]],"4":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["join-line-0",{"fg":4,"bold":true}],[" (arg)                                                                    ",{}]],"5":[["  ",{}],["\"\"",{"fg":2}],["                                                                                        ",{}]],"6":[["  (interactive ",{}],["\"p\"",{"fg":2}],[")                                                                         ",{}]],"7":[["  (join-line 0))                                                                            ",{}]],"8":[["                                                                                            ",{}]],"9":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["copy-whole-line",{"fg":4,"bold":true}],["(num)                                                                 ",{}]],"10":[["  (point-to-register 0)                                                                     ",{}]],"11":[["  (beginning-of-line)                                                                       ",{}]],"12":[["  (",{}],["let",{"fg":6,"bold":true}],[" ((begin-point (point)))                                                              ",{}]],"13":[["    (forward-line num)                                                                      ",{}]],"14":[["    (copy-region-as-kill begin-point (point)))                                              ",{}]],"15":[["  (jump-to-register 0) )                                                                    ",{}]],"16":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["get-mark-pos-ex",{"fg":4,"bold":true}],[" ()                                                                   ",{}]],"17":[["  ",{}],["\"跨行，则得到所有行的开始和结束\"",{"fg":2}],["                                                          ",{}]],"18":[["  (setq reg-begin-pos (region-beginning))                                                   ",{}]],"19":[["  (setq reg-end-pos (region-end))                                                           ",{}]],"20":[["  (forward-char (- reg-begin-pos (point) ))                                                 ",{}]],"21":[["  (beginning-of-line)                                                                       ",{}]],"22":[["  (setq  start-pos  (point))                                                                ",{}]],"23":[["  (forward-char (- reg-end-pos (point) ))  ",{}],[";;------                                         ",{"fg":1}]],"24":[["  (end-of-line)                                                                             ",{}]],"25":[["  (setq  end-pos  (",{}],["if",{"fg":6,"bold":true}],[" (= (point) (point-max) ) (point-max) (+ (point) 1 ) ))                ",{}]],"26":[["  (list start-pos end-pos ))                                                                ",{}]],"27":[["                                                                                            ",{}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   49% L214  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]}}],[0.031049,{"lines":{"1":[["                                                                                            ",{}]],"2":[["        (t (self-insert-command ",{}],["(",{"bg":6}],["or arg 1",{}],[")",{"bg":6}],["))))                                              ",{}]],"3":[[";;---------------------------------------------------------------------------               ",{"fg":1}]],"4":[["                                                                                            ",{}]],"5":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["join-line-0",{"fg":4,"bold":true}],[" (arg)                                                                    ",{}]],"6":[["  ",{}],["\"\"",{"fg":2}],["                                                                                        ",{}]],"7":[["  (interactive ",{}],["\"p\"",{"fg":2}],[")                                                                         ",{}]],"8":[["  (join-line 0))                                                                            ",{}]],"9":[["                                                                                            ",{}]],"10":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["copy-whole-line",{"fg":4,"bold":true}],["(num)                                                                 ",{}]],"11":[["  (point-to-register 0)                                                                     ",{}]],"12":[["  (beginning-of-line)                                                                       ",{}]],"13":[["  (",{}],["let",{"fg":6,"bold":true}],[" ((begin-point (point)))                                                              ",{}]],"14":[["    (forward-line num)                                                                      ",{}]],"15":[["    (copy-region-as-kill begin-point (point)))                                              ",{}]],"16":[["  (jump-to-register 0) )                                                                    ",{}]],"17":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["get-mark-pos-ex",{"fg":4,"bold":true}],[" ()                                                                   ",{}]],"18":[["  ",{}],["\"跨行，则得到所有行的开始和结束\"",{"fg":2}],["                                                          ",{}]],"19":[["  (setq reg-begin-pos (region-beginning))                                                   ",{}]],"20":[["  (setq reg-end-pos (region-end))                                                           ",{}]],"21":[["  (forward-char (- reg-begin-pos (point) ))                                                 ",{}]],"22":[["  (beginning-of-line)                                                                       ",{}]],"23":[["  (setq  start-pos  (point))                                                                ",{}]],"24":[["  (forward-char (- reg-end-pos (point) ))  ",{}],[";;------                                         ",{"fg":1}]],"25":[["  (end-of-line)                                                                             ",{}]],"26":[["  (setq  end-pos  (",{}],["if",{"fg":6,"bold":true}],[" (= (point) (point-max) ) (point-max) (+ (point) 1 ) ))                ",{}]],"27":[["  (list start-pos end-pos ))                                                                ",{}]]},"cursor":{"x":0}}],[0.001272,{"lines":{"1":[["        ((looking-at ",{}],["\"\\\\s)\"",{"fg":2}],[") (forward-char 1) (backward-list 1))                            ",{}]],"2":[["        (t (self-insert-command (or arg 1)))))                                              ",{}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   48% L213  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":32}}],[0.029478,{"lines":{"1":[["                                                                                            ",{}]],"2":[["        ((looking-at ",{}],["\"\\\\s)\"",{"fg":2}],[") (forward-char 1) (backward-list 1))                            ",{}]],"3":[["        (t (self-insert-command (or arg 1)))))                                              ",{}]],"4":[[";;---------------------------------------------------------------------------               ",{"fg":1}]],"5":[["                                                                                            ",{}]],"6":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["join-line-0",{"fg":4,"bold":true}],[" (arg)                                                                    ",{}]],"7":[["  ",{}],["\"\"",{"fg":2}],["                                                                                        ",{}]],"8":[["  (interactive ",{}],["\"p\"",{"fg":2}],[")                                                                         ",{}]],"9":[["  (join-line 0))                                                                            ",{}]],"10":[["                                                                                            ",{}]],"11":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["copy-whole-line",{"fg":4,"bold":true}],["(num)                                                                 ",{}]],"12":[["  (point-to-register 0)                                                                     ",{}]],"13":[["  (beginning-of-line)                                                                       ",{}]],"14":[["  (",{}],["let",{"fg":6,"bold":true}],[" ((begin-point (point)))                                                              ",{}]],"15":[["    (forward-line num)                                                                      ",{}]],"16":[["    (copy-region-as-kill begin-point (point)))                                              ",{}]],"17":[["  (jump-to-register 0) )                                                                    ",{}]],"18":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["get-mark-pos-ex",{"fg":4,"bold":true}],[" ()                                                                   ",{}]],"19":[["  ",{}],["\"跨行，则得到所有行的开始和结束\"",{"fg":2}],["                                                          ",{}]],"20":[["  (setq reg-begin-pos (region-beginning))                                                   ",{}]],"21":[["  (setq reg-end-pos (region-end))                                                           ",{}]],"22":[["  (forward-char (- reg-begin-pos (point) ))                                                 ",{}]],"23":[["  (beginning-of-line)                                                                       ",{}]],"24":[["  (setq  start-pos  (point))                                                                ",{}]],"25":[["  (forward-char (- reg-end-pos (point) ))  ",{}],[";;------                                         ",{"fg":1}]],"26":[["  (end-of-line)                                                                             ",{}]],"27":[["  (setq  end-pos  (",{}],["if",{"fg":6,"bold":true}],[" (= (point) (point-max) ) (point-max) (+ (point) 1 ) ))                ",{}]]},"cursor":{"x":0}}],[0.000251,{"lines":{"1":[["  (",{}],["cond",{"fg":6,"bold":true}],[" ((looking-at ",{}],["\"\\\\s(\"",{"fg":2}],[") (forward-list 1) (backward-char 1))                            ",{}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   48% L212  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":32}}],[0.030075,{"lines":{"1":[["  (interactive ",{}],["\"p\"",{"fg":2}],[")                                                                         ",{}]],"2":[["  (",{}],["cond",{"fg":6,"bold":true}],[" ((looking-at ",{}],["\"\\\\s(\"",{"fg":2}],[") (forward-list 1) (backward-char 1))                            ",{}]],"3":[["        ((looking-at ",{}],["\"\\\\s)\"",{"fg":2}],[") (forward-char 1) (backward-list 1))                            ",{}]],"4":[["        (t (self-insert-command (or arg 1)))))                                              ",{}]],"5":[[";;---------------------------------------------------------------------------               ",{"fg":1}]],"6":[["                                                                                            ",{}]],"7":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["join-line-0",{"fg":4,"bold":true}],[" (arg)                                                                    ",{}]],"8":[["  ",{}],["\"\"",{"fg":2}],["                                                                                        ",{}]],"9":[["  (interactive ",{}],["\"p\"",{"fg":2}],[")                                                                         ",{}]],"10":[["  (join-line 0))                                                                            ",{}]],"11":[["                                                                                            ",{}]],"12":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["copy-whole-line",{"fg":4,"bold":true}],["(num)                                                                 ",{}]],"13":[["  (point-to-register 0)                                                                     ",{}]],"14":[["  (beginning-of-line)                                                                       ",{}]],"15":[["  (",{}],["let",{"fg":6,"bold":true}],[" ((begin-point (point)))                                                              ",{}]],"16":[["    (forward-line num)                                                                      ",{}]],"17":[["    (copy-region-as-kill begin-point (point)))                                              ",{}]],"18":[["  (jump-to-register 0) )                                                                    ",{}]],"19":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["get-mark-pos-ex",{"fg":4,"bold":true}],[" ()                                                                   ",{}]],"20":[["  ",{}],["\"跨行，则得到所有行的开始和结束\"",{"fg":2}],["                                                          ",{}]],"21":[["  (setq reg-begin-pos (region-beginning))                                                   ",{}]],"22":[["  (setq reg-end-pos (region-end))                                                           ",{}]],"23":[["  (forward-char (- reg-begin-pos (point) ))                                                 ",{}]],"24":[["  (beginning-of-line)                                                                       ",{}]],"25":[["  (setq  start-pos  (point))                                                                ",{}]],"26":[["  (forward-char (- reg-end-pos (point) ))  ",{}],[";;------                                         ",{"fg":1}]],"27":[["  (end-of-line)                                                                             ",{}]]},"cursor":{"x":19,"visible":false}}],[0.000786,{"lines":{"1":[["  ",{}],["(",{"bg":6}],["interactive ",{}],["\"p\"",{"fg":2}],[")",{"bg":6}],["                                                                         ",{}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   48% L211  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":18,"visible":true}}],[0.029921,{"lines":{"1":[["  ",{}],["\"Go to the matching paren if on a paren; otherwise insert %.\"",{"fg":2}],["                             ",{}]],"2":[["  ",{}],["(",{"bg":6}],["interactive ",{}],["\"p\"",{"fg":2}],[")",{"bg":6}],["                                                                         ",{}]],"3":[["  (",{}],["cond",{"fg":6,"bold":true}],[" ((looking-at ",{}],["\"\\\\s(\"",{"fg":2}],[") (forward-list 1) (backward-char 1))                            ",{}]],"4":[["        ((looking-at ",{}],["\"\\\\s)\"",{"fg":2}],[") (forward-char 1) (backward-list 1))                            ",{}]],"5":[["        (t (self-insert-command (or arg 1)))))                                              ",{}]],"6":[[";;---------------------------------------------------------------------------               ",{"fg":1}]],"7":[["                                                                                            ",{}]],"8":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["join-line-0",{"fg":4,"bold":true}],[" (arg)                                                                    ",{}]],"9":[["  ",{}],["\"\"",{"fg":2}],["                                                                                        ",{}]],"10":[["  (interactive ",{}],["\"p\"",{"fg":2}],[")                                                                         ",{}]],"11":[["  (join-line 0))                                                                            ",{}]],"12":[["                                                                                            ",{}]],"13":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["copy-whole-line",{"fg":4,"bold":true}],["(num)                                                                 ",{}]],"14":[["  (point-to-register 0)                                                                     ",{}]],"15":[["  (beginning-of-line)                                                                       ",{}]],"16":[["  (",{}],["let",{"fg":6,"bold":true}],[" ((begin-point (point)))                                                              ",{}]],"17":[["    (forward-line num)                                                                      ",{}]],"18":[["    (copy-region-as-kill begin-point (point)))                                              ",{}]],"19":[["  (jump-to-register 0) )                                                                    ",{}]],"20":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["get-mark-pos-ex",{"fg":4,"bold":true}],[" ()                                                                   ",{}]],"21":[["  ",{}],["\"跨行，则得到所有行的开始和结束\"",{"fg":2}],["                                                          ",{}]],"22":[["  (setq reg-begin-pos (region-beginning))                                                   ",{}]],"23":[["  (setq reg-end-pos (region-end))                                                           ",{}]],"24":[["  (forward-char (- reg-begin-pos (point) ))                                                 ",{}]],"25":[["  (beginning-of-line)                                                                       ",{}]],"26":[["  (setq  start-pos  (point))                                                                ",{}]],"27":[["  (forward-char (- reg-end-pos (point) ))  ",{}],[";;------                                         ",{"fg":1}]]},"cursor":{"x":63,"visible":false}}],[0.000951,{"lines":{"2":[["  (interactive ",{}],["\"p\"",{"fg":2}],[")                                                                         ",{}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   47% L210  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":32,"visible":true}}],[0.02952,{"lines":{"1":[["                                                                                            ",{}]],"2":[["  ",{}],["\"Go to the matching paren if on a paren; otherwise insert %.\"",{"fg":2}],["                             ",{}]],"3":[["  (interactive ",{}],["\"p\"",{"fg":2}],[")                                                                         ",{}]],"4":[["  (",{}],["cond",{"fg":6,"bold":true}],[" ((looking-at ",{}],["\"\\\\s(\"",{"fg":2}],[") (forward-list 1) (backward-char 1))                            ",{}]],"5":[["        ((looking-at ",{}],["\"\\\\s)\"",{"fg":2}],[") (forward-char 1) (backward-list 1))                            ",{}]],"6":[["        (t (self-insert-command (or arg 1)))))                                              ",{}]],"7":[[";;---------------------------------------------------------------------------               ",{"fg":1}]],"8":[["                                                                                            ",{}]],"9":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["join-line-0",{"fg":4,"bold":true}],[" (arg)                                                                    ",{}]],"10":[["  ",{}],["\"\"",{"fg":2}],["                                                                                        ",{}]],"11":[["  (interactive ",{}],["\"p\"",{"fg":2}],[")                                                                         ",{}]],"12":[["  (join-line 0))                                                                            ",{}]],"13":[["                                                                                            ",{}]],"14":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["copy-whole-line",{"fg":4,"bold":true}],["(num)                                                                 ",{}]],"15":[["  (point-to-register 0)                                                                     ",{}]],"16":[["  (beginning-of-line)                                                                       ",{}]],"17":[["  (",{}],["let",{"fg":6,"bold":true}],[" ((begin-point (point)))                                                              ",{}]],"18":[["    (forward-line num)                                                                      ",{}]],"19":[["    (copy-region-as-kill begin-point (point)))                                              ",{}]],"20":[["  (jump-to-register 0) )                                                                    ",{}]],"21":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["get-mark-pos-ex",{"fg":4,"bold":true}],[" ()                                                                   ",{}]],"22":[["  ",{}],["\"跨行，则得到所有行的开始和结束\"",{"fg":2}],["                                                          ",{}]],"23":[["  (setq reg-begin-pos (region-beginning))                                                   ",{}]],"24":[["  (setq reg-end-pos (region-end))                                                           ",{}]],"25":[["  (forward-char (- reg-begin-pos (point) ))                                                 ",{}]],"26":[["  (beginning-of-line)                                                                       ",{}]],"27":[["  (setq  start-pos  (point))                                                                ",{}]]},"cursor":{"x":0}}],[0.000803,{"lines":{"1":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["match-paren",{"fg":4,"bold":true}],[" ",{}],["(",{"bg":6}],["arg",{}],[")",{"bg":6}],["                                                                    ",{}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   47% L209  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":23}}],[0.031209,{"lines":{"1":[["                                                                                            ",{}]],"2":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["match-paren",{"fg":4,"bold":true}],[" ",{}],["(",{"bg":6}],["arg",{}],[")",{"bg":6}],["                                                                    ",{}]],"3":[["  ",{}],["\"Go to the matching paren if on a paren; otherwise insert %.\"",{"fg":2}],["                             ",{}]],"4":[["  (interactive ",{}],["\"p\"",{"fg":2}],[")                                                                         ",{}]],"5":[["  (",{}],["cond",{"fg":6,"bold":true}],[" ((looking-at ",{}],["\"\\\\s(\"",{"fg":2}],[") (forward-list 1) (backward-char 1))                            ",{}]],"6":[["        ((looking-at ",{}],["\"\\\\s)\"",{"fg":2}],[") (forward-char 1) (backward-list 1))                            ",{}]],"7":[["        (t (self-insert-command (or arg 1)))))                                              ",{}]],"8":[[";;---------------------------------------------------------------------------               ",{"fg":1}]],"9":[["                                                                                            ",{}]],"10":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["join-line-0",{"fg":4,"bold":true}],[" (arg)                                                                    ",{}]],"11":[["  ",{}],["\"\"",{"fg":2}],["                                                                                        ",{}]],"12":[["  (interactive ",{}],["\"p\"",{"fg":2}],[")                                                                         ",{}]],"13":[["  (join-line 0))                                                                            ",{}]],"14":[["                                                                                            ",{}]],"15":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["copy-whole-line",{"fg":4,"bold":true}],["(num)                                                                 ",{}]],"16":[["  (point-to-register 0)                                                                     ",{}]],"17":[["  (beginning-of-line)                                                                       ",{}]],"18":[["  (",{}],["let",{"fg":6,"bold":true}],[" ((begin-point (point)))                                                              ",{}]],"19":[["    (forward-line num)                                                                      ",{}]],"20":[["    (copy-region-as-kill begin-point (point)))                                              ",{}]],"21":[["  (jump-to-register 0) )                                                                    ",{}]],"22":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["get-mark-pos-ex",{"fg":4,"bold":true}],[" ()                                                                   ",{}]],"23":[["  ",{}],["\"跨行，则得到所有行的开始和结束\"",{"fg":2}],["                                                          ",{}]],"24":[["  (setq reg-begin-pos (region-beginning))                                                   ",{}]],"25":[["  (setq reg-end-pos (region-end))                                                           ",{}]],"26":[["  (forward-char (- reg-begin-pos (point) ))                                                 ",{}]],"27":[["  (beginning-of-line)                                                                       ",{}]]},"cursor":{"x":0}}],[0.000723,{"lines":{"2":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["match-paren",{"fg":4,"bold":true}],[" (arg)                                                                    ",{}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   47% L208  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]}}],[0.027217,{"lines":{"2":[["                                                                                            ",{}]],"3":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["match-paren",{"fg":4,"bold":true}],[" (arg)                                                                    ",{}]],"4":[["  ",{}],["\"Go to the matching paren if on a paren; otherwise insert %.\"",{"fg":2}],["                             ",{}]],"5":[["  (interactive ",{}],["\"p\"",{"fg":2}],[")                                                                         ",{}]],"6":[["  (",{}],["cond",{"fg":6,"bold":true}],[" ((looking-at ",{}],["\"\\\\s(\"",{"fg":2}],[") (forward-list 1) (backward-char 1))                            ",{}]],"7":[["        ((looking-at ",{}],["\"\\\\s)\"",{"fg":2}],[") (forward-char 1) (backward-list 1))                            ",{}]],"8":[["        (t (self-insert-command (or arg 1)))))                                              ",{}]],"9":[[";;---------------------------------------------------------------------------               ",{"fg":1}]],"10":[["                                                                                            ",{}]],"11":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["join-line-0",{"fg":4,"bold":true}],[" (arg)                                                                    ",{}]],"12":[["  ",{}],["\"\"",{"fg":2}],["                                                                                        ",{}]],"13":[["  (interactive ",{}],["\"p\"",{"fg":2}],[")                                                                         ",{}]],"14":[["  (join-line 0))                                                                            ",{}]],"15":[["                                                                                            ",{}]],"16":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["copy-whole-line",{"fg":4,"bold":true}],["(num)                                                                 ",{}]],"17":[["  (point-to-register 0)                                                                     ",{}]],"18":[["  (beginning-of-line)                                                                       ",{}]],"19":[["  (",{}],["let",{"fg":6,"bold":true}],[" ((begin-point (point)))                                                              ",{}]],"20":[["    (forward-line num)                                                                      ",{}]],"21":[["    (copy-region-as-kill begin-point (point)))                                              ",{}]],"22":[["  (jump-to-register 0) )                                                                    ",{}]],"23":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["get-mark-pos-ex",{"fg":4,"bold":true}],[" ()                                                                   ",{}]],"24":[["  ",{}],["\"跨行，则得到所有行的开始和结束\"",{"fg":2}],["                                                          ",{}]],"25":[["  (setq reg-begin-pos (region-beginning))                                                   ",{}]],"26":[["  (setq reg-end-pos (region-end))                                                           ",{}]],"27":[["  (forward-char (- reg-begin-pos (point) ))                                                 ",{}]]},"cursor":{"y":2}}],[0.001539,{"lines":{"1":[["  ",{}],[")",{"bg":6}],["                                                                                         ",{}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   47% L207  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":2,"y":1}}],[0.030363,{"lines":{"1":[["  (vimpulse-local-set-key 'insert-state (kbd ",{}],["\"{\"",{"fg":2}],[") 'skeleton-pair-insert-maybe)              ",{}]],"2":[["  ",{}],[")",{"bg":6}],["                                                                                         ",{}]],"3":[["                                                                                            ",{}]],"4":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["match-paren",{"fg":4,"bold":true}],[" (arg)                                                                    ",{}]],"5":[["  ",{}],["\"Go to the matching paren if on a paren; otherwise insert %.\"",{"fg":2}],["                             ",{}]],"6":[["  (interactive ",{}],["\"p\"",{"fg":2}],[")                                                                         ",{}]],"7":[["  (",{}],["cond",{"fg":6,"bold":true}],[" ((looking-at ",{}],["\"\\\\s(\"",{"fg":2}],[") (forward-list 1) (backward-char 1))                            ",{}]],"8":[["        ((looking-at ",{}],["\"\\\\s)\"",{"fg":2}],[") (forward-char 1) (backward-list 1))                            ",{}]],"9":[["        (t (self-insert-command (or arg 1)))))                                              ",{}]],"10":[[";;---------------------------------------------------------------------------               ",{"fg":1}]],"11":[["                                                                                            ",{}]],"12":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["join-line-0",{"fg":4,"bold":true}],[" (arg)                                                                    ",{}]],"13":[["  ",{}],["\"\"",{"fg":2}],["                                                                                        ",{}]],"14":[["  (interactive ",{}],["\"p\"",{"fg":2}],[")                                                                         ",{}]],"15":[["  (join-line 0))                                                                            ",{}]],"16":[["                                                                                            ",{}]],"17":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["copy-whole-line",{"fg":4,"bold":true}],["(num)                                                                 ",{}]],"18":[["  (point-to-register 0)                                                                     ",{}]],"19":[["  (beginning-of-line)                                                                       ",{}]],"20":[["  (",{}],["let",{"fg":6,"bold":true}],[" ((begin-point (point)))                                                              ",{}]],"21":[["    (forward-line num)                                                                      ",{}]],"22":[["    (copy-region-as-kill begin-point (point)))                                              ",{}]],"23":[["  (jump-to-register 0) )                                                                    ",{}]],"24":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["get-mark-pos-ex",{"fg":4,"bold":true}],[" ()                                                                   ",{}]],"25":[["  ",{}],["\"跨行，则得到所有行的开始和结束\"",{"fg":2}],["                                                          ",{}]],"26":[["  (setq reg-begin-pos (region-beginning))                                                   ",{}]],"27":[["  (setq reg-end-pos (region-end))                                                           ",{}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   47% L206  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":32}}],[0.001316,{"lines":{"2":[["  )                                                                                         ",{}]]}}],[0.028371,{"lines":{"1":[["                                                                                            ",{}]],"2":[["  (vimpulse-local-set-key 'insert-state (kbd ",{}],["\"{\"",{"fg":2}],[") 'skeleton-pair-insert-maybe)              ",{}]],"3":[["  )                                                                                         ",{}]],"4":[["                                                                                            ",{}]],"5":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["match-paren",{"fg":4,"bold":true}],[" (arg)                                                                    ",{}]],"6":[["  ",{}],["\"Go to the matching paren if on a paren; otherwise insert %.\"",{"fg":2}],["                             ",{}]],"7":[["  (interactive ",{}],["\"p\"",{"fg":2}],[")                                                                         ",{}]],"8":[["  (",{}],["cond",{"fg":6,"bold":true}],[" ((looking-at ",{}],["\"\\\\s(\"",{"fg":2}],[") (forward-list 1) (backward-char 1))                            ",{}]],"9":[["        ((looking-at ",{}],["\"\\\\s)\"",{"fg":2}],[") (forward-char 1) (backward-list 1))                            ",{}]],"10":[["        (t (self-insert-command (or arg 1)))))                                              ",{}]],"11":[[";;---------------------------------------------------------------------------               ",{"fg":1}]],"12":[["                                                                                            ",{}]],"13":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["join-line-0",{"fg":4,"bold":true}],[" (arg)                                                                    ",{}]],"14":[["  ",{}],["\"\"",{"fg":2}],["                                                                                        ",{}]],"15":[["  (interactive ",{}],["\"p\"",{"fg":2}],[")                                                                         ",{}]],"16":[["  (join-line 0))                                                                            ",{}]],"17":[["                                                                                            ",{}]],"18":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["copy-whole-line",{"fg":4,"bold":true}],["(num)                                                                 ",{}]],"19":[["  (point-to-register 0)                                                                     ",{}]],"20":[["  (beginning-of-line)                                                                       ",{}]],"21":[["  (",{}],["let",{"fg":6,"bold":true}],[" ((begin-point (point)))                                                              ",{}]],"22":[["    (forward-line num)                                                                      ",{}]],"23":[["    (copy-region-as-kill begin-point (point)))                                              ",{}]],"24":[["  (jump-to-register 0) )                                                                    ",{}]],"25":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["get-mark-pos-ex",{"fg":4,"bold":true}],[" ()                                                                   ",{}]],"26":[["  ",{}],["\"跨行，则得到所有行的开始和结束\"",{"fg":2}],["                                                          ",{}]],"27":[["  (setq reg-begin-pos (region-beginning))                                                   ",{}]]},"cursor":{"x":0}}],[0.000103,{"lines":{"1":[["  (vimpulse-local-set-key 'insert-state (kbd ",{}],["\"\\\"\"",{"fg":2}],[") 'skeleton-pair-insert-maybe)             ",{}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   46% L205  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":32}}],[0.03117,{"lines":{"1":[["  (vimpulse-local-set-key 'insert-state (kbd ",{}],["\"'\"",{"fg":2}],[") 'skeleton-pair-insert-maybe)              ",{}]],"2":[["  (vimpulse-local-set-key 'insert-state (kbd ",{}],["\"\\\"\"",{"fg":2}],[") 'skeleton-pair-insert-maybe)             ",{}]],"3":[["  (vimpulse-local-set-key 'insert-state (kbd ",{}],["\"{\"",{"fg":2}],[") 'skeleton-pair-insert-maybe)              ",{}]],"4":[["  )                                                                                         ",{}]],"5":[["                                                                                            ",{}]],"6":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["match-paren",{"fg":4,"bold":true}],[" (arg)                                                                    ",{}]],"7":[["  ",{}],["\"Go to the matching paren if on a paren; otherwise insert %.\"",{"fg":2}],["                             ",{}]],"8":[["  (interactive ",{}],["\"p\"",{"fg":2}],[")                                                                         ",{}]],"9":[["  (",{}],["cond",{"fg":6,"bold":true}],[" ((looking-at ",{}],["\"\\\\s(\"",{"fg":2}],[") (forward-list 1) (backward-char 1))                            ",{}]],"10":[["        ((looking-at ",{}],["\"\\\\s)\"",{"fg":2}],[") (forward-char 1) (backward-list 1))                            ",{}]],"11":[["        (t (self-insert-command (or arg 1)))))                                              ",{}]],"12":[[";;---------------------------------------------------------------------------               ",{"fg":1}]],"13":[["                                                                                            ",{}]],"14":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["join-line-0",{"fg":4,"bold":true}],[" (arg)                                                                    ",{}]],"15":[["  ",{}],["\"\"",{"fg":2}],["                                                                                        ",{}]],"16":[["  (interactive ",{}],["\"p\"",{"fg":2}],[")                                                                         ",{}]],"17":[["  (join-line 0))                                                                            ",{}]],"18":[["                                                                                            ",{}]],"19":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["copy-whole-line",{"fg":4,"bold":true}],["(num)                                                                 ",{}]],"20":[["  (point-to-register 0)                                                                     ",{}]],"21":[["  (beginning-of-line)                                                                       ",{}]],"22":[["  (",{}],["let",{"fg":6,"bold":true}],[" ((begin-point (point)))                                                              ",{}]],"23":[["    (forward-line num)                                                                      ",{}]],"24":[["    (copy-region-as-kill begin-point (point)))                                              ",{}]],"25":[["  (jump-to-register 0) )                                                                    ",{}]],"26":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["get-mark-pos-ex",{"fg":4,"bold":true}],[" ()                                                                   ",{}]],"27":[["  ",{}],["\"跨行，则得到所有行的开始和结束\"",{"fg":2}],["                                                          ",{}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   46% L204  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]}}],[0.033103,{"lines":{"1":[["  (vimpulse-local-set-key 'insert-state (kbd ",{}],["\"[\"",{"fg":2}],[") 'skeleton-pair-insert-maybe)              ",{}]],"2":[["  (vimpulse-local-set-key 'insert-state (kbd ",{}],["\"'\"",{"fg":2}],[") 'skeleton-pair-insert-maybe)              ",{}]],"3":[["  (vimpulse-local-set-key 'insert-state (kbd ",{}],["\"\\\"\"",{"fg":2}],[") 'skeleton-pair-insert-maybe)             ",{}]],"4":[["  (vimpulse-local-set-key 'insert-state (kbd ",{}],["\"{\"",{"fg":2}],[") 'skeleton-pair-insert-maybe)              ",{}]],"5":[["  )                                                                                         ",{}]],"6":[["                                                                                            ",{}]],"7":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["match-paren",{"fg":4,"bold":true}],[" (arg)                                                                    ",{}]],"8":[["  ",{}],["\"Go to the matching paren if on a paren; otherwise insert %.\"",{"fg":2}],["                             ",{}]],"9":[["  (interactive ",{}],["\"p\"",{"fg":2}],[")                                                                         ",{}]],"10":[["  (",{}],["cond",{"fg":6,"bold":true}],[" ((looking-at ",{}],["\"\\\\s(\"",{"fg":2}],[") (forward-list 1) (backward-char 1))                            ",{}]],"11":[["        ((looking-at ",{}],["\"\\\\s)\"",{"fg":2}],[") (forward-char 1) (backward-list 1))                            ",{}]],"12":[["        (t (self-insert-command (or arg 1)))))                                              ",{}]],"13":[[";;---------------------------------------------------------------------------               ",{"fg":1}]],"14":[["                                                                                            ",{}]],"15":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["join-line-0",{"fg":4,"bold":true}],[" (arg)                                                                    ",{}]],"16":[["  ",{}],["\"\"",{"fg":2}],["                                                                                        ",{}]],"17":[["  (interactive ",{}],["\"p\"",{"fg":2}],[")                                                                         ",{}]],"18":[["  (join-line 0))                                                                            ",{}]],"19":[["                                                                                            ",{}]],"20":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["copy-whole-line",{"fg":4,"bold":true}],["(num)                                                                 ",{}]],"21":[["  (point-to-register 0)                                                                     ",{}]],"22":[["  (beginning-of-line)                                                                       ",{}]],"23":[["  (",{}],["let",{"fg":6,"bold":true}],[" ((begin-point (point)))                                                              ",{}]],"24":[["    (forward-line num)                                                                      ",{}]],"25":[["    (copy-region-as-kill begin-point (point)))                                              ",{}]],"26":[["  (jump-to-register 0) )                                                                    ",{}]],"27":[["(",{}],["defun",{"fg":6,"bold":true}],[" ",{}],["get-mark-pos-ex",{"fg":4,"bold":true}],[" ()                                                                   ",{}]]},"cursor":{"x":78,"visible":false}}],[5.5e-05,{"lines":{"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   45% L203  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"x":32,"visible":true}}],[0.449633,{"lines":{"1":[[";; `(                                                                                       ",{"fg":1}]],"2":[[";;   (\"/\" ignore) (\".\" ignore) (\"a\" switch-cc-to-h)(\",\" ignore)  (\"i\" emaci-q) (\"w\" forward",{"fg":1}],["\\",{}]],"3":[["-word) (\"I\"  ignore)                                                                        ",{"fg":1}]],"4":[[";;   (\"d\"  ignore) (\"s\"  ignore) (\"*\"  ignore) (\";\"  ignore) (\"g\"  ffap) (\"u\"  ignore)      ",{"fg":1}]],"5":[[";;   (\"<backspace>\"  backward-word) (\"<return>\" next-logical-line) (\"r\"  remake-tags) (\"z\" ",{"fg":1}],["\\",{}]],"6":[[" ignore)                                                                                    ",{"fg":1}]],"7":[[";;   (\"p\" proto-show-msg)                                                                   ",{"fg":1}]],"8":[[";;   (\"<SPC>\" ignore)                                                                       ",{"fg":1}]],"9":[[";;   (\"j\" my-next-line)                                                                     ",{"fg":1}]]},"cursor":{"x":0,"y":10,"visible":false}}],[0.000268,{"lines":{"10":[[";;   (\"G\" end-of-buffer)                                                                    ",{"fg":1}]],"11":[[";;   (\"k\" previous-logical-line)                                                            ",{"fg":1}]],"12":[[";;   (\"K\" man)                                                                              ",{"fg":1}]],"13":[[";;   (\":\" viper-ex)                                                                         ",{"fg":1}]],"14":[[";;   (\"[\"  ignore) (\"]\" ignore)))                                                           ",{"fg":1}]],"15":[[";;;;------------------------------------------------------                                  ",{"fg":1}]],"16":[["                                                                                            ",{}]],"17":[["                                                                                            ",{}]],"18":[["                                                                                            ",{}]],"20":[["                                                                                            ",{}]],"21":[["                                                                                            ",{}]],"22":[["                                                                                            ",{}]],"23":[["                                                                                            ",{}]],"24":[["                                                                                            ",{}]],"25":[["                                                                                            ",{}]],"26":[["                                                                                            ",{}]],"27":[["                                                                                            ",{}]],"28":[["-UUU:----F1  ",{"inverse":true}],["xcwen-misc.el",{"bold":true,"inverse":true}],["   Bot L479  Git:master  (Emacs-Lisp yas AC) <V>  ----------------",{"inverse":true}]]},"cursor":{"y":15,"visible":true}}],[0.646448,{"lines":{"0":[["File Edit Options Buffers Tools Minibuf Help                                                ",{"inverse":true}]],"29":[[":",{"fg":4}],["(default 555)                                                                              ",{}]]},"cursor":{"x":15,"y":29}}],[0.223801,{"lines":{"29":[[":",{"fg":4}],["q",{"fg":0,"bg":5}],["                                                                                          ",{}]]},"cursor":{"x":2,"visible":false}}],[5.6e-05,{"cursor":{"visible":true}}],[0.96423,{"lines":{"29":[["(No files need saving)                                                                      ",{}]]},"cursor":{"x":0,"y":15}}],[0.158889,{"lines":{"29":[["Wrote /home/jim/.emacs.d/.session                                                           ",{}]]}}],[0.183822,{"lines":{"29":[["Wrote /home/jim/.emacs.d/ac-comphist.dat                                                    ",{}]]}}],[0.042402,{"lines":{"0":[["--geometry, -g GEOMETRY         window geometry                                             ",{}]],"1":[["--no-bitmap-icon, -nbi          do not use picture of gnu for Emacs icon                    ",{}]],"2":[["--iconic                        start Emacs in iconified state                              ",{}]],"3":[["--internal-border, -ib WIDTH    width between text and main border                          ",{}]],"4":[["--line-spacing, -lsp PIXELS     additional space to put between lines                       ",{}]],"5":[["--mouse-color, -ms COLOR        mouse cursor color in Emacs window                          ",{}]],"6":[["--name NAME                     title for initial Emacs frame                               ",{}]],"7":[["--no-blinking-cursor, -nbc      disable blinking cursor                                     ",{}]],"8":[["--reverse-video, -r, -rv        switch foreground and background                            ",{}]],"9":[["--title, -T TITLE               title for initial Emacs frame                               ",{}]],"10":[["--vertical-scroll-bars, -vb     enable vertical scroll bars                                 ",{}]],"11":[["--xrm XRESOURCES                set additional X resources                                  ",{}]],"12":[["--parent-id XID                 set parent window                                           ",{}]],"13":[["--help                          display this help and exit                                  ",{}]],"14":[["--version                       output version information and exit                         ",{}]],"15":[["                                                                                            ",{}]],"16":[["You can generally also specify long option names with a single -; for                       ",{}]],"17":[["example, -batch as well as --batch.  You can use any unambiguous                            ",{}]],"18":[["abbreviation for a --option.                                                                ",{}]],"20":[["Various environment variables and window system resources also affect                       ",{}]],"21":[["Emacs' operation.  See the main documentation.                                              ",{}]],"23":[["Report bugs to bug-gnu-emacs@gnu.org.  First, please see the Bugs                           ",{}]],"24":[["section of the Emacs manual or the file BUGS.                                               ",{}]],"25":[["jim@desktop~/bin$                                                                           ",{}]],"26":[["jim@desktop~/bin$                                                                           ",{}]],"27":[["jim@desktop~/bin$ emacs --nw                                                                ",{}]],"28":[["jim@desktop~/bin$ emacs -nw                                                                 ",{}]],"29":[["                                                                                            ",{}]]},"cursor":{"y":29}}],[0.003682,{"lines":{"29":[["jim@desktop~/bin$                                                                           ",{}]]},"cursor":{"x":18}}],[2.013077,{"lines":{"29":[["jim@desktop~/bin$ e                                                                         ",{}]]},"cursor":{"x":19}}],[0.159981,{"lines":{"29":[["jim@desktop~/bin$ ex                                                                        ",{}]]},"cursor":{"x":20}}],[0.120095,{"lines":{"29":[["jim@desktop~/bin$ exi                                                                       ",{}]]},"cursor":{"x":21}}],[0.09576800000000001,{"lines":{"29":[["jim@desktop~/bin$ exit                                                                      ",{}]]},"cursor":{"x":22}}],[0.137092,{"lines":{"0":[["--iconic                        start Emacs in iconified state                              ",{}]],"1":[["--internal-border, -ib WIDTH    width between text and main border                          ",{}]],"2":[["--line-spacing, -lsp PIXELS     additional space to put between lines                       ",{}]],"3":[["--mouse-color, -ms COLOR        mouse cursor color in Emacs window                          ",{}]],"4":[["--name NAME                     title for initial Emacs frame                               ",{}]],"5":[["--no-blinking-cursor, -nbc      disable blinking cursor                                     ",{}]],"6":[["--reverse-video, -r, -rv        switch foreground and background                            ",{}]],"7":[["--title, -T TITLE               title for initial Emacs frame                               ",{}]],"8":[["--vertical-scroll-bars, -vb     enable vertical scroll bars                                 ",{}]],"9":[["--xrm XRESOURCES                set additional X resources                                  ",{}]],"10":[["--parent-id XID                 set parent window                                           ",{}]],"11":[["--help                          display this help and exit                                  ",{}]],"12":[["--version                       output version information and exit                         ",{}]],"13":[["                                                                                            ",{}]],"14":[["You can generally also specify long option names with a single -; for                       ",{}]],"15":[["example, -batch as well as --batch.  You can use any unambiguous                            ",{}]],"16":[["abbreviation for a --option.                                                                ",{}]],"17":[["                                                                                            ",{}]],"18":[["Various environment variables and window system resources also affect                       ",{}]],"19":[["Emacs' operation.  See the main documentation.                                              ",{}]],"20":[["                                                                                            ",{}]],"21":[["Report bugs to bug-gnu-emacs@gnu.org.  First, please see the Bugs                           ",{}]],"22":[["section of the Emacs manual or the file BUGS.                                               ",{}]],"23":[["jim@desktop~/bin$                                                                           ",{}]],"24":[["jim@desktop~/bin$                                                                           ",{}]],"25":[["jim@desktop~/bin$ emacs --nw                                                                ",{}]],"26":[["jim@desktop~/bin$ emacs -nw                                                                 ",{}]],"27":[["jim@desktop~/bin$ exit                                                                      ",{}]],"28":[["exit                                                                                        ",{}]],"29":[["                                                                                            ",{}]]},"cursor":{"x":0}}]]